// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

#nullable disable

namespace com.orthofeet.Entities
{
    public partial class SageX3Context : DbContext
    {
        public SageX3Context()
        {
        }

        public SageX3Context(DbContextOptions<SageX3Context> options)
            : base(options)
        {
        }

        public virtual DbSet<Abank> Abanks { get; set; }
        public virtual DbSet<Abicond> Abiconds { get; set; }
        public virtual DbSet<Abidatmrt> Abidatmrts { get; set; }
        public virtual DbSet<Abidatwrh> Abidatwrhs { get; set; }
        public virtual DbSet<Abidim> Abidims { get; set; }
        public virtual DbSet<Abidimfld> Abidimflds { get; set; }
        public virtual DbSet<Abihiera> Abihieras { get; set; }
        public virtual DbSet<Abiprfusr> Abiprfusrs { get; set; }
        public virtual DbSet<Abiregde> Abiregdes { get; set; }
        public virtual DbSet<Abiregorg> Abiregorgs { get; set; }
        public virtual DbSet<Abireport> Abireports { get; set; }
        public virtual DbSet<Abireportd> Abireportds { get; set; }
        public virtual DbSet<Abitabagg> Abitabaggs { get; set; }
        public virtual DbSet<Abitabdat> Abitabdats { get; set; }
        public virtual DbSet<Abitabfld> Abitabflds { get; set; }
        public virtual DbSet<Abitabind> Abitabinds { get; set; }
        public virtual DbSet<Abitablnk> Abitablnks { get; set; }
        public virtual DbSet<Abitraunv> Abitraunvs { get; set; }
        public virtual DbSet<Ablob> Ablobs { get; set; }
        public virtual DbSet<Acalcul> Acalculs { get; set; }
        public virtual DbSet<Acccod> Acccods { get; set; }
        public virtual DbSet<Acce> Acces { get; set; }
        public virtual DbSet<Achange> Achanges { get; set; }
        public virtual DbSet<Aclob> Aclobs { get; set; }
        public virtual DbSet<Acodnum> Acodnums { get; set; }
        public virtual DbSet<Aconsult> Aconsults { get; set; }
        public virtual DbSet<Actcodpar> Actcodpars { get; set; }
        public virtual DbSet<Action> Actions { get; set; }
        public virtual DbSet<Activ> Activs { get; set; }
        public virtual DbSet<Actl> Actls { get; set; }
        public virtual DbSet<Actpar> Actpars { get; set; }
        public virtual DbSet<Adelete> Adeletes { get; set; }
        public virtual DbSet<Adictrt> Adictrts { get; set; }
        public virtual DbSet<Adocblb> Adocblbs { get; set; }
        public virtual DbSet<Adocclb> Adocclbs { get; set; }
        public virtual DbSet<Adocfld> Adocflds { get; set; }
        public virtual DbSet<Adocfnc> Adocfncs { get; set; }
        public virtual DbSet<Adocument> Adocuments { get; set; }
        public virtual DbSet<Adopar> Adopars { get; set; }
        public virtual DbSet<Adoval> Adovals { get; set; }
        public virtual DbSet<Adovalau> Adovalaus { get; set; }
        public virtual DbSet<Adovalgrp> Adovalgrps { get; set; }
        public virtual DbSet<Aelt> Aelts { get; set; }
        public virtual DbSet<Aeltlink> Aeltlinks { get; set; }
        public virtual DbSet<Aenchaine> Aenchaines { get; set; }
        public virtual DbSet<Aentree> Aentrees { get; set; }
        public virtual DbSet<Aespion> Aespions { get; set; }
        public virtual DbSet<Aexpv3> Aexpv3 { get; set; }
        public virtual DbSet<Aexpv3d> Aexpv3d { get; set; }
        public virtual DbSet<Afctexe> Afctexes { get; set; }
        public virtual DbSet<Afctfct> Afctfcts { get; set; }
        public virtual DbSet<Afctfcy> Afctfcies { get; set; }
        public virtual DbSet<Afctprf> Afctprfs { get; set; }
        public virtual DbSet<Afonction> Afonctions { get; set; }
        public virtual DbSet<Aglobvar> Aglobvars { get; set; }
        public virtual DbSet<Agrpcpy> Agrpcpies { get; set; }
        public virtual DbSet<Agrpfcy> Agrpfcies { get; set; }
        public virtual DbSet<Ahisto> Ahistoes { get; set; }
        public virtual DbSet<Ahistod> Ahistods { get; set; }
        public virtual DbSet<Aindex> Aindexes { get; set; }
        public virtual DbSet<Alink> Alinks { get; set; }
        public virtual DbSet<Alistec> Alistecs { get; set; }
        public virtual DbSet<Alisted> Alisteds { get; set; }
        public virtual DbSet<Alisteh> Alistehs { get; set; }
        public virtual DbSet<Alistel> Alistels { get; set; }
        public virtual DbSet<Alister> Alisters { get; set; }
        public virtual DbSet<Alistet> Alistets { get; set; }
        public virtual DbSet<Alnksub> Alnksubs { get; set; }
        public virtual DbSet<Alogin> Alogins { get; set; }
        public virtual DbSet<Alstrd> Alstrds { get; set; }
        public virtual DbSet<Amaint> Amaints { get; set; }
        public virtual DbSet<Amemo> Amemoes { get; set; }
        public virtual DbSet<Amenloc> Amenlocs { get; set; }
        public virtual DbSet<Amenuser> Amenusers { get; set; }
        public virtual DbSet<Ametuti> Ametutis { get; set; }
        public virtual DbSet<Amsk> Amsks { get; set; }
        public virtual DbSet<Amskact> Amskacts { get; set; }
        public virtual DbSet<Amskpar> Amskpars { get; set; }
        public virtual DbSet<Amskzon> Amskzons { get; set; }
        public virtual DbSet<Anavcre> Anavcres { get; set; }
        public virtual DbSet<Anavfil> Anavfils { get; set; }
        public virtual DbSet<Anavig> Anavigs { get; set; }
        public virtual DbSet<Anetvibe> Anetvibes { get; set; }
        public virtual DbSet<Annuaire> Annuaires { get; set; }
        public virtual DbSet<Aobjbur> Aobjburs { get; set; }
        public virtual DbSet<Aobjburmod> Aobjburmods { get; set; }
        public virtual DbSet<Aobjet> Aobjets { get; set; }
        public virtual DbSet<Aobjext> Aobjexts { get; set; }
        public virtual DbSet<Aobjextd> Aobjextds { get; set; }
        public virtual DbSet<Aobjextmp> Aobjextmps { get; set; }
        public virtual DbSet<Aobjextmpb> Aobjextmpbs { get; set; }
        public virtual DbSet<Aobjextmpc> Aobjextmpcs { get; set; }
        public virtual DbSet<Aobjextmpd> Aobjextmpds { get; set; }
        public virtual DbSet<Aobjextmpe> Aobjextmpes { get; set; }
        public virtual DbSet<Aobjextr> Aobjextrs { get; set; }
        public virtual DbSet<Aobjlnk> Aobjlnks { get; set; }
        public virtual DbSet<Aobjlst> Aobjlsts { get; set; }
        public virtual DbSet<Aobjprop> Aobjprops { get; set; }
        public virtual DbSet<Aobjsel> Aobjsels { get; set; }
        public virtual DbSet<Aobjtab> Aobjtabs { get; set; }
        public virtual DbSet<Aobjtxt> Aobjtxts { get; set; }
        public virtual DbSet<Aobjtxta> Aobjtxtas { get; set; }
        public virtual DbSet<Aparimpexp> Aparimpexps { get; set; }
        public virtual DbSet<Apatch> Apatches { get; set; }
        public virtual DbSet<Apatchmod> Apatchmods { get; set; }
        public virtual DbSet<Aplcom> Aplcoms { get; set; }
        public virtual DbSet<Apllck> Apllcks { get; set; }
        public virtual DbSet<Aplstd> Aplstds { get; set; }
        public virtual DbSet<Aportmod> Aportmods { get; set; }
        public virtual DbSet<Aporttab> Aporttabs { get; set; }
        public virtual DbSet<Aportuser> Aportusers { get; set; }
        public virtual DbSet<Aportvig> Aportvigs { get; set; }
        public virtual DbSet<Aprintde> Aprintdes { get; set; }
        public virtual DbSet<Aprinter> Aprinters { get; set; }
        public virtual DbSet<Aprocessu> Aprocessus { get; set; }
        public virtual DbSet<Aproctexte> Aproctextes { get; set; }
        public virtual DbSet<Aprofil> Aprofils { get; set; }
        public virtual DbSet<Aproman> Apromen { get; set; }
        public virtual DbSet<Aprtau> Aprtaus { get; set; }
        public virtual DbSet<Aprtbrw> Aprtbrws { get; set; }
        public virtual DbSet<Aptlpage> Aptlpages { get; set; }
        public virtual DbSet<Aptlvw> Aptlvws { get; set; }
        public virtual DbSet<Archpar> Archpars { get; set; }
        public virtual DbSet<Archpare> Archpares { get; set; }
        public virtual DbSet<Archparu> Archparus { get; set; }
        public virtual DbSet<Archparw> Archparws { get; set; }
        public virtual DbSet<Arefaml> Arefamls { get; set; }
        public virtual DbSet<Areftxt> Areftxts { get; set; }
        public virtual DbSet<Areport> Areports { get; set; }
        public virtual DbSet<Areport1> Areports1 { get; set; }
        public virtual DbSet<Areporta> Areportas { get; set; }
        public virtual DbSet<Areportd> Areportds { get; set; }
        public virtual DbSet<Areportg> Areportgs { get; set; }
        public virtual DbSet<Areportm> Areportms { get; set; }
        public virtual DbSet<Areportv> Areportvs { get; set; }
        public virtual DbSet<Areportx> Areportxes { get; set; }
        public virtual DbSet<Areportz> Areportzs { get; set; }
        public virtual DbSet<Arole> Aroles { get; set; }
        public virtual DbSet<Assconf> Assconfs { get; set; }
        public virtual DbSet<Astr> Astrs { get; set; }
        public virtual DbSet<Astractfld> Astractflds { get; set; }
        public virtual DbSet<Astrfld> Astrflds { get; set; }
        public virtual DbSet<Astrlist> Astrlists { get; set; }
        public virtual DbSet<Astrlistd> Astrlistds { get; set; }
        public virtual DbSet<Astrmet> Astrmets { get; set; }
        public virtual DbSet<Astrparfld> Astrparflds { get; set; }
        public virtual DbSet<Astrxml> Astrxmls { get; set; }
        public virtual DbSet<Astrxmld> Astrxmlds { get; set; }
        public virtual DbSet<Astyle> Astyles { get; set; }
        public virtual DbSet<Astylec> Astylecs { get; set; }
        public virtual DbSet<Astylep> Astyleps { get; set; }
        public virtual DbSet<Asubprog> Asubprogs { get; set; }
        public virtual DbSet<Asubprogd> Asubprogds { get; set; }
        public virtual DbSet<Atabaud> Atabauds { get; set; }
        public virtual DbSet<Atabdiv> Atabdivs { get; set; }
        public virtual DbSet<Atabind> Atabinds { get; set; }
        public virtual DbSet<Atable> Atables { get; set; }
        public virtual DbSet<Atabtab> Atabtabs { get; set; }
        public virtual DbSet<Atabzon> Atabzons { get; set; }
        public virtual DbSet<Atexmod> Atexmods { get; set; }
        public virtual DbSet<Atexte> Atextes { get; set; }
        public virtual DbSet<Atextra> Atextras { get; set; }
        public virtual DbSet<Atmptra> Atmptras { get; set; }
        public virtual DbSet<Atransac> Atransacs { get; set; }
        public virtual DbSet<Atype> Atypes { get; set; }
        public virtual DbSet<Audith> Audiths { get; set; }
        public virtual DbSet<Auditl> Auditls { get; set; }
        public virtual DbSet<Aurl> Aurls { get; set; }
        public virtual DbSet<Ausrbpr> Ausrbprs { get; set; }
        public virtual DbSet<Autili> Autilis { get; set; }
        public virtual DbSet<Avalatt> Avalatts { get; set; }
        public virtual DbSet<Avalnum> Avalnums { get; set; }
        public virtual DbSet<Avarloc> Avarlocs { get; set; }
        public virtual DbSet<Aview> Aviews { get; set; }
        public virtual DbSet<Aviewb> Aviewbs { get; set; }
        public virtual DbSet<Aviewc> Aviewcs { get; set; }
        public virtual DbSet<Aviewd> Aviewds { get; set; }
        public virtual DbSet<Avocab> Avocabs { get; set; }
        public virtual DbSet<Awebserde> Awebserdes { get; set; }
        public virtual DbSet<Awebservic> Awebservics { get; set; }
        public virtual DbSet<Awinbout> Awinbouts { get; set; }
        public virtual DbSet<Awinbro> Awinbroes { get; set; }
        public virtual DbSet<Awindow> Awindows { get; set; }
        public virtual DbSet<Awinpar> Awinpars { get; set; }
        public virtual DbSet<Awrkhisde> Awrkhisdes { get; set; }
        public virtual DbSet<Awrkhisjoi> Awrkhisjois { get; set; }
        public virtual DbSet<Awrkhisme> Awrkhismes { get; set; }
        public virtual DbSet<Awrkhissui> Awrkhissuis { get; set; }
        public virtual DbSet<Awrklnk> Awrklnks { get; set; }
        public virtual DbSet<Awrkpar> Awrkpars { get; set; }
        public virtual DbSet<Awrkparc> Awrkparcs { get; set; }
        public virtual DbSet<Awrkparf> Awrkparves { get; set; }
        public virtual DbSet<Awrkparh> Awrkparhs { get; set; }
        public virtual DbSet<Awrkparx> Awrkparxes { get; set; }
        public virtual DbSet<Awrkreg> Awrkregs { get; set; }
        public virtual DbSet<Awrkregval> Awrkregvals { get; set; }
        public virtual DbSet<Awrktrn> Awrktrns { get; set; }
        public virtual DbSet<Awrktrnd> Awrktrnds { get; set; }
        public virtual DbSet<Awrkusr> Awrkusrs { get; set; }
        public virtual DbSet<Awsdl> Awsdls { get; set; }
        public virtual DbSet<Awsdl1> Awsdl1 { get; set; }
        public virtual DbSet<Balana> Balanas { get; set; }
        public virtual DbSet<Balance> Balances { get; set; }
        public virtual DbSet<Bank> Banks { get; set; }
        public virtual DbSet<Banrec> Banrecs { get; set; }
        public virtual DbSet<Banrecd> Banrecds { get; set; }
        public virtual DbSet<Bappoint> Bappoints { get; set; }
        public virtual DbSet<Batch> Batches { get; set; }
        public virtual DbSet<Benchtr> Benchtrs { get; set; }
        public virtual DbSet<Betcpy> Betcpies { get; set; }
        public virtual DbSet<Betcpyl> Betcpyls { get; set; }
        public virtual DbSet<Bid> Bids { get; set; }
        public virtual DbSet<Bilsta> Bilstas { get; set; }
        public virtual DbSet<Blacmm> Blacmms { get; set; }
        public virtual DbSet<Blaqty> Blaqties { get; set; }
        public virtual DbSet<Bom> Boms { get; set; }
        public virtual DbSet<Bomd> Bomds { get; set; }
        public virtual DbSet<Bomprn> Bomprns { get; set; }
        public virtual DbSet<Bomret> Bomrets { get; set; }
        public virtual DbSet<Bomwu> Bomwus { get; set; }
        public virtual DbSet<Box1099> Box1099 { get; set; }
        public virtual DbSet<Bp1099begbal> Bp1099begbal { get; set; }
        public virtual DbSet<Bp1099prn> Bp1099prn { get; set; }
        public virtual DbSet<Bpaddress> Bpaddresses { get; set; }
        public virtual DbSet<Bpartner> Bpartners { get; set; }
        public virtual DbSet<Bpcarrier> Bpcarriers { get; set; }
        public virtual DbSet<Bpccateg> Bpccategs { get; set; }
        public virtual DbSet<Bpcinvlig> Bpcinvligs { get; set; }
        public virtual DbSet<Bpcinvliga> Bpcinvligas { get; set; }
        public virtual DbSet<Bpcinvvat> Bpcinvvats { get; set; }
        public virtual DbSet<Bpcustmvt> Bpcustmvts { get; set; }
        public virtual DbSet<Bpcustomer> Bpcustomers { get; set; }
        public virtual DbSet<Bpdlvcust> Bpdlvcusts { get; set; }
        public virtual DbSet<Bpexcept> Bpexcepts { get; set; }
        public virtual DbSet<Bpmisc> Bpmiscs { get; set; }
        public virtual DbSet<Bpmisccgf> Bpmisccgfs { get; set; }
        public virtual DbSet<Bps1099gen> Bps1099gen { get; set; }
        public virtual DbSet<Bps1099mnt> Bps1099mnt { get; set; }
        public virtual DbSet<Bps1099pay> Bps1099pay { get; set; }
        public virtual DbSet<Bpscateg> Bpscategs { get; set; }
        public virtual DbSet<Bpshisupln> Bpshisuplns { get; set; }
        public virtual DbSet<Bpshisupp> Bpshisupps { get; set; }
        public virtual DbSet<Bpsinvlig> Bpsinvligs { get; set; }
        public virtual DbSet<Bpsinvliga> Bpsinvligas { get; set; }
        public virtual DbSet<Bpsupplier> Bpsuppliers { get; set; }
        public virtual DbSet<Bpsuppmvt> Bpsuppmvts { get; set; }
        public virtual DbSet<Brdkey> Brdkeys { get; set; }
        public virtual DbSet<Bud> Buds { get; set; }
        public virtual DbSet<Budforcal> Budforcals { get; set; }
        public virtual DbSet<Budod> Budods { get; set; }
        public virtual DbSet<Budod1> Budods1 { get; set; }
        public virtual DbSet<Budpar> Budpars { get; set; }
        public virtual DbSet<Budpuraud> Budpurauds { get; set; }
        public virtual DbSet<Budvarcal> Budvarcals { get; set; }
        public virtual DbSet<Budver> Budvers { get; set; }
        public virtual DbSet<Caauz> Caauzs { get; set; }
        public virtual DbSet<Cacce> Cacces { get; set; }
        public virtual DbSet<Caccedef> Caccedefs { get; set; }
        public virtual DbSet<Cadiedef> Cadiedefs { get; set; }
        public virtual DbSet<Cadistmp> Cadistmps { get; set; }
        public virtual DbSet<Cadsp> Cadsps { get; set; }
        public virtual DbSet<Calcdbg> Calcdbgs { get; set; }
        public virtual DbSet<Callattemp> Callattemps { get; set; }
        public virtual DbSet<Capvar> Capvars { get; set; }
        public virtual DbSet<Cararea> Carareas { get; set; }
        public virtual DbSet<Carprice> Carprices { get; set; }
        public virtual DbSet<Cblob> Cblobs { get; set; }
        public virtual DbSet<Cbndet> Cbndets { get; set; }
        public virtual DbSet<Cbnhea> Cbnheas { get; set; }
        public virtual DbSet<Cbnwrk> Cbnwrks { get; set; }
        public virtual DbSet<Cdfcod> Cdfcods { get; set; }
        public virtual DbSet<Cdfcpy> Cdfcpies { get; set; }
        public virtual DbSet<Cdffcy> Cdffcies { get; set; }
        public virtual DbSet<Cdfpar> Cdfpars { get; set; }
        public virtual DbSet<Cdiadsp> Cdiadsps { get; set; }
        public virtual DbSet<Chqbok> Chqboks { get; set; }
        public virtual DbSet<Chqnum> Chqnums { get; set; }
        public virtual DbSet<Cmarketing> Cmarketings { get; set; }
        public virtual DbSet<Company> Companies { get; set; }
        public virtual DbSet<Contact> Contacts { get; set; }
        public virtual DbSet<Contactcrm> Contactcrms { get; set; }
        public virtual DbSet<Contamt> Contamts { get; set; }
        public virtual DbSet<Contamtx> Contamtxes { get; set; }
        public virtual DbSet<Contcare> Contcares { get; set; }
        public virtual DbSet<Contcov> Contcovs { get; set; }
        public virtual DbSet<Context> Contexts { get; set; }
        public virtual DbSet<Contidx> Contidxes { get; set; }
        public virtual DbSet<Contitm> Contitms { get; set; }
        public virtual DbSet<Contpbl> Contpbls { get; set; }
        public virtual DbSet<Contqual> Contquals { get; set; }
        public virtual DbSet<Contrew> Contrews { get; set; }
        public virtual DbSet<Contrewx> Contrewxes { get; set; }
        public virtual DbSet<Contserv> Contservs { get; set; }
        public virtual DbSet<Contservx> Contservxes { get; set; }
        public virtual DbSet<Conttempl> Conttempls { get; set; }
        public virtual DbSet<Correp> Correps { get; set; }
        public virtual DbSet<Correspond> Corresponds { get; set; }
        public virtual DbSet<Cptanalin> Cptanalins { get; set; }
        public virtual DbSet<Cptfootlnk> Cptfootlnks { get; set; }
        public virtual DbSet<Crmclob> Crmclobs { get; set; }
        public virtual DbSet<Crmtr> Crmtrs { get; set; }
        public virtual DbSet<Crmtrsval> Crmtrsvals { get; set; }
        public virtual DbSet<Csfparh> Csfparhs { get; set; }
        public virtual DbSet<Csfparl> Csfparls { get; set; }
        public virtual DbSet<Csfre> Csfres { get; set; }
        public virtual DbSet<Ctrlnivw> Ctrlnivws { get; set; }
        public virtual DbSet<Cunlisdet> Cunlisdets { get; set; }
        public virtual DbSet<Cunliste> Cunlistes { get; set; }
        public virtual DbSet<Cunsession> Cunsessions { get; set; }
        public virtual DbSet<Dadcpy> Dadcpies { get; set; }
        public virtual DbSet<Dadfcy> Dadfcies { get; set; }
        public virtual DbSet<Dclvat> Dclvats { get; set; }
        public virtual DbSet<Dclvatpay> Dclvatpays { get; set; }
        public virtual DbSet<Defval> Defvals { get; set; }
        public virtual DbSet<Deprec> Deprecs { get; set; }
        public virtual DbSet<Deprecarc> Deprecarcs { get; set; }
        public virtual DbSet<Diahou> Diahous { get; set; }
        public virtual DbSet<Dietr> Dietrs { get; set; }
        public virtual DbSet<Dietrsxx> Dietrsxxes { get; set; }
        public virtual DbSet<Dkskey> Dkskeys { get; set; }
        public virtual DbSet<Doobpcint> Doobpcints { get; set; }
        public virtual DbSet<Doobpclnk> Doobpclnks { get; set; }
        public virtual DbSet<Dprmod> Dprmods { get; set; }
        public virtual DbSet<Dprmodopt> Dprmodopts { get; set; }
        public virtual DbSet<Dprmodrat> Dprmodrats { get; set; }
        public virtual DbSet<Edifrm> Edifrms { get; set; }
        public virtual DbSet<Edipar> Edipars { get; set; }
        public virtual DbSet<Ediseg> Edisegs { get; set; }
        public virtual DbSet<Editrbk> Editrbks { get; set; }
        public virtual DbSet<Edtdadsu> Edtdadsus { get; set; }
        public virtual DbSet<Edttd> Edttds { get; set; }
        public virtual DbSet<Efasact> Efasacts { get; set; }
        public virtual DbSet<Efasaffage> Efasaffages { get; set; }
        public virtual DbSet<Efaschgimp> Efaschgimps { get; set; }
        public virtual DbSet<Efaschgppl> Efaschgppls { get; set; }
        public virtual DbSet<Efascnl> Efascnls { get; set; }
        public virtual DbSet<Efascrt> Efascrts { get; set; }
        public virtual DbSet<Efasiml> Efasimls { get; set; }
        public virtual DbSet<Efasiss> Efasisses { get; set; }
        public virtual DbSet<Efaslnkcnl> Efaslnkcnls { get; set; }
        public virtual DbSet<Efasmtc> Efasmtcs { get; set; }
        public virtual DbSet<Efasreeval> Efasreevals { get; set; }
        public virtual DbSet<Efasvatreg> Efasvatregs { get; set; }
        public virtual DbSet<Elofcim> Elofcims { get; set; }
        public virtual DbSet<Elofcnl> Elofcnls { get; set; }
        public virtual DbSet<Elofvatreg> Elofvatregs { get; set; }
        public virtual DbSet<Emodele> Emodeles { get; set; }
        public virtual DbSet<Ephyaffgeo> Ephyaffgeos { get; set; }
        public virtual DbSet<Ephycrt> Ephycrts { get; set; }
        public virtual DbSet<Ephyiss> Ephyisses { get; set; }
        public virtual DbSet<Escsre> Escsres { get; set; }
        public virtual DbSet<Evefa> Evefas { get; set; }
        public virtual DbSet<Evelof> Evelofs { get; set; }
        public virtual DbSet<Exkword> Exkwords { get; set; }
        public virtual DbSet<Exparam> Exparams { get; set; }
        public virtual DbSet<Expens> Expenses { get; set; }
        public virtual DbSet<Expensesh> Expenseshes { get; set; }
        public virtual DbSet<Facgroup> Facgroups { get; set; }
        public virtual DbSet<Facility> Facilities { get; set; }
        public virtual DbSet<Factor> Factors { get; set; }
        public virtual DbSet<Fampb> Fampbs { get; set; }
        public virtual DbSet<Fampbque> Fampbques { get; set; }
        public virtual DbSet<Fampbrep> Fampbreps { get; set; }
        public virtual DbSet<Fiedic> Fiedics { get; set; }
        public virtual DbSet<Fiedicfie> Fiedicfies { get; set; }
        public virtual DbSet<Filtd> Filtds { get; set; }
        public virtual DbSet<Fiscalyear> Fiscalyears { get; set; }
        public virtual DbSet<Fiscyear> Fiscyears { get; set; }
        public virtual DbSet<Frefld> Freflds { get; set; }
        public virtual DbSet<Fup> Fups { get; set; }
        public virtual DbSet<Fupgrp> Fupgrps { get; set; }
        public virtual DbSet<Fuptot> Fuptots { get; set; }
        public virtual DbSet<Fuptxt> Fuptxts { get; set; }
        public virtual DbSet<Fxdasset> Fxdassets { get; set; }
        public virtual DbSet<Fxdlifl> Fxdlifls { get; set; }
        public virtual DbSet<Fxdmvt> Fxdmvts { get; set; }
        public virtual DbSet<Fxdmvtd> Fxdmvtds { get; set; }
        public virtual DbSet<Gacccl> Gacccls { get; set; }
        public virtual DbSet<Gacccode> Gacccodes { get; set; }
        public virtual DbSet<Gacccodlig> Gacccodligs { get; set; }
        public virtual DbSet<Gaccdef> Gaccdefs { get; set; }
        public virtual DbSet<Gaccdencod> Gaccdencods { get; set; }
        public virtual DbSet<Gaccdim> Gaccdims { get; set; }
        public virtual DbSet<Gaccdudate> Gaccdudates { get; set; }
        public virtual DbSet<Gaccentry> Gaccentries { get; set; }
        public virtual DbSet<Gaccentrya> Gaccentryas { get; set; }
        public virtual DbSet<Gaccentryd> Gaccentryds { get; set; }
        public virtual DbSet<Gaccfix> Gaccfixes { get; set; }
        public virtual DbSet<Gaccfiyena> Gaccfiyenas { get; set; }
        public virtual DbSet<Gaccfiyend> Gaccfiyends { get; set; }
        public virtual DbSet<Gaccgrupym> Gaccgrupyms { get; set; }
        public virtual DbSet<Gaccount> Gaccounts { get; set; }
        public virtual DbSet<Gaccpym> Gaccpyms { get; set; }
        public virtual DbSet<Gaccpymlik> Gaccpymliks { get; set; }
        public virtual DbSet<Gaccpymprt> Gaccpymprts { get; set; }
        public virtual DbSet<Gacctmp> Gacctmps { get; set; }
        public virtual DbSet<Gacctmpa> Gacctmpas { get; set; }
        public virtual DbSet<Gacctmpd> Gacctmpds { get; set; }
        public virtual DbSet<Gacm> Gacms { get; set; }
        public virtual DbSet<Gajousta> Gajoustas { get; set; }
        public virtual DbSet<Gaparbse> Gaparbses { get; set; }
        public virtual DbSet<Gapardum> Gapardums { get; set; }
        public virtual DbSet<Gautace> Gautaces { get; set; }
        public virtual DbSet<Gautaced> Gautaceds { get; set; }
        public virtual DbSet<Gautacef> Gautacefs { get; set; }
        public virtual DbSet<Gbagscr> Gbagscrs { get; set; }
        public virtual DbSet<Gcaccoa> Gcaccoas { get; set; }
        public virtual DbSet<Gccegrupym> Gccegrupyms { get; set; }
        public virtual DbSet<Gccepym> Gccepyms { get; set; }
        public virtual DbSet<Gccepymlik> Gccepymliks { get; set; }
        public virtual DbSet<Gccepymprt> Gccepymprts { get; set; }
        public virtual DbSet<Gclcacepar> Gclcacepars { get; set; }
        public virtual DbSet<Gcoa> Gcoas { get; set; }
        public virtual DbSet<Gcommit> Gcommits { get; set; }
        public virtual DbSet<Gcommitd> Gcommitds { get; set; }
        public virtual DbSet<Gcommitx> Gcommitxes { get; set; }
        public virtual DbSet<Gdiaacc> Gdiaaccs { get; set; }
        public virtual DbSet<Gdiaaccd> Gdiaaccds { get; set; }
        public virtual DbSet<Gdiaentry> Gdiaentries { get; set; }
        public virtual DbSet<Gdiaentryd> Gdiaentryds { get; set; }
        public virtual DbSet<Gdie> Gdies { get; set; }
        public virtual DbSet<Gdudscr> Gdudscrs { get; set; }
        public virtual DbSet<Gentlot> Gentlots { get; set; }
        public virtual DbSet<Gentlota> Gentlotas { get; set; }
        public virtual DbSet<Gentlotd> Gentlotds { get; set; }
        public virtual DbSet<Gentloth> Gentloths { get; set; }
        public virtual DbSet<Gfupscr> Gfupscrs { get; set; }
        public virtual DbSet<Gjoucoa> Gjoucoas { get; set; }
        public virtual DbSet<Gjournal> Gjournals { get; set; }
        public virtual DbSet<Gled> Gleds { get; set; }
        public virtual DbSet<Grpacemtc> Grpacemtcs { get; set; }
        public virtual DbSet<Grpautace> Grpautaces { get; set; }
        public virtual DbSet<Grpcur> Grpcurs { get; set; }
        public virtual DbSet<Grpdsp> Grpdsps { get; set; }
        public virtual DbSet<Grpsac> Grpsacs { get; set; }
        public virtual DbSet<Gtabacc> Gtabaccs { get; set; }
        public virtual DbSet<Gtabacc2> Gtabacc2 { get; set; }
        public virtual DbSet<Gtmpmtc> Gtmpmtcs { get; set; }
        public virtual DbSet<Gtypaccent> Gtypaccents { get; set; }
        public virtual DbSet<Gvarcodpar> Gvarcodpars { get; set; }
        public virtual DbSet<Gvargau> Gvargaus { get; set; }
        public virtual DbSet<Gvarpargau> Gvarpargaus { get; set; }
        public virtual DbSet<Gvarparval> Gvarparvals { get; set; }
        public virtual DbSet<Hd1clob> Hd1clob { get; set; }
        public virtual DbSet<Hd2clob> Hd2clob { get; set; }
        public virtual DbSet<Hd3clob> Hd3clob { get; set; }
        public virtual DbSet<Hd4clob> Hd4clob { get; set; }
        public virtual DbSet<Hd5clob> Hd5clob { get; set; }
        public virtual DbSet<Hd6clob> Hd6clob { get; set; }
        public virtual DbSet<Hd7clob> Hd7clob { get; set; }
        public virtual DbSet<Hd8clob> Hd8clob { get; set; }
        public virtual DbSet<Hdktask> Hdktasks { get; set; }
        public virtual DbSet<Hdktaskinv> Hdktaskinvs { get; set; }
        public virtual DbSet<Hdktr> Hdktrs { get; set; }
        public virtual DbSet<Hdktrsval> Hdktrsvals { get; set; }
        public virtual DbSet<Histocrm> Histocrms { get; set; }
        public virtual DbSet<Histodud> Histoduds { get; set; }
        public virtual DbSet<Histoomm> Histoomms { get; set; }
        public virtual DbSet<Honlin> Honlins { get; set; }
        public virtual DbSet<Honprv> Honprvs { get; set; }
        public virtual DbSet<Horoitm> Horoitms { get; set; }
        public virtual DbSet<Ilogimg> Ilogimgs { get; set; }
        public virtual DbSet<Imcdetprt> Imcdetprts { get; set; }
        public virtual DbSet<Interven> Intervens { get; set; }
        public virtual DbSet<Invdacpar> Invdacpars { get; set; }
        public virtual DbSet<Invope> Invopes { get; set; }
        public virtual DbSet<Invpar> Invpars { get; set; }
        public virtual DbSet<Invpcr> Invpcrs { get; set; }
        public virtual DbSet<Invprb> Invprbs { get; set; }
        public virtual DbSet<Invpri> Invpris { get; set; }
        public virtual DbSet<Invsta> Invstas { get; set; }
        public virtual DbSet<Itcdet> Itcdets { get; set; }
        public virtual DbSet<Itcdetprt> Itcdetprts { get; set; }
        public virtual DbSet<Itcmat> Itcmats { get; set; }
        public virtual DbSet<Itcmatch> Itcmatches { get; set; }
        public virtual DbSet<Itcnat> Itcnats { get; set; }
        public virtual DbSet<Itcwst> Itcwsts { get; set; }
        public virtual DbSet<Itcwstw> Itcwstws { get; set; }
        public virtual DbSet<Itmabcwrk> Itmabcwrks { get; set; }
        public virtual DbSet<Itmacggrp> Itmacggrps { get; set; }
        public virtual DbSet<Itmbom> Itmboms { get; set; }
        public virtual DbSet<Itmbp> Itmbps { get; set; }
        public virtual DbSet<Itmbpc> Itmbpcs { get; set; }
        public virtual DbSet<Itmcateg> Itmcategs { get; set; }
        public virtual DbSet<Itmcomp> Itmcomps { get; set; }
        public virtual DbSet<Itmcost> Itmcosts { get; set; }
        public virtual DbSet<Itmcpplnk> Itmcpplnks { get; set; }
        public virtual DbSet<Itmcusnom> Itmcusnoms { get; set; }
        public virtual DbSet<Itmfacilit> Itmfacilits { get; set; }
        public virtual DbSet<Itmmaster> Itmmasters { get; set; }
        public virtual DbSet<Itmmvt> Itmmvts { get; set; }
        public virtual DbSet<Itmmvthi> Itmmvthis { get; set; }
        public virtual DbSet<Itmsale> Itmsales { get; set; }
        public virtual DbSet<Labelprn> Labelprns { get; set; }
        public virtual DbSet<Lastcusmvt> Lastcusmvts { get; set; }
        public virtual DbSet<Lastsupmvt> Lastsupmvts { get; set; }
        public virtual DbSet<Layoutfa> Layoutfas { get; set; }
        public virtual DbSet<Lead> Leads { get; set; }
        public virtual DbSet<Lnkcptabd> Lnkcptabds { get; set; }
        public virtual DbSet<Lnkcptabx3> Lnkcptabx3 { get; set; }
        public virtual DbSet<Localizat> Localizats { get; set; }
        public virtual DbSet<Machine> Machines { get; set; }
        public virtual DbSet<Macitn> Macitns { get; set; }
        public virtual DbSet<Macwarreq> Macwarreqs { get; set; }
        public virtual DbSet<Mailing> Mailings { get; set; }
        public virtual DbSet<Mailxml> Mailxmls { get; set; }
        public virtual DbSet<Mailxmld> Mailxmlds { get; set; }
        public virtual DbSet<Marassdef> Marassdefs { get; set; }
        public virtual DbSet<Marassrep> Marassreps { get; set; }
        public virtual DbSet<Mardef> Mardefs { get; set; }
        public virtual DbSet<Mardefval> Mardefvals { get; set; }
        public virtual DbSet<Marrepsec> Marrepsecs { get; set; }
        public virtual DbSet<Marsct> Marscts { get; set; }
        public virtual DbSet<Matchcode> Matchcodes { get; set; }
        public virtual DbSet<Matchtol> Matchtols { get; set; }
        public virtual DbSet<Matcstw> Matcstws { get; set; }
        public virtual DbSet<Media> Media { get; set; }
        public virtual DbSet<Mespar> Mespars { get; set; }
        public virtual DbSet<Mfcdetprt> Mfcdetprts { get; set; }
        public virtual DbSet<Mfcmat> Mfcmats { get; set; }
        public virtual DbSet<Mfcnat> Mfcnats { get; set; }
        public virtual DbSet<Mfcscrap> Mfcscraps { get; set; }
        public virtual DbSet<Mfctyprel> Mfctyprels { get; set; }
        public virtual DbSet<Mfcwst> Mfcwsts { get; set; }
        public virtual DbSet<Mfganl> Mfganls { get; set; }
        public virtual DbSet<Mfgbsmwrk> Mfgbsmwrks { get; set; }
        public virtual DbSet<Mfgcost> Mfgcosts { get; set; }
        public virtual DbSet<Mfghead> Mfgheads { get; set; }
        public virtual DbSet<Mfgheadtrk> Mfgheadtrks { get; set; }
        public virtual DbSet<Mfgitm> Mfgitms { get; set; }
        public virtual DbSet<Mfgitmtrk> Mfgitmtrks { get; set; }
        public virtual DbSet<Mfgmat> Mfgmats { get; set; }
        public virtual DbSet<Mfgmattrk> Mfgmattrks { get; set; }
        public virtual DbSet<Mfgope> Mfgopes { get; set; }
        public virtual DbSet<Mfgopetrk> Mfgopetrks { get; set; }
        public virtual DbSet<Mfgprn> Mfgprns { get; set; }
        public virtual DbSet<Mfgtr> Mfgtrs { get; set; }
        public virtual DbSet<Mfgversion> Mfgversions { get; set; }
        public virtual DbSet<Mfgwip> Mfgwips { get; set; }
        public virtual DbSet<Mkglevel> Mkglevels { get; set; }
        public virtual DbSet<Mkgopg> Mkgopgs { get; set; }
        public virtual DbSet<Mkgqur> Mkgqurs { get; set; }
        public virtual DbSet<Mkgqurppl> Mkgqurppls { get; set; }
        public virtual DbSet<Mmsdefval> Mmsdefvals { get; set; }
        public virtual DbSet<Mmspar> Mmspars { get; set; }
        public virtual DbSet<Mtcauto> Mtcautoes { get; set; }
        public virtual DbSet<Mtcbatch> Mtcbatches { get; set; }
        public virtual DbSet<Mtcgautmp> Mtcgautmps { get; set; }
        public virtual DbSet<Mtkcrdasw> Mtkcrdasws { get; set; }
        public virtual DbSet<Mtohead> Mtoheads { get; set; }
        public virtual DbSet<Mtolink> Mtolinks { get; set; }
        public virtual DbSet<Ommresult> Ommresults { get; set; }
        public virtual DbSet<Ommrpt> Ommrpts { get; set; }
        public virtual DbSet<Operation> Operations { get; set; }
        public virtual DbSet<Oppor> Oppors { get; set; }
        public virtual DbSet<Ordcomp> Ordcomps { get; set; }
        public virtual DbSet<Ordcov> Ordcovs { get; set; }
        public virtual DbSet<Order> Orders { get; set; }
        public virtual DbSet<Ordoopar> Ordoopars { get; set; }
        public virtual DbSet<Ordoppar> Ordoppars { get; set; }
        public virtual DbSet<Ovenat> Ovenats { get; set; }
        public virtual DbSet<Overhead> Overheads { get; set; }
        public virtual DbSet<Paresc> Parescs { get; set; }
        public virtual DbSet<Parflux> Parfluxes { get; set; }
        public virtual DbSet<Parfluxdet> Parfluxdets { get; set; }
        public virtual DbSet<Parjal> Parjals { get; set; }
        public virtual DbSet<Parldap> Parldaps { get; set; }
        public virtual DbSet<Parmrp> Parmrps { get; set; }
        public virtual DbSet<Parmto> Parmtoes { get; set; }
        public virtual DbSet<Parsta1> Parsta1 { get; set; }
        public virtual DbSet<Parsta2> Parsta2 { get; set; }
        public virtual DbSet<Parstalig> Parstaligs { get; set; }
        public virtual DbSet<Parstoacc> Parstoaccs { get; set; }
        public virtual DbSet<Partaxusa> Partaxusas { get; set; }
        public virtual DbSet<Partrzl> Partrzls { get; set; }
        public virtual DbSet<Partrzldet> Partrzldets { get; set; }
        public virtual DbSet<Parwipacc> Parwipaccs { get; set; }
        public virtual DbSet<Parwipacc1> Parwipaccs1 { get; set; }
        public virtual DbSet<Payaccnum> Payaccnums { get; set; }
        public virtual DbSet<Payaccnumd> Payaccnumds { get; set; }
        public virtual DbSet<Payfrm> Payfrms { get; set; }
        public virtual DbSet<Paylot> Paylots { get; set; }
        public virtual DbSet<Paymenta> Paymentas { get; set; }
        public virtual DbSet<Paymentd> Paymentds { get; set; }
        public virtual DbSet<Paymenth> Paymenths { get; set; }
        public virtual DbSet<Paymtctmp> Paymtctmps { get; set; }
        public virtual DbSet<Paymtctmp2> Paymtctmp2 { get; set; }
        public virtual DbSet<Payorder> Payorders { get; set; }
        public virtual DbSet<Paytmp> Paytmps { get; set; }
        public virtual DbSet<Pdpdet> Pdpdets { get; set; }
        public virtual DbSet<Pdphea> Pdpheas { get; set; }
        public virtual DbSet<Period> Periods { get; set; }
        public virtual DbSet<Pfootinv> Pfootinvs { get; set; }
        public virtual DbSet<Phonecall> Phonecalls { get; set; }
        public virtual DbSet<Phoning> Phonings { get; set; }
        public virtual DbSet<Phyelt> Phyelts { get; set; }
        public virtual DbSet<Pinvoice> Pinvoices { get; set; }
        public virtual DbSet<Pinvoiced> Pinvoiceds { get; set; }
        public virtual DbSet<Pinvoicev> Pinvoicevs { get; set; }
        public virtual DbSet<Pitcount> Pitcounts { get; set; }
        public virtual DbSet<Pitdeb> Pitdebs { get; set; }
        public virtual DbSet<Pitdebd> Pitdebds { get; set; }
        public virtual DbSet<Pivot> Pivots { get; set; }
        public virtual DbSet<Pivzon> Pivzons { get; set; }
        public virtual DbSet<Piwrk> Piwrks { get; set; }
        public virtual DbSet<Plgmkg> Plgmkgs { get; set; }
        public virtual DbSet<Plgopg> Plgopgs { get; set; }
        public virtual DbSet<Plmdefval> Plmdefvals { get; set; }
        public virtual DbSet<Plmpar> Plmpars { get; set; }
        public virtual DbSet<Pool> Pools { get; set; }
        public virtual DbSet<Porder> Porders { get; set; }
        public virtual DbSet<Porderc> Pordercs { get; set; }
        public virtual DbSet<Porderp> Porderps { get; set; }
        public virtual DbSet<Porderq> Porderqs { get; set; }
        public virtual DbSet<Porditm> Porditms { get; set; }
        public virtual DbSet<Poscod> Poscods { get; set; }
        public virtual DbSet<Ppreason> Ppreasons { get; set; }
        public virtual DbSet<Ppricconf> Ppricconfs { get; set; }
        public virtual DbSet<Ppricfich> Ppricfiches { get; set; }
        public virtual DbSet<Ppriclink> Ppriclinks { get; set; }
        public virtual DbSet<Ppriclist> Ppriclists { get; set; }
        public virtual DbSet<Pquotat> Pquotats { get; set; }
        public virtual DbSet<Pquotatd> Pquotatds { get; set; }
        public virtual DbSet<Pquotatf> Pquotatfs { get; set; }
        public virtual DbSet<Preceipt> Preceipts { get; set; }
        public virtual DbSet<Preceiptd> Preceiptds { get; set; }
        public virtual DbSet<Prequi> Prequis { get; set; }
        public virtual DbSet<Prequisa> Prequisas { get; set; }
        public virtual DbSet<Prequisd> Prequisds { get; set; }
        public virtual DbSet<Prequiso> Prequisoes { get; set; }
        public virtual DbSet<Prereport> Prereports { get; set; }
        public virtual DbSet<Presp> Presps { get; set; }
        public virtual DbSet<Prespd> Prespds { get; set; }
        public virtual DbSet<Prestcov> Prestcovs { get; set; }
        public virtual DbSet<Preturn> Preturns { get; set; }
        public virtual DbSet<Preturnd> Preturnds { get; set; }
        public virtual DbSet<Pricstruct> Pricstructs { get; set; }
        public virtual DbSet<Prmdadsu> Prmdadsus { get; set; }
        public virtual DbSet<Propln> Proplns { get; set; }
        public virtual DbSet<Proplnh> Proplnhs { get; set; }
        public virtual DbSet<Prorog> Prorogs { get; set; }
        public virtual DbSet<Prorogpce> Prorogpces { get; set; }
        public virtual DbSet<Prtscrwrk> Prtscrwrks { get; set; }
        public virtual DbSet<Purtr> Purtrs { get; set; }
        public virtual DbSet<Pvcrfoot> Pvcrfeet { get; set; }
        public virtual DbSet<Pvcrvat> Pvcrvats { get; set; }
        public virtual DbSet<Pwrkorder> Pwrkorders { get; set; }
        public virtual DbSet<Pwrkpnd> Pwrkpnds { get; set; }
        public virtual DbSet<Pwrkpnh> Pwrkpnhs { get; set; }
        public virtual DbSet<Pwrkpoc> Pwrkpocs { get; set; }
        public virtual DbSet<Pwrkpop> Pwrkpops { get; set; }
        public virtual DbSet<Pwrkpoq> Pwrkpoqs { get; set; }
        public virtual DbSet<Pwrkpqf> Pwrkpqfs { get; set; }
        public virtual DbSet<Pwrkptd> Pwrkptds { get; set; }
        public virtual DbSet<Pwrkpth> Pwrkpths { get; set; }
        public virtual DbSet<Pwrkstt> Pwrkstts { get; set; }
        public virtual DbSet<Pyrpar> Pyrpars { get; set; }
        public virtual DbSet<Qlycrd> Qlycrds { get; set; }
        public virtual DbSet<Qlycrdasw> Qlycrdasws { get; set; }
        public virtual DbSet<Qlycrdnqa> Qlycrdnqas { get; set; }
        public virtual DbSet<Qlycrdqst> Qlycrdqsts { get; set; }
        public virtual DbSet<Qlywrk> Qlywrks { get; set; }
        public virtual DbSet<Queue> Queues { get; set; }
        public virtual DbSet<Qurcri> Qurcris { get; set; }
        public virtual DbSet<Qurcrival> Qurcrivals { get; set; }
        public virtual DbSet<Qurextract> Qurextracts { get; set; }
        public virtual DbSet<Qurtmp> Qurtmps { get; set; }
        public virtual DbSet<Reachpar> Reachpars { get; set; }
        public virtual DbSet<Relbank> Relbanks { get; set; }
        public virtual DbSet<Relbankrem> Relbankrems { get; set; }
        public virtual DbSet<Relmt940d> Relmt940d { get; set; }
        public virtual DbSet<Repsec> Repsecs { get; set; }
        public virtual DbSet<Resource> Resources { get; set; }
        public virtual DbSet<Resre> Resres { get; set; }
        public virtual DbSet<Ritenzione> Ritenziones { get; set; }
        public virtual DbSet<Rouope> Rouopes { get; set; }
        public virtual DbSet<Rouopestd> Rouopestds { get; set; }
        public virtual DbSet<Rouscd> Rouscds { get; set; }
        public virtual DbSet<Routing> Routings { get; set; }
        public virtual DbSet<Rplwst> Rplwsts { get; set; }
        public virtual DbSet<Rubassdef> Rubassdefs { get; set; }
        public virtual DbSet<Rubassdefp> Rubassdefps { get; set; }
        public virtual DbSet<Rubassval> Rubassvals { get; set; }
        public virtual DbSet<Rubassvalp> Rubassvalps { get; set; }
        public virtual DbSet<Rvacoed> Rvacoeds { get; set; }
        public virtual DbSet<Rvacoeh> Rvacoehs { get; set; }
        public virtual DbSet<Saitr> Saitrs { get; set; }
        public virtual DbSet<Saitrsdet> Saitrsdets { get; set; }
        public virtual DbSet<Salesrep> Salesreps { get; set; }
        public virtual DbSet<Saltr> Saltrs { get; set; }
        public virtual DbSet<Sbgeo> Sbgeos { get; set; }
        public virtual DbSet<Sbpbl> Sbpbls { get; set; }
        public virtual DbSet<Scheduling> Schedulings { get; set; }
        public virtual DbSet<Schgd> Schgds { get; set; }
        public virtual DbSet<Schgh> Schghs { get; set; }
        public virtual DbSet<Scmapar> Scmapars { get; set; }
        public virtual DbSet<Scmdpar> Scmdpars { get; set; }
        public virtual DbSet<Scohead> Scoheads { get; set; }
        public virtual DbSet<Scoitm> Scoitms { get; set; }
        public virtual DbSet<Scomat> Scomats { get; set; }
        public virtual DbSet<Scosrv> Scosrvs { get; set; }
        public virtual DbSet<Scpasw> Scpasws { get; set; }
        public virtual DbSet<Scpqst> Scpqsts { get; set; }
        public virtual DbSet<Scpqstcnd> Scpqstcnds { get; set; }
        public virtual DbSet<Script> Scripts { get; set; }
        public virtual DbSet<Sdelivery> Sdeliveries { get; set; }
        public virtual DbSet<Sdeliveryd> Sdeliveryds { get; set; }
        public virtual DbSet<Searesult> Searesults { get; set; }
        public virtual DbSet<Season> Seasons { get; set; }
        public virtual DbSet<Secact> Secacts { get; set; }
        public virtual DbSet<Secpst> Secpsts { get; set; }
        public virtual DbSet<Secpstsel> Secpstsels { get; set; }
        public virtual DbSet<Selcmg> Selcmgs { get; set; }
        public virtual DbSet<Selcmgli> Selcmglis { get; set; }
        public virtual DbSet<Selssp> Selssps { get; set; }
        public virtual DbSet<Selsspcpn> Selsspcpns { get; set; }
        public virtual DbSet<SeqAbank> SeqAbanks { get; set; }
        public virtual DbSet<SeqAbicond> SeqAbiconds { get; set; }
        public virtual DbSet<SeqAbidatmrt> SeqAbidatmrts { get; set; }
        public virtual DbSet<SeqAbidatwrh> SeqAbidatwrhs { get; set; }
        public virtual DbSet<SeqAbidim> SeqAbidims { get; set; }
        public virtual DbSet<SeqAbidimfld> SeqAbidimflds { get; set; }
        public virtual DbSet<SeqAbihiera> SeqAbihieras { get; set; }
        public virtual DbSet<SeqAbiprfusr> SeqAbiprfusrs { get; set; }
        public virtual DbSet<SeqAbiregde> SeqAbiregdes { get; set; }
        public virtual DbSet<SeqAbiregorg> SeqAbiregorgs { get; set; }
        public virtual DbSet<SeqAbireport> SeqAbireports { get; set; }
        public virtual DbSet<SeqAbireportd> SeqAbireportds { get; set; }
        public virtual DbSet<SeqAbitabagg> SeqAbitabaggs { get; set; }
        public virtual DbSet<SeqAbitabdat> SeqAbitabdats { get; set; }
        public virtual DbSet<SeqAbitabfld> SeqAbitabflds { get; set; }
        public virtual DbSet<SeqAbitabind> SeqAbitabinds { get; set; }
        public virtual DbSet<SeqAbitablnk> SeqAbitablnks { get; set; }
        public virtual DbSet<SeqAbitraunv> SeqAbitraunvs { get; set; }
        public virtual DbSet<SeqAblob> SeqAblobs { get; set; }
        public virtual DbSet<SeqAcalcul> SeqAcalculs { get; set; }
        public virtual DbSet<SeqAcccod> SeqAcccods { get; set; }
        public virtual DbSet<SeqAcce> SeqAcces { get; set; }
        public virtual DbSet<SeqAchange> SeqAchanges { get; set; }
        public virtual DbSet<SeqAclob> SeqAclobs { get; set; }
        public virtual DbSet<SeqAcodnum> SeqAcodnums { get; set; }
        public virtual DbSet<SeqAconsult> SeqAconsults { get; set; }
        public virtual DbSet<SeqActcodpar> SeqActcodpars { get; set; }
        public virtual DbSet<SeqAction> SeqActions { get; set; }
        public virtual DbSet<SeqActiv> SeqActivs { get; set; }
        public virtual DbSet<SeqActl> SeqActls { get; set; }
        public virtual DbSet<SeqActpar> SeqActpars { get; set; }
        public virtual DbSet<SeqAdelete> SeqAdeletes { get; set; }
        public virtual DbSet<SeqAdicadx> SeqAdicadxes { get; set; }
        public virtual DbSet<SeqAdictrt> SeqAdictrts { get; set; }
        public virtual DbSet<SeqAdocblb> SeqAdocblbs { get; set; }
        public virtual DbSet<SeqAdocclb> SeqAdocclbs { get; set; }
        public virtual DbSet<SeqAdocfld> SeqAdocflds { get; set; }
        public virtual DbSet<SeqAdocfnc> SeqAdocfncs { get; set; }
        public virtual DbSet<SeqAdocument> SeqAdocuments { get; set; }
        public virtual DbSet<SeqAdopar> SeqAdopars { get; set; }
        public virtual DbSet<SeqAdoval> SeqAdovals { get; set; }
        public virtual DbSet<SeqAdovalau> SeqAdovalaus { get; set; }
        public virtual DbSet<SeqAdovalgrp> SeqAdovalgrps { get; set; }
        public virtual DbSet<SeqAelt> SeqAelts { get; set; }
        public virtual DbSet<SeqAeltlink> SeqAeltlinks { get; set; }
        public virtual DbSet<SeqAenchaine> SeqAenchaines { get; set; }
        public virtual DbSet<SeqAentree> SeqAentrees { get; set; }
        public virtual DbSet<SeqAespion> SeqAespions { get; set; }
        public virtual DbSet<SeqAexpv3> SeqAexpv3 { get; set; }
        public virtual DbSet<SeqAexpv3d> SeqAexpv3d { get; set; }
        public virtual DbSet<SeqAfctexe> SeqAfctexes { get; set; }
        public virtual DbSet<SeqAfctfct> SeqAfctfcts { get; set; }
        public virtual DbSet<SeqAfctfcy> SeqAfctfcies { get; set; }
        public virtual DbSet<SeqAfctprf> SeqAfctprfs { get; set; }
        public virtual DbSet<SeqAfonction> SeqAfonctions { get; set; }
        public virtual DbSet<SeqAglobvar> SeqAglobvars { get; set; }
        public virtual DbSet<SeqAgrpcpy> SeqAgrpcpies { get; set; }
        public virtual DbSet<SeqAgrpfcy> SeqAgrpfcies { get; set; }
        public virtual DbSet<SeqAhisto> SeqAhistoes { get; set; }
        public virtual DbSet<SeqAhistod> SeqAhistods { get; set; }
        public virtual DbSet<SeqAindex> SeqAindexes { get; set; }
        public virtual DbSet<SeqAlink> SeqAlinks { get; set; }
        public virtual DbSet<SeqAlistec> SeqAlistecs { get; set; }
        public virtual DbSet<SeqAlisted> SeqAlisteds { get; set; }
        public virtual DbSet<SeqAlisteh> SeqAlistehs { get; set; }
        public virtual DbSet<SeqAlistel> SeqAlistels { get; set; }
        public virtual DbSet<SeqAlister> SeqAlisters { get; set; }
        public virtual DbSet<SeqAlistet> SeqAlistets { get; set; }
        public virtual DbSet<SeqAlnksub> SeqAlnksubs { get; set; }
        public virtual DbSet<SeqAlogin> SeqAlogins { get; set; }
        public virtual DbSet<SeqAlstrd> SeqAlstrds { get; set; }
        public virtual DbSet<SeqAmaint> SeqAmaints { get; set; }
        public virtual DbSet<SeqAmemo> SeqAmemoes { get; set; }
        public virtual DbSet<SeqAmenloc> SeqAmenlocs { get; set; }
        public virtual DbSet<SeqAmenuser> SeqAmenusers { get; set; }
        public virtual DbSet<SeqAmetuti> SeqAmetutis { get; set; }
        public virtual DbSet<SeqAmsk> SeqAmsks { get; set; }
        public virtual DbSet<SeqAmskact> SeqAmskacts { get; set; }
        public virtual DbSet<SeqAmskpar> SeqAmskpars { get; set; }
        public virtual DbSet<SeqAmskzon> SeqAmskzons { get; set; }
        public virtual DbSet<SeqAnavcre> SeqAnavcres { get; set; }
        public virtual DbSet<SeqAnavfil> SeqAnavfils { get; set; }
        public virtual DbSet<SeqAnavig> SeqAnavigs { get; set; }
        public virtual DbSet<SeqAnetvibe> SeqAnetvibes { get; set; }
        public virtual DbSet<SeqAnnuaire> SeqAnnuaires { get; set; }
        public virtual DbSet<SeqAobjbur> SeqAobjburs { get; set; }
        public virtual DbSet<SeqAobjburmod> SeqAobjburmods { get; set; }
        public virtual DbSet<SeqAobjet> SeqAobjets { get; set; }
        public virtual DbSet<SeqAobjext> SeqAobjexts { get; set; }
        public virtual DbSet<SeqAobjextd> SeqAobjextds { get; set; }
        public virtual DbSet<SeqAobjextmp> SeqAobjextmps { get; set; }
        public virtual DbSet<SeqAobjextmpb> SeqAobjextmpbs { get; set; }
        public virtual DbSet<SeqAobjextmpc> SeqAobjextmpcs { get; set; }
        public virtual DbSet<SeqAobjextmpd> SeqAobjextmpds { get; set; }
        public virtual DbSet<SeqAobjextmpe> SeqAobjextmpes { get; set; }
        public virtual DbSet<SeqAobjextr> SeqAobjextrs { get; set; }
        public virtual DbSet<SeqAobjlnk> SeqAobjlnks { get; set; }
        public virtual DbSet<SeqAobjlst> SeqAobjlsts { get; set; }
        public virtual DbSet<SeqAobjprop> SeqAobjprops { get; set; }
        public virtual DbSet<SeqAobjsel> SeqAobjsels { get; set; }
        public virtual DbSet<SeqAobjtab> SeqAobjtabs { get; set; }
        public virtual DbSet<SeqAobjtxt> SeqAobjtxts { get; set; }
        public virtual DbSet<SeqAobjtxta> SeqAobjtxtas { get; set; }
        public virtual DbSet<SeqAparimpexp> SeqAparimpexps { get; set; }
        public virtual DbSet<SeqApatch> SeqApatches { get; set; }
        public virtual DbSet<SeqApatchmod> SeqApatchmods { get; set; }
        public virtual DbSet<SeqAplcom> SeqAplcoms { get; set; }
        public virtual DbSet<SeqApllck> SeqApllcks { get; set; }
        public virtual DbSet<SeqAplstd> SeqAplstds { get; set; }
        public virtual DbSet<SeqAportmod> SeqAportmods { get; set; }
        public virtual DbSet<SeqAporttab> SeqAporttabs { get; set; }
        public virtual DbSet<SeqAportuser> SeqAportusers { get; set; }
        public virtual DbSet<SeqAportvig> SeqAportvigs { get; set; }
        public virtual DbSet<SeqAprintde> SeqAprintdes { get; set; }
        public virtual DbSet<SeqAprinter> SeqAprinters { get; set; }
        public virtual DbSet<SeqAprocessu> SeqAprocessus { get; set; }
        public virtual DbSet<SeqAproctexte> SeqAproctextes { get; set; }
        public virtual DbSet<SeqAprofil> SeqAprofils { get; set; }
        public virtual DbSet<SeqAproman> SeqApromen { get; set; }
        public virtual DbSet<SeqAprtau> SeqAprtaus { get; set; }
        public virtual DbSet<SeqAprtbrw> SeqAprtbrws { get; set; }
        public virtual DbSet<SeqAptlpage> SeqAptlpages { get; set; }
        public virtual DbSet<SeqAptlvw> SeqAptlvws { get; set; }
        public virtual DbSet<SeqArchpar> SeqArchpars { get; set; }
        public virtual DbSet<SeqArchpare> SeqArchpares { get; set; }
        public virtual DbSet<SeqArchparu> SeqArchparus { get; set; }
        public virtual DbSet<SeqArchparw> SeqArchparws { get; set; }
        public virtual DbSet<SeqArefaml> SeqArefamls { get; set; }
        public virtual DbSet<SeqAreftxt> SeqAreftxts { get; set; }
        public virtual DbSet<SeqAreport> SeqAreports { get; set; }
        public virtual DbSet<SeqAreport1> SeqAreports1 { get; set; }
        public virtual DbSet<SeqAreporta> SeqAreportas { get; set; }
        public virtual DbSet<SeqAreportd> SeqAreportds { get; set; }
        public virtual DbSet<SeqAreportg> SeqAreportgs { get; set; }
        public virtual DbSet<SeqAreportm> SeqAreportms { get; set; }
        public virtual DbSet<SeqAreportv> SeqAreportvs { get; set; }
        public virtual DbSet<SeqAreportx> SeqAreportxes { get; set; }
        public virtual DbSet<SeqAreportz> SeqAreportzs { get; set; }
        public virtual DbSet<SeqArole> SeqAroles { get; set; }
        public virtual DbSet<SeqAssconf> SeqAssconfs { get; set; }
        public virtual DbSet<SeqAstr> SeqAstrs { get; set; }
        public virtual DbSet<SeqAstractfld> SeqAstractflds { get; set; }
        public virtual DbSet<SeqAstrfld> SeqAstrflds { get; set; }
        public virtual DbSet<SeqAstrlist> SeqAstrlists { get; set; }
        public virtual DbSet<SeqAstrlistd> SeqAstrlistds { get; set; }
        public virtual DbSet<SeqAstrmet> SeqAstrmets { get; set; }
        public virtual DbSet<SeqAstrparfld> SeqAstrparflds { get; set; }
        public virtual DbSet<SeqAstrxml> SeqAstrxmls { get; set; }
        public virtual DbSet<SeqAstrxmld> SeqAstrxmlds { get; set; }
        public virtual DbSet<SeqAstyle> SeqAstyles { get; set; }
        public virtual DbSet<SeqAstylec> SeqAstylecs { get; set; }
        public virtual DbSet<SeqAstylep> SeqAstyleps { get; set; }
        public virtual DbSet<SeqAsubprog> SeqAsubprogs { get; set; }
        public virtual DbSet<SeqAsubprogd> SeqAsubprogds { get; set; }
        public virtual DbSet<SeqAtabaud> SeqAtabauds { get; set; }
        public virtual DbSet<SeqAtabdiv> SeqAtabdivs { get; set; }
        public virtual DbSet<SeqAtabind> SeqAtabinds { get; set; }
        public virtual DbSet<SeqAtable> SeqAtables { get; set; }
        public virtual DbSet<SeqAtabtab> SeqAtabtabs { get; set; }
        public virtual DbSet<SeqAtabzon> SeqAtabzons { get; set; }
        public virtual DbSet<SeqAtexmod> SeqAtexmods { get; set; }
        public virtual DbSet<SeqAtexte> SeqAtextes { get; set; }
        public virtual DbSet<SeqAtextra> SeqAtextras { get; set; }
        public virtual DbSet<SeqAtmptra> SeqAtmptras { get; set; }
        public virtual DbSet<SeqAtransac> SeqAtransacs { get; set; }
        public virtual DbSet<SeqAtype> SeqAtypes { get; set; }
        public virtual DbSet<SeqAudith> SeqAudiths { get; set; }
        public virtual DbSet<SeqAuditl> SeqAuditls { get; set; }
        public virtual DbSet<SeqAurl> SeqAurls { get; set; }
        public virtual DbSet<SeqAusrbpr> SeqAusrbprs { get; set; }
        public virtual DbSet<SeqAutili> SeqAutilis { get; set; }
        public virtual DbSet<SeqAvalatt> SeqAvalatts { get; set; }
        public virtual DbSet<SeqAvalnum> SeqAvalnums { get; set; }
        public virtual DbSet<SeqAvarloc> SeqAvarlocs { get; set; }
        public virtual DbSet<SeqAview> SeqAviews { get; set; }
        public virtual DbSet<SeqAviewb> SeqAviewbs { get; set; }
        public virtual DbSet<SeqAviewc> SeqAviewcs { get; set; }
        public virtual DbSet<SeqAviewd> SeqAviewds { get; set; }
        public virtual DbSet<SeqAviewfld> SeqAviewflds { get; set; }
        public virtual DbSet<SeqAviewind> SeqAviewinds { get; set; }
        public virtual DbSet<SeqAviewtab> SeqAviewtabs { get; set; }
        public virtual DbSet<SeqAvocab> SeqAvocabs { get; set; }
        public virtual DbSet<SeqAvvtextra> SeqAvvtextras { get; set; }
        public virtual DbSet<SeqAvwtextra> SeqAvwtextras { get; set; }
        public virtual DbSet<SeqAwebserde> SeqAwebserdes { get; set; }
        public virtual DbSet<SeqAwebservic> SeqAwebservics { get; set; }
        public virtual DbSet<SeqAwinbout> SeqAwinbouts { get; set; }
        public virtual DbSet<SeqAwinbro> SeqAwinbroes { get; set; }
        public virtual DbSet<SeqAwindow> SeqAwindows { get; set; }
        public virtual DbSet<SeqAwinpar> SeqAwinpars { get; set; }
        public virtual DbSet<SeqAwrkhisde> SeqAwrkhisdes { get; set; }
        public virtual DbSet<SeqAwrkhisjoi> SeqAwrkhisjois { get; set; }
        public virtual DbSet<SeqAwrkhisme> SeqAwrkhismes { get; set; }
        public virtual DbSet<SeqAwrkhissui> SeqAwrkhissuis { get; set; }
        public virtual DbSet<SeqAwrklnk> SeqAwrklnks { get; set; }
        public virtual DbSet<SeqAwrkpar> SeqAwrkpars { get; set; }
        public virtual DbSet<SeqAwrkparc> SeqAwrkparcs { get; set; }
        public virtual DbSet<SeqAwrkparf> SeqAwrkparves { get; set; }
        public virtual DbSet<SeqAwrkparh> SeqAwrkparhs { get; set; }
        public virtual DbSet<SeqAwrkparx> SeqAwrkparxes { get; set; }
        public virtual DbSet<SeqAwrkreg> SeqAwrkregs { get; set; }
        public virtual DbSet<SeqAwrkregval> SeqAwrkregvals { get; set; }
        public virtual DbSet<SeqAwrktrn> SeqAwrktrns { get; set; }
        public virtual DbSet<SeqAwrktrnd> SeqAwrktrnds { get; set; }
        public virtual DbSet<SeqAwrkusr> SeqAwrkusrs { get; set; }
        public virtual DbSet<SeqAwsdl> SeqAwsdls { get; set; }
        public virtual DbSet<SeqAwsdl1> SeqAwsdl1 { get; set; }
        public virtual DbSet<SeqBalana> SeqBalanas { get; set; }
        public virtual DbSet<SeqBalance> SeqBalances { get; set; }
        public virtual DbSet<SeqBank> SeqBanks { get; set; }
        public virtual DbSet<SeqBanrec> SeqBanrecs { get; set; }
        public virtual DbSet<SeqBanrecd> SeqBanrecds { get; set; }
        public virtual DbSet<SeqBappoint> SeqBappoints { get; set; }
        public virtual DbSet<SeqBatch> SeqBatches { get; set; }
        public virtual DbSet<SeqBenchtr> SeqBenchtrs { get; set; }
        public virtual DbSet<SeqBetcpy> SeqBetcpies { get; set; }
        public virtual DbSet<SeqBetcpyl> SeqBetcpyls { get; set; }
        public virtual DbSet<SeqBid> SeqBids { get; set; }
        public virtual DbSet<SeqBilsta> SeqBilstas { get; set; }
        public virtual DbSet<SeqBlacmm> SeqBlacmms { get; set; }
        public virtual DbSet<SeqBlaqty> SeqBlaqties { get; set; }
        public virtual DbSet<SeqBom> SeqBoms { get; set; }
        public virtual DbSet<SeqBomd> SeqBomds { get; set; }
        public virtual DbSet<SeqBomprn> SeqBomprns { get; set; }
        public virtual DbSet<SeqBomret> SeqBomrets { get; set; }
        public virtual DbSet<SeqBomwu> SeqBomwus { get; set; }
        public virtual DbSet<SeqBox1099> SeqBox1099 { get; set; }
        public virtual DbSet<SeqBp1099begbal> SeqBp1099begbal { get; set; }
        public virtual DbSet<SeqBp1099prn> SeqBp1099prn { get; set; }
        public virtual DbSet<SeqBpaddress> SeqBpaddresses { get; set; }
        public virtual DbSet<SeqBpartner> SeqBpartners { get; set; }
        public virtual DbSet<SeqBpcarrier> SeqBpcarriers { get; set; }
        public virtual DbSet<SeqBpccateg> SeqBpccategs { get; set; }
        public virtual DbSet<SeqBpcinvlig> SeqBpcinvligs { get; set; }
        public virtual DbSet<SeqBpcinvliga> SeqBpcinvligas { get; set; }
        public virtual DbSet<SeqBpcinvvat> SeqBpcinvvats { get; set; }
        public virtual DbSet<SeqBpcustmvt> SeqBpcustmvts { get; set; }
        public virtual DbSet<SeqBpcustomer> SeqBpcustomers { get; set; }
        public virtual DbSet<SeqBpdlvcust> SeqBpdlvcusts { get; set; }
        public virtual DbSet<SeqBpexcept> SeqBpexcepts { get; set; }
        public virtual DbSet<SeqBpmisc> SeqBpmiscs { get; set; }
        public virtual DbSet<SeqBpmisccgf> SeqBpmisccgfs { get; set; }
        public virtual DbSet<SeqBps1099gen> SeqBps1099gen { get; set; }
        public virtual DbSet<SeqBps1099mnt> SeqBps1099mnt { get; set; }
        public virtual DbSet<SeqBps1099pay> SeqBps1099pay { get; set; }
        public virtual DbSet<SeqBps1099paybb> SeqBps1099paybb { get; set; }
        public virtual DbSet<SeqBpscateg> SeqBpscategs { get; set; }
        public virtual DbSet<SeqBpshisupln> SeqBpshisuplns { get; set; }
        public virtual DbSet<SeqBpshisupp> SeqBpshisupps { get; set; }
        public virtual DbSet<SeqBpsinvlig> SeqBpsinvligs { get; set; }
        public virtual DbSet<SeqBpsinvliga> SeqBpsinvligas { get; set; }
        public virtual DbSet<SeqBpsupplier> SeqBpsuppliers { get; set; }
        public virtual DbSet<SeqBpsuppmvt> SeqBpsuppmvts { get; set; }
        public virtual DbSet<SeqBrdkey> SeqBrdkeys { get; set; }
        public virtual DbSet<SeqBud> SeqBuds { get; set; }
        public virtual DbSet<SeqBudforcal> SeqBudforcals { get; set; }
        public virtual DbSet<SeqBudod> SeqBudods { get; set; }
        public virtual DbSet<SeqBudod1> SeqBudods1 { get; set; }
        public virtual DbSet<SeqBudpar> SeqBudpars { get; set; }
        public virtual DbSet<SeqBudpuraud> SeqBudpurauds { get; set; }
        public virtual DbSet<SeqBudvarcal> SeqBudvarcals { get; set; }
        public virtual DbSet<SeqBudver> SeqBudvers { get; set; }
        public virtual DbSet<SeqCaauz> SeqCaauzs { get; set; }
        public virtual DbSet<SeqCacce> SeqCacces { get; set; }
        public virtual DbSet<SeqCaccedef> SeqCaccedefs { get; set; }
        public virtual DbSet<SeqCadiedef> SeqCadiedefs { get; set; }
        public virtual DbSet<SeqCadistmp> SeqCadistmps { get; set; }
        public virtual DbSet<SeqCadsp> SeqCadsps { get; set; }
        public virtual DbSet<SeqCalcdbg> SeqCalcdbgs { get; set; }
        public virtual DbSet<SeqCallattemp> SeqCallattemps { get; set; }
        public virtual DbSet<SeqCapvar> SeqCapvars { get; set; }
        public virtual DbSet<SeqCararea> SeqCarareas { get; set; }
        public virtual DbSet<SeqCarprice> SeqCarprices { get; set; }
        public virtual DbSet<SeqCblob> SeqCblobs { get; set; }
        public virtual DbSet<SeqCbndet> SeqCbndets { get; set; }
        public virtual DbSet<SeqCbnhea> SeqCbnheas { get; set; }
        public virtual DbSet<SeqCbnwrk> SeqCbnwrks { get; set; }
        public virtual DbSet<SeqCdfcod> SeqCdfcods { get; set; }
        public virtual DbSet<SeqCdfcpy> SeqCdfcpies { get; set; }
        public virtual DbSet<SeqCdffcy> SeqCdffcies { get; set; }
        public virtual DbSet<SeqCdfpar> SeqCdfpars { get; set; }
        public virtual DbSet<SeqCdiadsp> SeqCdiadsps { get; set; }
        public virtual DbSet<SeqChqbok> SeqChqboks { get; set; }
        public virtual DbSet<SeqChqnum> SeqChqnums { get; set; }
        public virtual DbSet<SeqCmarketing> SeqCmarketings { get; set; }
        public virtual DbSet<SeqCompany> SeqCompanies { get; set; }
        public virtual DbSet<SeqContact> SeqContacts { get; set; }
        public virtual DbSet<SeqContactcrm> SeqContactcrms { get; set; }
        public virtual DbSet<SeqContamt> SeqContamts { get; set; }
        public virtual DbSet<SeqContamtx> SeqContamtxes { get; set; }
        public virtual DbSet<SeqContcare> SeqContcares { get; set; }
        public virtual DbSet<SeqContcov> SeqContcovs { get; set; }
        public virtual DbSet<SeqContext> SeqContexts { get; set; }
        public virtual DbSet<SeqContidx> SeqContidxes { get; set; }
        public virtual DbSet<SeqContitm> SeqContitms { get; set; }
        public virtual DbSet<SeqContpbl> SeqContpbls { get; set; }
        public virtual DbSet<SeqContqual> SeqContquals { get; set; }
        public virtual DbSet<SeqContrew> SeqContrews { get; set; }
        public virtual DbSet<SeqContrewx> SeqContrewxes { get; set; }
        public virtual DbSet<SeqContserv> SeqContservs { get; set; }
        public virtual DbSet<SeqContservx> SeqContservxes { get; set; }
        public virtual DbSet<SeqConttempl> SeqConttempls { get; set; }
        public virtual DbSet<SeqCorrep> SeqCorreps { get; set; }
        public virtual DbSet<SeqCorrespond> SeqCorresponds { get; set; }
        public virtual DbSet<SeqCptanalin> SeqCptanalins { get; set; }
        public virtual DbSet<SeqCptfootlnk> SeqCptfootlnks { get; set; }
        public virtual DbSet<SeqCrmclob> SeqCrmclobs { get; set; }
        public virtual DbSet<SeqCrmtr> SeqCrmtrs { get; set; }
        public virtual DbSet<SeqCrmtrsval> SeqCrmtrsvals { get; set; }
        public virtual DbSet<SeqCsfparh> SeqCsfparhs { get; set; }
        public virtual DbSet<SeqCsfparl> SeqCsfparls { get; set; }
        public virtual DbSet<SeqCsfre> SeqCsfres { get; set; }
        public virtual DbSet<SeqCtrlnivw> SeqCtrlnivws { get; set; }
        public virtual DbSet<SeqCunlisdet> SeqCunlisdets { get; set; }
        public virtual DbSet<SeqCunliste> SeqCunlistes { get; set; }
        public virtual DbSet<SeqCunsession> SeqCunsessions { get; set; }
        public virtual DbSet<SeqDadcpy> SeqDadcpies { get; set; }
        public virtual DbSet<SeqDadfcy> SeqDadfcies { get; set; }
        public virtual DbSet<SeqDclvat> SeqDclvats { get; set; }
        public virtual DbSet<SeqDclvatpay> SeqDclvatpays { get; set; }
        public virtual DbSet<SeqDefval> SeqDefvals { get; set; }
        public virtual DbSet<SeqDeprec> SeqDeprecs { get; set; }
        public virtual DbSet<SeqDeprecarc> SeqDeprecarcs { get; set; }
        public virtual DbSet<SeqDiahou> SeqDiahous { get; set; }
        public virtual DbSet<SeqDietr> SeqDietrs { get; set; }
        public virtual DbSet<SeqDietrsxx> SeqDietrsxxes { get; set; }
        public virtual DbSet<SeqDkskey> SeqDkskeys { get; set; }
        public virtual DbSet<SeqDoobpcint> SeqDoobpcints { get; set; }
        public virtual DbSet<SeqDoobpclnk> SeqDoobpclnks { get; set; }
        public virtual DbSet<SeqDprmod> SeqDprmods { get; set; }
        public virtual DbSet<SeqDprmodopt> SeqDprmodopts { get; set; }
        public virtual DbSet<SeqDprmodrat> SeqDprmodrats { get; set; }
        public virtual DbSet<SeqEdifrm> SeqEdifrms { get; set; }
        public virtual DbSet<SeqEdipar> SeqEdipars { get; set; }
        public virtual DbSet<SeqEdiseg> SeqEdisegs { get; set; }
        public virtual DbSet<SeqEditrbk> SeqEditrbks { get; set; }
        public virtual DbSet<SeqEdtdadsu> SeqEdtdadsus { get; set; }
        public virtual DbSet<SeqEdttd> SeqEdttds { get; set; }
        public virtual DbSet<SeqEfasact> SeqEfasacts { get; set; }
        public virtual DbSet<SeqEfasaffage> SeqEfasaffages { get; set; }
        public virtual DbSet<SeqEfaschgimp> SeqEfaschgimps { get; set; }
        public virtual DbSet<SeqEfaschgppl> SeqEfaschgppls { get; set; }
        public virtual DbSet<SeqEfascnl> SeqEfascnls { get; set; }
        public virtual DbSet<SeqEfascrt> SeqEfascrts { get; set; }
        public virtual DbSet<SeqEfasiml> SeqEfasimls { get; set; }
        public virtual DbSet<SeqEfasiss> SeqEfasisses { get; set; }
        public virtual DbSet<SeqEfaslnkcnl> SeqEfaslnkcnls { get; set; }
        public virtual DbSet<SeqEfasmtc> SeqEfasmtcs { get; set; }
        public virtual DbSet<SeqEfasreeval> SeqEfasreevals { get; set; }
        public virtual DbSet<SeqEfasvatreg> SeqEfasvatregs { get; set; }
        public virtual DbSet<SeqElofcim> SeqElofcims { get; set; }
        public virtual DbSet<SeqElofcnl> SeqElofcnls { get; set; }
        public virtual DbSet<SeqElofvatreg> SeqElofvatregs { get; set; }
        public virtual DbSet<SeqEmodele> SeqEmodeles { get; set; }
        public virtual DbSet<SeqEphyaffgeo> SeqEphyaffgeos { get; set; }
        public virtual DbSet<SeqEphycrt> SeqEphycrts { get; set; }
        public virtual DbSet<SeqEphyiss> SeqEphyisses { get; set; }
        public virtual DbSet<SeqEscsre> SeqEscsres { get; set; }
        public virtual DbSet<SeqEvefa> SeqEvefas { get; set; }
        public virtual DbSet<SeqEvelof> SeqEvelofs { get; set; }
        public virtual DbSet<SeqExkword> SeqExkwords { get; set; }
        public virtual DbSet<SeqExparam> SeqExparams { get; set; }
        public virtual DbSet<SeqExpens> SeqExpenses { get; set; }
        public virtual DbSet<SeqExpensesh> SeqExpenseshes { get; set; }
        public virtual DbSet<SeqFacgroup> SeqFacgroups { get; set; }
        public virtual DbSet<SeqFacility> SeqFacilities { get; set; }
        public virtual DbSet<SeqFactor> SeqFactors { get; set; }
        public virtual DbSet<SeqFampb> SeqFampbs { get; set; }
        public virtual DbSet<SeqFampbque> SeqFampbques { get; set; }
        public virtual DbSet<SeqFampbrep> SeqFampbreps { get; set; }
        public virtual DbSet<SeqFiedic> SeqFiedics { get; set; }
        public virtual DbSet<SeqFiedicfie> SeqFiedicfies { get; set; }
        public virtual DbSet<SeqFiltd> SeqFiltds { get; set; }
        public virtual DbSet<SeqFiscalyear> SeqFiscalyears { get; set; }
        public virtual DbSet<SeqFiscyear> SeqFiscyears { get; set; }
        public virtual DbSet<SeqFrefld> SeqFreflds { get; set; }
        public virtual DbSet<SeqFup> SeqFups { get; set; }
        public virtual DbSet<SeqFupgrp> SeqFupgrps { get; set; }
        public virtual DbSet<SeqFuptot> SeqFuptots { get; set; }
        public virtual DbSet<SeqFuptxt> SeqFuptxts { get; set; }
        public virtual DbSet<SeqFxdasset> SeqFxdassets { get; set; }
        public virtual DbSet<SeqFxdlifl> SeqFxdlifls { get; set; }
        public virtual DbSet<SeqFxdmvt> SeqFxdmvts { get; set; }
        public virtual DbSet<SeqFxdmvtd> SeqFxdmvtds { get; set; }
        public virtual DbSet<SeqGacccl> SeqGacccls { get; set; }
        public virtual DbSet<SeqGacccode> SeqGacccodes { get; set; }
        public virtual DbSet<SeqGacccodlig> SeqGacccodligs { get; set; }
        public virtual DbSet<SeqGaccdef> SeqGaccdefs { get; set; }
        public virtual DbSet<SeqGaccdencod> SeqGaccdencods { get; set; }
        public virtual DbSet<SeqGaccdim> SeqGaccdims { get; set; }
        public virtual DbSet<SeqGaccdudate> SeqGaccdudates { get; set; }
        public virtual DbSet<SeqGaccentry> SeqGaccentries { get; set; }
        public virtual DbSet<SeqGaccentrya> SeqGaccentryas { get; set; }
        public virtual DbSet<SeqGaccentryd> SeqGaccentryds { get; set; }
        public virtual DbSet<SeqGaccfix> SeqGaccfixes { get; set; }
        public virtual DbSet<SeqGaccfiyena> SeqGaccfiyenas { get; set; }
        public virtual DbSet<SeqGaccfiyend> SeqGaccfiyends { get; set; }
        public virtual DbSet<SeqGaccgrupym> SeqGaccgrupyms { get; set; }
        public virtual DbSet<SeqGaccount> SeqGaccounts { get; set; }
        public virtual DbSet<SeqGaccpym> SeqGaccpyms { get; set; }
        public virtual DbSet<SeqGaccpymlik> SeqGaccpymliks { get; set; }
        public virtual DbSet<SeqGaccpymprt> SeqGaccpymprts { get; set; }
        public virtual DbSet<SeqGacctmp> SeqGacctmps { get; set; }
        public virtual DbSet<SeqGacctmpa> SeqGacctmpas { get; set; }
        public virtual DbSet<SeqGacctmpd> SeqGacctmpds { get; set; }
        public virtual DbSet<SeqGacm> SeqGacms { get; set; }
        public virtual DbSet<SeqGajousta> SeqGajoustas { get; set; }
        public virtual DbSet<SeqGaparbse> SeqGaparbses { get; set; }
        public virtual DbSet<SeqGapardum> SeqGapardums { get; set; }
        public virtual DbSet<SeqGautace> SeqGautaces { get; set; }
        public virtual DbSet<SeqGautaced> SeqGautaceds { get; set; }
        public virtual DbSet<SeqGautacef> SeqGautacefs { get; set; }
        public virtual DbSet<SeqGbagscr> SeqGbagscrs { get; set; }
        public virtual DbSet<SeqGcaccoa> SeqGcaccoas { get; set; }
        public virtual DbSet<SeqGccegrupym> SeqGccegrupyms { get; set; }
        public virtual DbSet<SeqGccepym> SeqGccepyms { get; set; }
        public virtual DbSet<SeqGccepymlik> SeqGccepymliks { get; set; }
        public virtual DbSet<SeqGccepymprt> SeqGccepymprts { get; set; }
        public virtual DbSet<SeqGclcacepar> SeqGclcacepars { get; set; }
        public virtual DbSet<SeqGcoa> SeqGcoas { get; set; }
        public virtual DbSet<SeqGcommit> SeqGcommits { get; set; }
        public virtual DbSet<SeqGcommitd> SeqGcommitds { get; set; }
        public virtual DbSet<SeqGcommitx> SeqGcommitxes { get; set; }
        public virtual DbSet<SeqGdiaacc> SeqGdiaaccs { get; set; }
        public virtual DbSet<SeqGdiaaccd> SeqGdiaaccds { get; set; }
        public virtual DbSet<SeqGdiaentry> SeqGdiaentries { get; set; }
        public virtual DbSet<SeqGdiaentryd> SeqGdiaentryds { get; set; }
        public virtual DbSet<SeqGdie> SeqGdies { get; set; }
        public virtual DbSet<SeqGdudscr> SeqGdudscrs { get; set; }
        public virtual DbSet<SeqGentlot> SeqGentlots { get; set; }
        public virtual DbSet<SeqGentlota> SeqGentlotas { get; set; }
        public virtual DbSet<SeqGentlotd> SeqGentlotds { get; set; }
        public virtual DbSet<SeqGentloth> SeqGentloths { get; set; }
        public virtual DbSet<SeqGfupscr> SeqGfupscrs { get; set; }
        public virtual DbSet<SeqGjoucoa> SeqGjoucoas { get; set; }
        public virtual DbSet<SeqGjournal> SeqGjournals { get; set; }
        public virtual DbSet<SeqGled> SeqGleds { get; set; }
        public virtual DbSet<SeqGrpacemtc> SeqGrpacemtcs { get; set; }
        public virtual DbSet<SeqGrpautace> SeqGrpautaces { get; set; }
        public virtual DbSet<SeqGrpcur> SeqGrpcurs { get; set; }
        public virtual DbSet<SeqGrpdsp> SeqGrpdsps { get; set; }
        public virtual DbSet<SeqGrpsac> SeqGrpsacs { get; set; }
        public virtual DbSet<SeqGtabacc> SeqGtabaccs { get; set; }
        public virtual DbSet<SeqGtabacc2> SeqGtabacc2 { get; set; }
        public virtual DbSet<SeqGtmpmtc> SeqGtmpmtcs { get; set; }
        public virtual DbSet<SeqGtypaccent> SeqGtypaccents { get; set; }
        public virtual DbSet<SeqGvarcodpar> SeqGvarcodpars { get; set; }
        public virtual DbSet<SeqGvargau> SeqGvargaus { get; set; }
        public virtual DbSet<SeqGvarpargau> SeqGvarpargaus { get; set; }
        public virtual DbSet<SeqGvarparval> SeqGvarparvals { get; set; }
        public virtual DbSet<SeqHd1clob> SeqHd1clob { get; set; }
        public virtual DbSet<SeqHd2clob> SeqHd2clob { get; set; }
        public virtual DbSet<SeqHd3clob> SeqHd3clob { get; set; }
        public virtual DbSet<SeqHd4clob> SeqHd4clob { get; set; }
        public virtual DbSet<SeqHd5clob> SeqHd5clob { get; set; }
        public virtual DbSet<SeqHd6clob> SeqHd6clob { get; set; }
        public virtual DbSet<SeqHd7clob> SeqHd7clob { get; set; }
        public virtual DbSet<SeqHd8clob> SeqHd8clob { get; set; }
        public virtual DbSet<SeqHdktask> SeqHdktasks { get; set; }
        public virtual DbSet<SeqHdktaskinv> SeqHdktaskinvs { get; set; }
        public virtual DbSet<SeqHdktr> SeqHdktrs { get; set; }
        public virtual DbSet<SeqHdktrsval> SeqHdktrsvals { get; set; }
        public virtual DbSet<SeqHistocrm> SeqHistocrms { get; set; }
        public virtual DbSet<SeqHistodud> SeqHistoduds { get; set; }
        public virtual DbSet<SeqHistoomm> SeqHistoomms { get; set; }
        public virtual DbSet<SeqHonlin> SeqHonlins { get; set; }
        public virtual DbSet<SeqHonprv> SeqHonprvs { get; set; }
        public virtual DbSet<SeqHoroitm> SeqHoroitms { get; set; }
        public virtual DbSet<SeqIlogimg> SeqIlogimgs { get; set; }
        public virtual DbSet<SeqImcdetprt> SeqImcdetprts { get; set; }
        public virtual DbSet<SeqInterven> SeqIntervens { get; set; }
        public virtual DbSet<SeqInvdacpar> SeqInvdacpars { get; set; }
        public virtual DbSet<SeqInvope> SeqInvopes { get; set; }
        public virtual DbSet<SeqInvpar> SeqInvpars { get; set; }
        public virtual DbSet<SeqInvpcr> SeqInvpcrs { get; set; }
        public virtual DbSet<SeqInvprb> SeqInvprbs { get; set; }
        public virtual DbSet<SeqInvpri> SeqInvpris { get; set; }
        public virtual DbSet<SeqInvsta> SeqInvstas { get; set; }
        public virtual DbSet<SeqItcdet> SeqItcdets { get; set; }
        public virtual DbSet<SeqItcdetprt> SeqItcdetprts { get; set; }
        public virtual DbSet<SeqItcmat> SeqItcmats { get; set; }
        public virtual DbSet<SeqItcmatch> SeqItcmatches { get; set; }
        public virtual DbSet<SeqItcnat> SeqItcnats { get; set; }
        public virtual DbSet<SeqItcwst> SeqItcwsts { get; set; }
        public virtual DbSet<SeqItcwstw> SeqItcwstws { get; set; }
        public virtual DbSet<SeqItfitc> SeqItfitcs { get; set; }
        public virtual DbSet<SeqItmabcwrk> SeqItmabcwrks { get; set; }
        public virtual DbSet<SeqItmacggrp> SeqItmacggrps { get; set; }
        public virtual DbSet<SeqItmbom> SeqItmboms { get; set; }
        public virtual DbSet<SeqItmbp> SeqItmbps { get; set; }
        public virtual DbSet<SeqItmbpc> SeqItmbpcs { get; set; }
        public virtual DbSet<SeqItmcateg> SeqItmcategs { get; set; }
        public virtual DbSet<SeqItmcomp> SeqItmcomps { get; set; }
        public virtual DbSet<SeqItmcost> SeqItmcosts { get; set; }
        public virtual DbSet<SeqItmcpplnk> SeqItmcpplnks { get; set; }
        public virtual DbSet<SeqItmcusnom> SeqItmcusnoms { get; set; }
        public virtual DbSet<SeqItmfacilit> SeqItmfacilits { get; set; }
        public virtual DbSet<SeqItmmaster> SeqItmmasters { get; set; }
        public virtual DbSet<SeqItmmvt> SeqItmmvts { get; set; }
        public virtual DbSet<SeqItmmvthi> SeqItmmvthis { get; set; }
        public virtual DbSet<SeqItmsale> SeqItmsales { get; set; }
        public virtual DbSet<SeqLabelprn> SeqLabelprns { get; set; }
        public virtual DbSet<SeqLastcusmvt> SeqLastcusmvts { get; set; }
        public virtual DbSet<SeqLastsupmvt> SeqLastsupmvts { get; set; }
        public virtual DbSet<SeqLayoutfa> SeqLayoutfas { get; set; }
        public virtual DbSet<SeqLead> SeqLeads { get; set; }
        public virtual DbSet<SeqLnkcptabd> SeqLnkcptabds { get; set; }
        public virtual DbSet<SeqLnkcptabx3> SeqLnkcptabx3 { get; set; }
        public virtual DbSet<SeqLocalizat> SeqLocalizats { get; set; }
        public virtual DbSet<SeqMachine> SeqMachines { get; set; }
        public virtual DbSet<SeqMacitn> SeqMacitns { get; set; }
        public virtual DbSet<SeqMacwarreq> SeqMacwarreqs { get; set; }
        public virtual DbSet<SeqMailing> SeqMailings { get; set; }
        public virtual DbSet<SeqMailxml> SeqMailxmls { get; set; }
        public virtual DbSet<SeqMailxmld> SeqMailxmlds { get; set; }
        public virtual DbSet<SeqMarassdef> SeqMarassdefs { get; set; }
        public virtual DbSet<SeqMarassrep> SeqMarassreps { get; set; }
        public virtual DbSet<SeqMardef> SeqMardefs { get; set; }
        public virtual DbSet<SeqMardefval> SeqMardefvals { get; set; }
        public virtual DbSet<SeqMarrepsec> SeqMarrepsecs { get; set; }
        public virtual DbSet<SeqMarsct> SeqMarscts { get; set; }
        public virtual DbSet<SeqMatchcode> SeqMatchcodes { get; set; }
        public virtual DbSet<SeqMatchtol> SeqMatchtols { get; set; }
        public virtual DbSet<SeqMatcstw> SeqMatcstws { get; set; }
        public virtual DbSet<SeqMedia> SeqMedias { get; set; }
        public virtual DbSet<SeqMespar> SeqMespars { get; set; }
        public virtual DbSet<SeqMfcdetprt> SeqMfcdetprts { get; set; }
        public virtual DbSet<SeqMfcmat> SeqMfcmats { get; set; }
        public virtual DbSet<SeqMfcnat> SeqMfcnats { get; set; }
        public virtual DbSet<SeqMfcprt> SeqMfcprts { get; set; }
        public virtual DbSet<SeqMfcprtnat> SeqMfcprtnats { get; set; }
        public virtual DbSet<SeqMfcscrap> SeqMfcscraps { get; set; }
        public virtual DbSet<SeqMfctyprel> SeqMfctyprels { get; set; }
        public virtual DbSet<SeqMfcwst> SeqMfcwsts { get; set; }
        public virtual DbSet<SeqMfganl> SeqMfganls { get; set; }
        public virtual DbSet<SeqMfgbsmwrk> SeqMfgbsmwrks { get; set; }
        public virtual DbSet<SeqMfgcost> SeqMfgcosts { get; set; }
        public virtual DbSet<SeqMfghead> SeqMfgheads { get; set; }
        public virtual DbSet<SeqMfgheadtrk> SeqMfgheadtrks { get; set; }
        public virtual DbSet<SeqMfgitm> SeqMfgitms { get; set; }
        public virtual DbSet<SeqMfgitmtrk> SeqMfgitmtrks { get; set; }
        public virtual DbSet<SeqMfgmat> SeqMfgmats { get; set; }
        public virtual DbSet<SeqMfgmattrk> SeqMfgmattrks { get; set; }
        public virtual DbSet<SeqMfgope> SeqMfgopes { get; set; }
        public virtual DbSet<SeqMfgopetrk> SeqMfgopetrks { get; set; }
        public virtual DbSet<SeqMfgprn> SeqMfgprns { get; set; }
        public virtual DbSet<SeqMfgtr> SeqMfgtrs { get; set; }
        public virtual DbSet<SeqMfgversion> SeqMfgversions { get; set; }
        public virtual DbSet<SeqMfgwip> SeqMfgwips { get; set; }
        public virtual DbSet<SeqMkglevel> SeqMkglevels { get; set; }
        public virtual DbSet<SeqMkgopg> SeqMkgopgs { get; set; }
        public virtual DbSet<SeqMkgqur> SeqMkgqurs { get; set; }
        public virtual DbSet<SeqMkgqurppl> SeqMkgqurppls { get; set; }
        public virtual DbSet<SeqMmsdefval> SeqMmsdefvals { get; set; }
        public virtual DbSet<SeqMmspar> SeqMmspars { get; set; }
        public virtual DbSet<SeqMtcauto> SeqMtcautoes { get; set; }
        public virtual DbSet<SeqMtcbatch> SeqMtcbatches { get; set; }
        public virtual DbSet<SeqMtcgautmp> SeqMtcgautmps { get; set; }
        public virtual DbSet<SeqMtkcrdasw> SeqMtkcrdasws { get; set; }
        public virtual DbSet<SeqMtohead> SeqMtoheads { get; set; }
        public virtual DbSet<SeqMtolink> SeqMtolinks { get; set; }
        public virtual DbSet<SeqOmmresult> SeqOmmresults { get; set; }
        public virtual DbSet<SeqOmmrpt> SeqOmmrpts { get; set; }
        public virtual DbSet<SeqOperation> SeqOperations { get; set; }
        public virtual DbSet<SeqOppor> SeqOppors { get; set; }
        public virtual DbSet<SeqOrdcomp> SeqOrdcomps { get; set; }
        public virtual DbSet<SeqOrdcov> SeqOrdcovs { get; set; }
        public virtual DbSet<SeqOrder> SeqOrders { get; set; }
        public virtual DbSet<SeqOrdoopar> SeqOrdoopars { get; set; }
        public virtual DbSet<SeqOrdoppar> SeqOrdoppars { get; set; }
        public virtual DbSet<SeqOvenat> SeqOvenats { get; set; }
        public virtual DbSet<SeqOverhead> SeqOverheads { get; set; }
        public virtual DbSet<SeqParesc> SeqParescs { get; set; }
        public virtual DbSet<SeqParflux> SeqParfluxes { get; set; }
        public virtual DbSet<SeqParfluxdet> SeqParfluxdets { get; set; }
        public virtual DbSet<SeqParjal> SeqParjals { get; set; }
        public virtual DbSet<SeqParldap> SeqParldaps { get; set; }
        public virtual DbSet<SeqParmrp> SeqParmrps { get; set; }
        public virtual DbSet<SeqParmto> SeqParmtoes { get; set; }
        public virtual DbSet<SeqParsta1> SeqParsta1 { get; set; }
        public virtual DbSet<SeqParsta2> SeqParsta2 { get; set; }
        public virtual DbSet<SeqParstalig> SeqParstaligs { get; set; }
        public virtual DbSet<SeqParstoacc> SeqParstoaccs { get; set; }
        public virtual DbSet<SeqPartaxusa> SeqPartaxusas { get; set; }
        public virtual DbSet<SeqPartrzl> SeqPartrzls { get; set; }
        public virtual DbSet<SeqPartrzldet> SeqPartrzldets { get; set; }
        public virtual DbSet<SeqParwipacc> SeqParwipaccs { get; set; }
        public virtual DbSet<SeqParwipacc1> SeqParwipaccs1 { get; set; }
        public virtual DbSet<SeqPayaccnum> SeqPayaccnums { get; set; }
        public virtual DbSet<SeqPayaccnumd> SeqPayaccnumds { get; set; }
        public virtual DbSet<SeqPayfrm> SeqPayfrms { get; set; }
        public virtual DbSet<SeqPaylot> SeqPaylots { get; set; }
        public virtual DbSet<SeqPaymenta> SeqPaymentas { get; set; }
        public virtual DbSet<SeqPaymentd> SeqPaymentds { get; set; }
        public virtual DbSet<SeqPaymenth> SeqPaymenths { get; set; }
        public virtual DbSet<SeqPaymtctmp> SeqPaymtctmps { get; set; }
        public virtual DbSet<SeqPaymtctmp2> SeqPaymtctmp2 { get; set; }
        public virtual DbSet<SeqPayorder> SeqPayorders { get; set; }
        public virtual DbSet<SeqPaytmp> SeqPaytmps { get; set; }
        public virtual DbSet<SeqPdpdet> SeqPdpdets { get; set; }
        public virtual DbSet<SeqPdphea> SeqPdpheas { get; set; }
        public virtual DbSet<SeqPeriod> SeqPeriods { get; set; }
        public virtual DbSet<SeqPfootinv> SeqPfootinvs { get; set; }
        public virtual DbSet<SeqPhonecall> SeqPhonecalls { get; set; }
        public virtual DbSet<SeqPhoning> SeqPhonings { get; set; }
        public virtual DbSet<SeqPhyelt> SeqPhyelts { get; set; }
        public virtual DbSet<SeqPinvoice> SeqPinvoices { get; set; }
        public virtual DbSet<SeqPinvoiced> SeqPinvoiceds { get; set; }
        public virtual DbSet<SeqPinvoicev> SeqPinvoicevs { get; set; }
        public virtual DbSet<SeqPitcount> SeqPitcounts { get; set; }
        public virtual DbSet<SeqPitdeb> SeqPitdebs { get; set; }
        public virtual DbSet<SeqPitdebd> SeqPitdebds { get; set; }
        public virtual DbSet<SeqPivot> SeqPivots { get; set; }
        public virtual DbSet<SeqPivzon> SeqPivzons { get; set; }
        public virtual DbSet<SeqPiwrk> SeqPiwrks { get; set; }
        public virtual DbSet<SeqPlgmkg> SeqPlgmkgs { get; set; }
        public virtual DbSet<SeqPlgopg> SeqPlgopgs { get; set; }
        public virtual DbSet<SeqPlmdefval> SeqPlmdefvals { get; set; }
        public virtual DbSet<SeqPlmpar> SeqPlmpars { get; set; }
        public virtual DbSet<SeqPool> SeqPools { get; set; }
        public virtual DbSet<SeqPorder> SeqPorders { get; set; }
        public virtual DbSet<SeqPorderc> SeqPordercs { get; set; }
        public virtual DbSet<SeqPorderp> SeqPorderps { get; set; }
        public virtual DbSet<SeqPorderq> SeqPorderqs { get; set; }
        public virtual DbSet<SeqPorditm> SeqPorditms { get; set; }
        public virtual DbSet<SeqPoscod> SeqPoscods { get; set; }
        public virtual DbSet<SeqPpreason> SeqPpreasons { get; set; }
        public virtual DbSet<SeqPpricconf> SeqPpricconfs { get; set; }
        public virtual DbSet<SeqPpricfich> SeqPpricfiches { get; set; }
        public virtual DbSet<SeqPpriclink> SeqPpriclinks { get; set; }
        public virtual DbSet<SeqPpriclist> SeqPpriclists { get; set; }
        public virtual DbSet<SeqPquotat> SeqPquotats { get; set; }
        public virtual DbSet<SeqPquotatd> SeqPquotatds { get; set; }
        public virtual DbSet<SeqPquotatf> SeqPquotatfs { get; set; }
        public virtual DbSet<SeqPreceipt> SeqPreceipts { get; set; }
        public virtual DbSet<SeqPreceiptd> SeqPreceiptds { get; set; }
        public virtual DbSet<SeqPrequi> SeqPrequis { get; set; }
        public virtual DbSet<SeqPrequisa> SeqPrequisas { get; set; }
        public virtual DbSet<SeqPrequisd> SeqPrequisds { get; set; }
        public virtual DbSet<SeqPrequiso> SeqPrequisoes { get; set; }
        public virtual DbSet<SeqPrereport> SeqPrereports { get; set; }
        public virtual DbSet<SeqPresp> SeqPresps { get; set; }
        public virtual DbSet<SeqPrespd> SeqPrespds { get; set; }
        public virtual DbSet<SeqPrestcov> SeqPrestcovs { get; set; }
        public virtual DbSet<SeqPreturn> SeqPreturns { get; set; }
        public virtual DbSet<SeqPreturnd> SeqPreturnds { get; set; }
        public virtual DbSet<SeqPricstruct> SeqPricstructs { get; set; }
        public virtual DbSet<SeqPrmdadsu> SeqPrmdadsus { get; set; }
        public virtual DbSet<SeqPropln> SeqProplns { get; set; }
        public virtual DbSet<SeqProplnh> SeqProplnhs { get; set; }
        public virtual DbSet<SeqProrog> SeqProrogs { get; set; }
        public virtual DbSet<SeqProrogpce> SeqProrogpces { get; set; }
        public virtual DbSet<SeqPrtscrwrk> SeqPrtscrwrks { get; set; }
        public virtual DbSet<SeqPurtr> SeqPurtrs { get; set; }
        public virtual DbSet<SeqPvcrfoot> SeqPvcrfeet { get; set; }
        public virtual DbSet<SeqPvcrvat> SeqPvcrvats { get; set; }
        public virtual DbSet<SeqPwrkorder> SeqPwrkorders { get; set; }
        public virtual DbSet<SeqPwrkpnd> SeqPwrkpnds { get; set; }
        public virtual DbSet<SeqPwrkpnh> SeqPwrkpnhs { get; set; }
        public virtual DbSet<SeqPwrkpoc> SeqPwrkpocs { get; set; }
        public virtual DbSet<SeqPwrkpop> SeqPwrkpops { get; set; }
        public virtual DbSet<SeqPwrkpoq> SeqPwrkpoqs { get; set; }
        public virtual DbSet<SeqPwrkpqf> SeqPwrkpqfs { get; set; }
        public virtual DbSet<SeqPwrkptd> SeqPwrkptds { get; set; }
        public virtual DbSet<SeqPwrkpth> SeqPwrkpths { get; set; }
        public virtual DbSet<SeqPwrkstt> SeqPwrkstts { get; set; }
        public virtual DbSet<SeqPyrpar> SeqPyrpars { get; set; }
        public virtual DbSet<SeqQlycrd> SeqQlycrds { get; set; }
        public virtual DbSet<SeqQlycrdasw> SeqQlycrdasws { get; set; }
        public virtual DbSet<SeqQlycrdnqa> SeqQlycrdnqas { get; set; }
        public virtual DbSet<SeqQlycrdqst> SeqQlycrdqsts { get; set; }
        public virtual DbSet<SeqQlywrk> SeqQlywrks { get; set; }
        public virtual DbSet<SeqQueue> SeqQueues { get; set; }
        public virtual DbSet<SeqQurcri> SeqQurcris { get; set; }
        public virtual DbSet<SeqQurcrival> SeqQurcrivals { get; set; }
        public virtual DbSet<SeqQurextract> SeqQurextracts { get; set; }
        public virtual DbSet<SeqQurtmp> SeqQurtmps { get; set; }
        public virtual DbSet<SeqReachpar> SeqReachpars { get; set; }
        public virtual DbSet<SeqRelbank> SeqRelbanks { get; set; }
        public virtual DbSet<SeqRelbankrem> SeqRelbankrems { get; set; }
        public virtual DbSet<SeqRelmt940d> SeqRelmt940d { get; set; }
        public virtual DbSet<SeqRepsec> SeqRepsecs { get; set; }
        public virtual DbSet<SeqResource> SeqResources { get; set; }
        public virtual DbSet<SeqResre> SeqResres { get; set; }
        public virtual DbSet<SeqRitenzione> SeqRitenziones { get; set; }
        public virtual DbSet<SeqRouope> SeqRouopes { get; set; }
        public virtual DbSet<SeqRouopestd> SeqRouopestds { get; set; }
        public virtual DbSet<SeqRouscd> SeqRouscds { get; set; }
        public virtual DbSet<SeqRouting> SeqRoutings { get; set; }
        public virtual DbSet<SeqRplwst> SeqRplwsts { get; set; }
        public virtual DbSet<SeqRubassdef> SeqRubassdefs { get; set; }
        public virtual DbSet<SeqRubassdefp> SeqRubassdefps { get; set; }
        public virtual DbSet<SeqRubassval> SeqRubassvals { get; set; }
        public virtual DbSet<SeqRubassvalp> SeqRubassvalps { get; set; }
        public virtual DbSet<SeqRvacoed> SeqRvacoeds { get; set; }
        public virtual DbSet<SeqRvacoeh> SeqRvacoehs { get; set; }
        public virtual DbSet<SeqSaitr> SeqSaitrs { get; set; }
        public virtual DbSet<SeqSaitrsdet> SeqSaitrsdets { get; set; }
        public virtual DbSet<SeqSalesrep> SeqSalesreps { get; set; }
        public virtual DbSet<SeqSaltr> SeqSaltrs { get; set; }
        public virtual DbSet<SeqSbgeo> SeqSbgeos { get; set; }
        public virtual DbSet<SeqSbpbl> SeqSbpbls { get; set; }
        public virtual DbSet<SeqScheduling> SeqSchedulings { get; set; }
        public virtual DbSet<SeqSchgd> SeqSchgds { get; set; }
        public virtual DbSet<SeqSchgh> SeqSchghs { get; set; }
        public virtual DbSet<SeqScmapar> SeqScmapars { get; set; }
        public virtual DbSet<SeqScmdpar> SeqScmdpars { get; set; }
        public virtual DbSet<SeqScohead> SeqScoheads { get; set; }
        public virtual DbSet<SeqScoitm> SeqScoitms { get; set; }
        public virtual DbSet<SeqScomat> SeqScomats { get; set; }
        public virtual DbSet<SeqScosrv> SeqScosrvs { get; set; }
        public virtual DbSet<SeqScpasw> SeqScpasws { get; set; }
        public virtual DbSet<SeqScpqst> SeqScpqsts { get; set; }
        public virtual DbSet<SeqScpqstcnd> SeqScpqstcnds { get; set; }
        public virtual DbSet<SeqScript> SeqScripts { get; set; }
        public virtual DbSet<SeqSdelivery> SeqSdeliveries { get; set; }
        public virtual DbSet<SeqSdeliveryd> SeqSdeliveryds { get; set; }
        public virtual DbSet<SeqSearesult> SeqSearesults { get; set; }
        public virtual DbSet<SeqSeason> SeqSeasons { get; set; }
        public virtual DbSet<SeqSecact> SeqSecacts { get; set; }
        public virtual DbSet<SeqSecpst> SeqSecpsts { get; set; }
        public virtual DbSet<SeqSecpstsel> SeqSecpstsels { get; set; }
        public virtual DbSet<SeqSelcmg> SeqSelcmgs { get; set; }
        public virtual DbSet<SeqSelcmgli> SeqSelcmglis { get; set; }
        public virtual DbSet<SeqSelssp> SeqSelssps { get; set; }
        public virtual DbSet<SeqSelsspcpn> SeqSelsspcpns { get; set; }
        public virtual DbSet<SeqSerrequest> SeqSerrequests { get; set; }
        public virtual DbSet<SeqSetmac> SeqSetmacs { get; set; }
        public virtual DbSet<SeqSetmaccpn> SeqSetmaccpns { get; set; }
        public virtual DbSet<SeqSfootinv> SeqSfootinvs { get; set; }
        public virtual DbSet<SeqSincdet> SeqSincdets { get; set; }
        public virtual DbSet<SeqSincent> SeqSincents { get; set; }
        public virtual DbSet<SeqSinvoice> SeqSinvoices { get; set; }
        public virtual DbSet<SeqSinvoiced> SeqSinvoiceds { get; set; }
        public virtual DbSet<SeqSinvoicep> SeqSinvoiceps { get; set; }
        public virtual DbSet<SeqSinvoicev> SeqSinvoicevs { get; set; }
        public virtual DbSet<SeqSlotmd> SeqSlotmds { get; set; }
        public virtual DbSet<SeqSlotmh> SeqSlotmhs { get; set; }
        public virtual DbSet<SeqSmvtd> SeqSmvtds { get; set; }
        public virtual DbSet<SeqSmvtdval> SeqSmvtdvals { get; set; }
        public virtual DbSet<SeqSmvth> SeqSmvths { get; set; }
        public virtual DbSet<SeqSoi> SeqSois { get; set; }
        public virtual DbSet<SeqSolresult> SeqSolresults { get; set; }
        public virtual DbSet<SeqSolution> SeqSolutions { get; set; }
        public virtual DbSet<SeqSorder> SeqSorders { get; set; }
        public virtual DbSet<SeqSorderc> SeqSordercs { get; set; }
        public virtual DbSet<SeqSorderp> SeqSorderps { get; set; }
        public virtual DbSet<SeqSorderq> SeqSorderqs { get; set; }
        public virtual DbSet<SeqSpack> SeqSpacks { get; set; }
        public virtual DbSet<SeqSpackd> SeqSpackds { get; set; }
        public virtual DbSet<SeqSpprtconf> SeqSpprtconfs { get; set; }
        public virtual DbSet<SeqSpreason> SeqSpreasons { get; set; }
        public virtual DbSet<SeqSpricconf> SeqSpricconfs { get; set; }
        public virtual DbSet<SeqSpricfich> SeqSpricfiches { get; set; }
        public virtual DbSet<SeqSpricincr> SeqSpricincrs { get; set; }
        public virtual DbSet<SeqSpriclink> SeqSpriclinks { get; set; }
        public virtual DbSet<SeqSpriclist> SeqSpriclists { get; set; }
        public virtual DbSet<SeqSpricprtq> SeqSpricprtqs { get; set; }
        public virtual DbSet<SeqSquote> SeqSquotes { get; set; }
        public virtual DbSet<SeqSquoted> SeqSquoteds { get; set; }
        public virtual DbSet<SeqSremac> SeqSremacs { get; set; }
        public virtual DbSet<SeqSremaccpn> SeqSremaccpns { get; set; }
        public virtual DbSet<SeqSresat> SeqSresats { get; set; }
        public virtual DbSet<SeqSrestat> SeqSrestats { get; set; }
        public virtual DbSet<SeqSretempl> SeqSretempls { get; set; }
        public virtual DbSet<SeqSreturn> SeqSreturns { get; set; }
        public virtual DbSet<SeqSreturnd> SeqSreturnds { get; set; }
        public virtual DbSet<SeqStat> SeqStats { get; set; }
        public virtual DbSet<SeqStatprv> SeqStatprvs { get; set; }
        public virtual DbSet<SeqStjadj> SeqStjadjs { get; set; }
        public virtual DbSet<SeqStjtmp> SeqStjtmps { get; set; }
        public virtual DbSet<SeqStkmvtadj> SeqStkmvtadjs { get; set; }
        public virtual DbSet<SeqStkmvtitc> SeqStkmvtitcs { get; set; }
        public virtual DbSet<SeqStkregwrk> SeqStkregwrks { get; set; }
        public virtual DbSet<SeqStktr> SeqStktrs { get; set; }
        public virtual DbSet<SeqStoaccpar> SeqStoaccpars { get; set; }
        public virtual DbSet<SeqStoall> SeqStoalls { get; set; }
        public virtual DbSet<SeqStock> SeqStocks { get; set; }
        public virtual DbSet<SeqStocost> SeqStocosts { get; set; }
        public virtual DbSet<SeqStojou> SeqStojous { get; set; }
        public virtual DbSet<SeqStojouove> SeqStojouoves { get; set; }
        public virtual DbSet<SeqStojouval> SeqStojouvals { get; set; }
        public virtual DbSet<SeqStoloc> SeqStolocs { get; set; }
        public virtual DbSet<SeqStolocaff> SeqStolocaffs { get; set; }
        public virtual DbSet<SeqStolocre> SeqStolocres { get; set; }
        public virtual DbSet<SeqStolot> SeqStolots { get; set; }
        public virtual DbSet<SeqStolotfcy> SeqStolotfcies { get; set; }
        public virtual DbSet<SeqStomvtcost> SeqStomvtcosts { get; set; }
        public virtual DbSet<SeqStopar> SeqStopars { get; set; }
        public virtual DbSet<SeqStopred> SeqStopreds { get; set; }
        public virtual DbSet<SeqStopreh> SeqStoprehs { get; set; }
        public virtual DbSet<SeqStopreli> SeqStoprelis { get; set; }
        public virtual DbSet<SeqStoprelisw> SeqStoprelisws { get; set; }
        public virtual DbSet<SeqStoprew> SeqStoprews { get; set; }
        public virtual DbSet<SeqStoqlyd> SeqStoqlyds { get; set; }
        public virtual DbSet<SeqStoqlyh> SeqStoqlyhs { get; set; }
        public virtual DbSet<SeqStoqlysmp> SeqStoqlysmps { get; set; }
        public virtual DbSet<SeqStoqual> SeqStoquals { get; set; }
        public virtual DbSet<SeqStoreo> SeqStoreos { get; set; }
        public virtual DbSet<SeqStoser> SeqStosers { get; set; }
        public virtual DbSet<SeqStosrg> SeqStosrgs { get; set; }
        public virtual DbSet<SeqStosrgw> SeqStosrgws { get; set; }
        public virtual DbSet<SeqStosynw> SeqStosynws { get; set; }
        public virtual DbSet<SeqStotrk> SeqStotrks { get; set; }
        public virtual DbSet<SeqStotrkwrk> SeqStotrkwrks { get; set; }
        public virtual DbSet<SeqStovalcum> SeqStovalcums { get; set; }
        public virtual DbSet<SeqStovalwrk> SeqStovalwrks { get; set; }
        public virtual DbSet<SeqStowipw> SeqStowipws { get; set; }
        public virtual DbSet<SeqSubcont> SeqSubconts { get; set; }
        public virtual DbSet<SeqSvcrfoot> SeqSvcrfeet { get; set; }
        public virtual DbSet<SeqSvcrvat> SeqSvcrvats { get; set; }
        public virtual DbSet<SeqSwrkdlv> SeqSwrkdlvs { get; set; }
        public virtual DbSet<SeqSwrkinv> SeqSwrkinvs { get; set; }
        public virtual DbSet<SeqSyncdata> SeqSyncdatas { get; set; }
        public virtual DbSet<SeqSynclink> SeqSynclinks { get; set; }
        public virtual DbSet<SeqSyncpar> SeqSyncpars { get; set; }
        public virtual DbSet<SeqTaaaxxx> SeqTaaaxxxes { get; set; }
        public virtual DbSet<SeqTabacclik> SeqTabaccliks { get; set; }
        public virtual DbSet<SeqTaballrul> SeqTaballruls { get; set; }
        public virtual DbSet<SeqTabbomalt> SeqTabbomalts { get; set; }
        public virtual DbSet<SeqTabbudtyp> SeqTabbudtyps { get; set; }
        public virtual DbSet<SeqTabchange> SeqTabchanges { get; set; }
        public virtual DbSet<SeqTabcoeff> SeqTabcoeffs { get; set; }
        public virtual DbSet<SeqTabcostmet> SeqTabcostmets { get; set; }
        public virtual DbSet<SeqTabcostmvt> SeqTabcostmvts { get; set; }
        public virtual DbSet<SeqTabcouaff> SeqTabcouaffs { get; set; }
        public virtual DbSet<SeqTabcountry> SeqTabcountries { get; set; }
        public virtual DbSet<SeqTabctl> SeqTabctls { get; set; }
        public virtual DbSet<SeqTabcur> SeqTabcurs { get; set; }
        public virtual DbSet<SeqTabdepagio> SeqTabdepagios { get; set; }
        public virtual DbSet<SeqTabexpen> SeqTabexpens { get; set; }
        public virtual DbSet<SeqTabfilban> SeqTabfilbans { get; set; }
        public virtual DbSet<SeqTabfiltd> SeqTabfiltds { get; set; }
        public virtual DbSet<SeqTabfor> SeqTabfors { get; set; }
        public virtual DbSet<SeqTabgeocod> SeqTabgeocods { get; set; }
        public virtual DbSet<SeqTablan> SeqTablans { get; set; }
        public virtual DbSet<SeqTablincfg> SeqTablincfgs { get; set; }
        public virtual DbSet<SeqTabloctyp> SeqTabloctyps { get; set; }
        public virtual DbSet<SeqTabmat> SeqTabmats { get; set; }
        public virtual DbSet<SeqTabmodeliv> SeqTabmodelivs { get; set; }
        public virtual DbSet<SeqTabmsg> SeqTabmsgs { get; set; }
        public virtual DbSet<SeqTabpackage> SeqTabpackages { get; set; }
        public virtual DbSet<SeqTabpayterm> SeqTabpayterms { get; set; }
        public virtual DbSet<SeqTabpaytyp> SeqTabpaytyps { get; set; }
        public virtual DbSet<SeqTabpivtyp> SeqTabpivtyps { get; set; }
        public virtual DbSet<SeqTabprecod> SeqTabprecods { get; set; }
        public virtual DbSet<SeqTabprtmod> SeqTabprtmods { get; set; }
        public virtual DbSet<SeqTabratvat> SeqTabratvats { get; set; }
        public virtual DbSet<SeqTabreopol> SeqTabreopols { get; set; }
        public virtual DbSet<SeqTabroualt> SeqTabroualts { get; set; }
        public virtual DbSet<SeqTabround> SeqTabrounds { get; set; }
        public virtual DbSet<SeqTabsafsto> SeqTabsafstoes { get; set; }
        public virtual DbSet<SeqTabsca> SeqTabscas { get; set; }
        public virtual DbSet<SeqTabsivtyp> SeqTabsivtyps { get; set; }
        public virtual DbSet<SeqTabsohtyp> SeqTabsohtyps { get; set; }
        public virtual DbSet<SeqTabstasto> SeqTabstastoes { get; set; }
        public virtual DbSet<SeqTabstorul> SeqTabstoruls { get; set; }
        public virtual DbSet<SeqTabsubdiv> SeqTabsubdivs { get; set; }
        public virtual DbSet<SeqTabunavail> SeqTabunavails { get; set; }
        public virtual DbSet<SeqTabunit> SeqTabunits { get; set; }
        public virtual DbSet<SeqTabvac> SeqTabvacs { get; set; }
        public virtual DbSet<SeqTabvat> SeqTabvats { get; set; }
        public virtual DbSet<SeqTabvatexe> SeqTabvatexes { get; set; }
        public virtual DbSet<SeqTabweedia> SeqTabweedias { get; set; }
        public virtual DbSet<SeqTabwipsto> SeqTabwipstoes { get; set; }
        public virtual DbSet<SeqTabwrkctr> SeqTabwrkctrs { get; set; }
        public virtual DbSet<SeqTask> SeqTasks { get; set; }
        public virtual DbSet<SeqTaxlink> SeqTaxlinks { get; set; }
        public virtual DbSet<SeqTdsprv> SeqTdsprvs { get; set; }
        public virtual DbSet<SeqTdupdclc> SeqTdupdclcs { get; set; }
        public virtual DbSet<SeqTexclob> SeqTexclobs { get; set; }
        public virtual DbSet<SeqTexcpt> SeqTexcpts { get; set; }
        public virtual DbSet<SeqTgrli> SeqTgrlis { get; set; }
        public virtual DbSet<SeqTgrlisfie> SeqTgrlisfies { get; set; }
        public virtual DbSet<SeqTgrlislnk> SeqTgrlislnks { get; set; }
        public virtual DbSet<SeqTgrssp> SeqTgrssps { get; set; }
        public virtual DbSet<SeqTmp2055> SeqTmp2055 { get; set; }
        public virtual DbSet<SeqTmp2855> SeqTmp2855 { get; set; }
        public virtual DbSet<SeqTmpbla> SeqTmpblas { get; set; }
        public virtual DbSet<SeqTmpcnsban> SeqTmpcnsbans { get; set; }
        public virtual DbSet<SeqTmpcnvecar> SeqTmpcnvecars { get; set; }
        public virtual DbSet<SeqTmpcptdta> SeqTmpcptdtas { get; set; }
        public virtual DbSet<SeqTmpdero> SeqTmpderoes { get; set; }
        public virtual DbSet<SeqTmpexpense> SeqTmpexpenses { get; set; }
        public virtual DbSet<SeqTmpfasphy> SeqTmpfasphies { get; set; }
        public virtual DbSet<SeqTmpfup0> SeqTmpfup0 { get; set; }
        public virtual DbSet<SeqTmpfup1> SeqTmpfup1 { get; set; }
        public virtual DbSet<SeqTmpfup2> SeqTmpfup2 { get; set; }
        public virtual DbSet<SeqTmpfupcmt> SeqTmpfupcmts { get; set; }
        public virtual DbSet<SeqTmpinvexp> SeqTmpinvexps { get; set; }
        public virtual DbSet<SeqTmpinvexpw> SeqTmpinvexpws { get; set; }
        public virtual DbSet<SeqTmpiptacpt> SeqTmpiptacpts { get; set; }
        public virtual DbSet<SeqTmpmasfa> SeqTmpmasfas { get; set; }
        public virtual DbSet<SeqTmpmasfa2> SeqTmpmasfa2 { get; set; }
        public virtual DbSet<SeqTmpmaslck> SeqTmpmaslcks { get; set; }
        public virtual DbSet<SeqTmpmaslea> SeqTmpmasleas { get; set; }
        public virtual DbSet<SeqTmpmasphy> SeqTmpmasphies { get; set; }
        public virtual DbSet<SeqTmppaydud> SeqTmppayduds { get; set; }
        public virtual DbSet<SeqTmppaydud2> SeqTmppaydud2 { get; set; }
        public virtual DbSet<SeqTmppaytot> SeqTmppaytots { get; set; }
        public virtual DbSet<SeqTmpplnfa> SeqTmpplnfas { get; set; }
        public virtual DbSet<SeqTmpsitu> SeqTmpsitus { get; set; }
        public virtual DbSet<SeqTmptchange> SeqTmptchanges { get; set; }
        public virtual DbSet<SeqTradeshow> SeqTradeshows { get; set; }
        public virtual DbSet<SeqTrcabx3> SeqTrcabx3 { get; set; }
        public virtual DbSet<SeqTrcvcrdoc> SeqTrcvcrdocs { get; set; }
        public virtual DbSet<SeqTxsa> SeqTxsas { get; set; }
        public virtual DbSet<SeqTxsd> SeqTxsds { get; set; }
        public virtual DbSet<SeqTxsm> SeqTxsms { get; set; }
        public virtual DbSet<SeqTxsp> SeqTxsps { get; set; }
        public virtual DbSet<SeqTxsv> SeqTxsvs { get; set; }
        public virtual DbSet<SeqTxsw> SeqTxsws { get; set; }
        public virtual DbSet<SeqTypace> SeqTypaces { get; set; }
        public virtual DbSet<SeqTypaceint> SeqTypaceints { get; set; }
        public virtual DbSet<SeqUnitoftime> SeqUnitoftimes { get; set; }
        public virtual DbSet<SeqUnpaid> SeqUnpaids { get; set; }
        public virtual DbSet<SeqUporder> SeqUporders { get; set; }
        public virtual DbSet<SeqUporderc> SeqUpordercs { get; set; }
        public virtual DbSet<SeqUporderp> SeqUporderps { get; set; }
        public virtual DbSet<SeqUporderq> SeqUporderqs { get; set; }
        public virtual DbSet<SeqVathi> SeqVathis { get; set; }
        public virtual DbSet<SeqVcussea> SeqVcusseas { get; set; }
        public virtual DbSet<SeqVsorder> SeqVsorders { get; set; }
        public virtual DbSet<SeqVsorderc> SeqVsordercs { get; set; }
        public virtual DbSet<SeqVsorderp> SeqVsorderps { get; set; }
        public virtual DbSet<SeqVsorderq> SeqVsorderqs { get; set; }
        public virtual DbSet<SeqVwsco> SeqVwscoes { get; set; }
        public virtual DbSet<SeqWarflyer> SeqWarflyers { get; set; }
        public virtual DbSet<SeqWarreqcpn> SeqWarreqcpns { get; set; }
        public virtual DbSet<SeqWarrequest> SeqWarrequests { get; set; }
        public virtual DbSet<SeqWcunlisdet> SeqWcunlisdets { get; set; }
        public virtual DbSet<SeqWipcost> SeqWipcosts { get; set; }
        public virtual DbSet<SeqWipresw> SeqWipresws { get; set; }
        public virtual DbSet<SeqWipscpm> SeqWipscpms { get; set; }
        public virtual DbSet<SeqWipscpo> SeqWipscpoes { get; set; }
        public virtual DbSet<SeqWiptmp> SeqWiptmps { get; set; }
        public virtual DbSet<SeqWorkcost> SeqWorkcosts { get; set; }
        public virtual DbSet<SeqWorkload> SeqWorkloads { get; set; }
        public virtual DbSet<SeqWorkstatio> SeqWorkstatios { get; set; }
        public virtual DbSet<SeqWrkstocn> SeqWrkstocns { get; set; }
        public virtual DbSet<SeqWrkstoper> SeqWrkstopers { get; set; }
        public virtual DbSet<SeqWstanl> SeqWstanls { get; set; }
        public virtual DbSet<SeqWstolotfcy> SeqWstolotfcies { get; set; }
        public virtual DbSet<SeqWstoqlyd> SeqWstoqlyds { get; set; }
        public virtual DbSet<SeqXadcpar> SeqXadcpars { get; set; }
        public virtual DbSet<SeqXaindref> SeqXaindrefs { get; set; }
        public virtual DbSet<SeqXaitmlbl> SeqXaitmlbls { get; set; }
        public virtual DbSet<SeqXaitmnot> SeqXaitmnots { get; set; }
        public virtual DbSet<SeqXaitmnotl> SeqXaitmnotls { get; set; }
        public virtual DbSet<SeqXamatiss> SeqXamatisses { get; set; }
        public virtual DbSet<SeqXamytmp> SeqXamytmps { get; set; }
        public virtual DbSet<SeqXanapar> SeqXanapars { get; set; }
        public virtual DbSet<SeqXapckass> SeqXapckasses { get; set; }
        public virtual DbSet<SeqXapckexcep> SeqXapckexceps { get; set; }
        public virtual DbSet<SeqXasfchi> SeqXasfchis { get; set; }
        public virtual DbSet<SeqXasfctxn> SeqXasfctxns { get; set; }
        public virtual DbSet<SeqXashift> SeqXashifts { get; set; }
        public virtual DbSet<SeqXasqlobj> SeqXasqlobjs { get; set; }
        public virtual DbSet<SeqXasqlver> SeqXasqlvers { get; set; }
        public virtual DbSet<SeqXateam> SeqXateams { get; set; }
        public virtual DbSet<SeqXateamhi> SeqXateamhis { get; set; }
        public virtual DbSet<SeqXatmatiss> SeqXatmatisses { get; set; }
        public virtual DbSet<SeqXatmpli> SeqXatmplis { get; set; }
        public virtual DbSet<SeqXatpckass> SeqXatpckasses { get; set; }
        public virtual DbSet<SeqXbcir> SeqXbcirs { get; set; }
        public virtual DbSet<SeqXbedibp> SeqXbedibps { get; set; }
        public virtual DbSet<SeqXbedipar> SeqXbedipars { get; set; }
        public virtual DbSet<SeqXbko> SeqXbkoes { get; set; }
        public virtual DbSet<SeqXbmanrec> SeqXbmanrecs { get; set; }
        public virtual DbSet<SeqXbmiscinv> SeqXbmiscinvs { get; set; }
        public virtual DbSet<SeqXbol> SeqXbols { get; set; }
        public virtual DbSet<SeqXbold> SeqXbolds { get; set; }
        public virtual DbSet<SeqXbppv> SeqXbppvs { get; set; }
        public virtual DbSet<SeqXbrecnoinv> SeqXbrecnoinvs { get; set; }
        public virtual DbSet<SeqXbsohldcod> SeqXbsohldcods { get; set; }
        public virtual DbSet<SeqXbtmpcsrq> SeqXbtmpcsrqs { get; set; }
        public virtual DbSet<SeqXcapppar> SeqXcapppars { get; set; }
        public virtual DbSet<SeqXccrpt1> SeqXccrpt1 { get; set; }
        public virtual DbSet<SeqXcmerpar> SeqXcmerpars { get; set; }
        public virtual DbSet<SeqXcordapp> SeqXcordapps { get; set; }
        public virtual DbSet<SeqXcpaylck> SeqXcpaylcks { get; set; }
        public virtual DbSet<SeqXcpaylktmp> SeqXcpaylktmps { get; set; }
        public virtual DbSet<SeqXcspscnt> SeqXcspscnts { get; set; }
        public virtual DbSet<SeqXcspsmsg> SeqXcspsmsgs { get; set; }
        public virtual DbSet<SeqXctxnlog> SeqXctxnlogs { get; set; }
        public virtual DbSet<SeqXcussch> SeqXcussches { get; set; }
        public virtual DbSet<SeqZaddress> SeqZaddresses { get; set; }
        public virtual DbSet<SeqZinventwho> SeqZinventwhoes { get; set; }
        public virtual DbSet<SeqZordlinkr> SeqZordlinkrs { get; set; }
        public virtual DbSet<SeqZporderdt> SeqZporderdts { get; set; }
        public virtual DbSet<SeqZsinvmax2ivv> SeqZsinvmax2ivv { get; set; }
        public virtual DbSet<SeqZstyldiscon> SeqZstyldiscons { get; set; }
        public virtual DbSet<SeqZstylname> SeqZstylnames { get; set; }
        public virtual DbSet<SeqZtest> SeqZtests { get; set; }
        public virtual DbSet<SeqZtt> SeqZtts { get; set; }
        public virtual DbSet<Serrequest> Serrequests { get; set; }
        public virtual DbSet<Setmac> Setmacs { get; set; }
        public virtual DbSet<Setmaccpn> Setmaccpns { get; set; }
        public virtual DbSet<Sfootinv> Sfootinvs { get; set; }
        public virtual DbSet<Sincdet> Sincdets { get; set; }
        public virtual DbSet<Sincent> Sincents { get; set; }
        public virtual DbSet<Sinvoice> Sinvoices { get; set; }
        public virtual DbSet<Sinvoiced> Sinvoiceds { get; set; }
        public virtual DbSet<Sinvoicep> Sinvoiceps { get; set; }
        public virtual DbSet<Sinvoicev> Sinvoicevs { get; set; }
        public virtual DbSet<Slotmd> Slotmds { get; set; }
        public virtual DbSet<Slotmh> Slotmhs { get; set; }
        public virtual DbSet<Smvtd> Smvtds { get; set; }
        public virtual DbSet<Smvtdval> Smvtdvals { get; set; }
        public virtual DbSet<Smvth> Smvths { get; set; }
        public virtual DbSet<Soi> Sois { get; set; }
        public virtual DbSet<Solresult> Solresults { get; set; }
        public virtual DbSet<Solution> Solutions { get; set; }
        public virtual DbSet<Sorder> Sorders { get; set; }
        public virtual DbSet<Sorderc> Sordercs { get; set; }
        public virtual DbSet<Sorderp> Sorderps { get; set; }
        public virtual DbSet<Sorderq> Sorderqs { get; set; }
        public virtual DbSet<Spack> Spacks { get; set; }
        public virtual DbSet<Spackd> Spackds { get; set; }
        public virtual DbSet<Spprtconf> Spprtconfs { get; set; }
        public virtual DbSet<Spreason> Spreasons { get; set; }
        public virtual DbSet<Spricconf> Spricconfs { get; set; }
        public virtual DbSet<Spricfich> Spricfiches { get; set; }
        public virtual DbSet<Spricincr> Spricincrs { get; set; }
        public virtual DbSet<Spriclink> Spriclinks { get; set; }
        public virtual DbSet<Spriclist> Spriclists { get; set; }
        public virtual DbSet<Spricprtq> Spricprtqs { get; set; }
        public virtual DbSet<Squote> Squotes { get; set; }
        public virtual DbSet<Squoted> Squoteds { get; set; }
        public virtual DbSet<Sremac> Sremacs { get; set; }
        public virtual DbSet<Sremaccpn> Sremaccpns { get; set; }
        public virtual DbSet<Sresat> Sresats { get; set; }
        public virtual DbSet<Srestat> Srestats { get; set; }
        public virtual DbSet<Sretempl> Sretempls { get; set; }
        public virtual DbSet<Sreturn> Sreturns { get; set; }
        public virtual DbSet<Sreturnd> Sreturnds { get; set; }
        public virtual DbSet<Stat> Stats { get; set; }
        public virtual DbSet<Statprv> Statprvs { get; set; }
        public virtual DbSet<Stjtmp> Stjtmps { get; set; }
        public virtual DbSet<Stkmvtadj> Stkmvtadjs { get; set; }
        public virtual DbSet<Stkmvtitc> Stkmvtitcs { get; set; }
        public virtual DbSet<Stkregwrk> Stkregwrks { get; set; }
        public virtual DbSet<Stktr> Stktrs { get; set; }
        public virtual DbSet<Stoaccpar> Stoaccpars { get; set; }
        public virtual DbSet<Stoall> Stoalls { get; set; }
        public virtual DbSet<Stock> Stocks { get; set; }
        public virtual DbSet<Stocost> Stocosts { get; set; }
        public virtual DbSet<Stojou> Stojous { get; set; }
        public virtual DbSet<Stojouove> Stojouoves { get; set; }
        public virtual DbSet<Stojouval> Stojouvals { get; set; }
        public virtual DbSet<Stoloc> Stolocs { get; set; }
        public virtual DbSet<Stolocaff> Stolocaffs { get; set; }
        public virtual DbSet<Stolocre> Stolocres { get; set; }
        public virtual DbSet<Stolot> Stolots { get; set; }
        public virtual DbSet<Stolotfcy> Stolotfcies { get; set; }
        public virtual DbSet<Stomvtcost> Stomvtcosts { get; set; }
        public virtual DbSet<Stopar> Stopars { get; set; }
        public virtual DbSet<Stopred> Stopreds { get; set; }
        public virtual DbSet<Stopreh> Stoprehs { get; set; }
        public virtual DbSet<Stopreli> Stoprelis { get; set; }
        public virtual DbSet<Stoprelisw> Stoprelisws { get; set; }
        public virtual DbSet<Stoprew> Stoprews { get; set; }
        public virtual DbSet<Stoqlyd> Stoqlyds { get; set; }
        public virtual DbSet<Stoqlyh> Stoqlyhs { get; set; }
        public virtual DbSet<Stoqlysmp> Stoqlysmps { get; set; }
        public virtual DbSet<Stoqual> Stoquals { get; set; }
        public virtual DbSet<Storeo> Storeos { get; set; }
        public virtual DbSet<Stoser> Stosers { get; set; }
        public virtual DbSet<Stosrg> Stosrgs { get; set; }
        public virtual DbSet<Stosrgw> Stosrgws { get; set; }
        public virtual DbSet<Stosynw> Stosynws { get; set; }
        public virtual DbSet<Stotrk> Stotrks { get; set; }
        public virtual DbSet<Stotrkwrk> Stotrkwrks { get; set; }
        public virtual DbSet<Stovalcum> Stovalcums { get; set; }
        public virtual DbSet<Stovalwrk> Stovalwrks { get; set; }
        public virtual DbSet<Stowipw> Stowipws { get; set; }
        public virtual DbSet<Subcont> Subconts { get; set; }
        public virtual DbSet<Svcrfoot> Svcrfeet { get; set; }
        public virtual DbSet<Svcrvat> Svcrvats { get; set; }
        public virtual DbSet<Swrkdlv> Swrkdlvs { get; set; }
        public virtual DbSet<Swrkinv> Swrkinvs { get; set; }
        public virtual DbSet<Syncdata> Syncdatas { get; set; }
        public virtual DbSet<Synclink> Synclinks { get; set; }
        public virtual DbSet<Syncpar> Syncpars { get; set; }
        public virtual DbSet<Taaaxxx> Taaaxxxes { get; set; }
        public virtual DbSet<Tabacclik> Tabaccliks { get; set; }
        public virtual DbSet<Taballrul> Taballruls { get; set; }
        public virtual DbSet<Tabbomalt> Tabbomalts { get; set; }
        public virtual DbSet<Tabbudtyp> Tabbudtyps { get; set; }
        public virtual DbSet<Tabchange> Tabchanges { get; set; }
        public virtual DbSet<Tabcoeff> Tabcoeffs { get; set; }
        public virtual DbSet<Tabcostmet> Tabcostmets { get; set; }
        public virtual DbSet<Tabcostmvt> Tabcostmvts { get; set; }
        public virtual DbSet<Tabcouaff> Tabcouaffs { get; set; }
        public virtual DbSet<Tabcountry> Tabcountries { get; set; }
        public virtual DbSet<Tabctl> Tabctls { get; set; }
        public virtual DbSet<Tabcur> Tabcurs { get; set; }
        public virtual DbSet<Tabdepagio> Tabdepagios { get; set; }
        public virtual DbSet<Tabexpen> Tabexpens { get; set; }
        public virtual DbSet<Tabfilban> Tabfilbans { get; set; }
        public virtual DbSet<Tabfiltd> Tabfiltds { get; set; }
        public virtual DbSet<Tabfor> Tabfors { get; set; }
        public virtual DbSet<Tabgeocod> Tabgeocods { get; set; }
        public virtual DbSet<Tablan> Tablans { get; set; }
        public virtual DbSet<Tablincfg> Tablincfgs { get; set; }
        public virtual DbSet<Tabloctyp> Tabloctyps { get; set; }
        public virtual DbSet<Tabmat> Tabmats { get; set; }
        public virtual DbSet<Tabmodeliv> Tabmodelivs { get; set; }
        public virtual DbSet<Tabmsg> Tabmsgs { get; set; }
        public virtual DbSet<Tabpackage> Tabpackages { get; set; }
        public virtual DbSet<Tabpayterm> Tabpayterms { get; set; }
        public virtual DbSet<Tabpaytyp> Tabpaytyps { get; set; }
        public virtual DbSet<Tabpivtyp> Tabpivtyps { get; set; }
        public virtual DbSet<Tabprecod> Tabprecods { get; set; }
        public virtual DbSet<Tabprtmod> Tabprtmods { get; set; }
        public virtual DbSet<Tabratvat> Tabratvats { get; set; }
        public virtual DbSet<Tabreopol> Tabreopols { get; set; }
        public virtual DbSet<Tabroualt> Tabroualts { get; set; }
        public virtual DbSet<Tabround> Tabrounds { get; set; }
        public virtual DbSet<Tabsafsto> Tabsafstoes { get; set; }
        public virtual DbSet<Tabsca> Tabscas { get; set; }
        public virtual DbSet<Tabsivtyp> Tabsivtyps { get; set; }
        public virtual DbSet<Tabsohtyp> Tabsohtyps { get; set; }
        public virtual DbSet<Tabstasto> Tabstastoes { get; set; }
        public virtual DbSet<Tabstorul> Tabstoruls { get; set; }
        public virtual DbSet<Tabsubdiv> Tabsubdivs { get; set; }
        public virtual DbSet<Tabunavail> Tabunavails { get; set; }
        public virtual DbSet<Tabunit> Tabunits { get; set; }
        public virtual DbSet<Tabvac> Tabvacs { get; set; }
        public virtual DbSet<Tabvat> Tabvats { get; set; }
        public virtual DbSet<Tabvatexe> Tabvatexes { get; set; }
        public virtual DbSet<Tabweedia> Tabweedias { get; set; }
        public virtual DbSet<Tabwipsto> Tabwipstoes { get; set; }
        public virtual DbSet<Tabwrkctr> Tabwrkctrs { get; set; }
        public virtual DbSet<Task> Tasks { get; set; }
        public virtual DbSet<Taxlink> Taxlinks { get; set; }
        public virtual DbSet<Tdsprv> Tdsprvs { get; set; }
        public virtual DbSet<Tdupdclc> Tdupdclcs { get; set; }
        public virtual DbSet<Texclob> Texclobs { get; set; }
        public virtual DbSet<Texcpt> Texcpts { get; set; }
        public virtual DbSet<Tgrli> Tgrlis { get; set; }
        public virtual DbSet<Tgrlisfie> Tgrlisfies { get; set; }
        public virtual DbSet<Tgrlislnk> Tgrlislnks { get; set; }
        public virtual DbSet<Tgrssp> Tgrssps { get; set; }
        public virtual DbSet<Tmp2055> Tmp2055 { get; set; }
        public virtual DbSet<Tmp2855> Tmp2855 { get; set; }
        public virtual DbSet<Tmpbla> Tmpblas { get; set; }
        public virtual DbSet<Tmpcnsban> Tmpcnsbans { get; set; }
        public virtual DbSet<Tmpcnvecar> Tmpcnvecars { get; set; }
        public virtual DbSet<Tmpcptdta> Tmpcptdtas { get; set; }
        public virtual DbSet<Tmpdero> Tmpderoes { get; set; }
        public virtual DbSet<Tmpexpense> Tmpexpenses { get; set; }
        public virtual DbSet<Tmpfasphy> Tmpfasphies { get; set; }
        public virtual DbSet<Tmpfup0> Tmpfup0 { get; set; }
        public virtual DbSet<Tmpfup1> Tmpfup1 { get; set; }
        public virtual DbSet<Tmpfup2> Tmpfup2 { get; set; }
        public virtual DbSet<Tmpfupcmt> Tmpfupcmts { get; set; }
        public virtual DbSet<Tmpinvexp> Tmpinvexps { get; set; }
        public virtual DbSet<Tmpinvexpw> Tmpinvexpws { get; set; }
        public virtual DbSet<Tmpiptacpt> Tmpiptacpts { get; set; }
        public virtual DbSet<Tmpmasfa> Tmpmasfas { get; set; }
        public virtual DbSet<Tmpmasfa2> Tmpmasfa2 { get; set; }
        public virtual DbSet<Tmpmaslck> Tmpmaslcks { get; set; }
        public virtual DbSet<Tmpmaslea> Tmpmasleas { get; set; }
        public virtual DbSet<Tmpmasphy> Tmpmasphies { get; set; }
        public virtual DbSet<Tmppaydud> Tmppayduds { get; set; }
        public virtual DbSet<Tmppaydud2> Tmppaydud2 { get; set; }
        public virtual DbSet<Tmppaytot> Tmppaytots { get; set; }
        public virtual DbSet<Tmpplnfa> Tmpplnfas { get; set; }
        public virtual DbSet<Tmpsitu> Tmpsitus { get; set; }
        public virtual DbSet<Tmptchange> Tmptchanges { get; set; }
        public virtual DbSet<Tradeshow> Tradeshows { get; set; }
        public virtual DbSet<Trcabx3> Trcabx3 { get; set; }
        public virtual DbSet<Trcvcrdoc> Trcvcrdocs { get; set; }
        public virtual DbSet<Txsa> Txsas { get; set; }
        public virtual DbSet<Txsd> Txsds { get; set; }
        public virtual DbSet<Txsm> Txsms { get; set; }
        public virtual DbSet<Txsp> Txsps { get; set; }
        public virtual DbSet<Txsv> Txsvs { get; set; }
        public virtual DbSet<Txsw> Txsws { get; set; }
        public virtual DbSet<Typace> Typaces { get; set; }
        public virtual DbSet<Typaceint> Typaceints { get; set; }
        public virtual DbSet<Unitoftime> Unitoftimes { get; set; }
        public virtual DbSet<Unpaid> Unpaids { get; set; }
        public virtual DbSet<Uporder> Uporders { get; set; }
        public virtual DbSet<Uporderc> Upordercs { get; set; }
        public virtual DbSet<Uporderp> Uporderps { get; set; }
        public virtual DbSet<Uporderq> Uporderqs { get; set; }
        public virtual DbSet<Vathi> Vathis { get; set; }
        public virtual DbSet<Vsorder> Vsorders { get; set; }
        public virtual DbSet<Vsorderc> Vsordercs { get; set; }
        public virtual DbSet<Vsorderp> Vsorderps { get; set; }
        public virtual DbSet<Vsorderq> Vsorderqs { get; set; }
        public virtual DbSet<Warflyer> Warflyers { get; set; }
        public virtual DbSet<Warreqcpn> Warreqcpns { get; set; }
        public virtual DbSet<Warrequest> Warrequests { get; set; }
        public virtual DbSet<Wcunlisdet> Wcunlisdets { get; set; }
        public virtual DbSet<Wipcost> Wipcosts { get; set; }
        public virtual DbSet<Wipresw> Wipresws { get; set; }
        public virtual DbSet<Wipscpm> Wipscpms { get; set; }
        public virtual DbSet<Wipscpo> Wipscpoes { get; set; }
        public virtual DbSet<Wiptmp> Wiptmps { get; set; }
        public virtual DbSet<Workcost> Workcosts { get; set; }
        public virtual DbSet<Workload> Workloads { get; set; }
        public virtual DbSet<Workstatio> Workstatios { get; set; }
        public virtual DbSet<Wrkstocn> Wrkstocns { get; set; }
        public virtual DbSet<Wrkstoper> Wrkstopers { get; set; }
        public virtual DbSet<Wstanl> Wstanls { get; set; }
        public virtual DbSet<Wstolotfcy> Wstolotfcies { get; set; }
        public virtual DbSet<Wstoqlyd> Wstoqlyds { get; set; }
        public virtual DbSet<Xadcpar> Xadcpars { get; set; }
        public virtual DbSet<Xaindref> Xaindrefs { get; set; }
        public virtual DbSet<Xaitmlbl> Xaitmlbls { get; set; }
        public virtual DbSet<Xaitmnot> Xaitmnots { get; set; }
        public virtual DbSet<Xaitmnotl> Xaitmnotls { get; set; }
        public virtual DbSet<Xamatiss> Xamatisses { get; set; }
        public virtual DbSet<Xamytmp> Xamytmps { get; set; }
        public virtual DbSet<Xanapar> Xanapars { get; set; }
        public virtual DbSet<Xapckass> Xapckasses { get; set; }
        public virtual DbSet<Xapckexcep> Xapckexceps { get; set; }
        public virtual DbSet<Xasfchi> Xasfchis { get; set; }
        public virtual DbSet<Xasfctxn> Xasfctxns { get; set; }
        public virtual DbSet<Xashift> Xashifts { get; set; }
        public virtual DbSet<Xateam> Xateams { get; set; }
        public virtual DbSet<Xateamhi> Xateamhis { get; set; }
        public virtual DbSet<Xatmatiss> Xatmatisses { get; set; }
        public virtual DbSet<Xatmpli> Xatmplis { get; set; }
        public virtual DbSet<Xatpckass> Xatpckasses { get; set; }
        public virtual DbSet<Xbcir> Xbcirs { get; set; }
        public virtual DbSet<Xbedibp> Xbedibps { get; set; }
        public virtual DbSet<Xbedipar> Xbedipars { get; set; }
        public virtual DbSet<Xbko> Xbkoes { get; set; }
        public virtual DbSet<Xbmanrec> Xbmanrecs { get; set; }
        public virtual DbSet<Xbmiscinv> Xbmiscinvs { get; set; }
        public virtual DbSet<Xbol> Xbols { get; set; }
        public virtual DbSet<Xbold> Xbolds { get; set; }
        public virtual DbSet<Xbppv> Xbppvs { get; set; }
        public virtual DbSet<Xbrecnoinv> Xbrecnoinvs { get; set; }
        public virtual DbSet<Xbsohldcod> Xbsohldcods { get; set; }
        public virtual DbSet<Xbtmpcsrq> Xbtmpcsrqs { get; set; }
        public virtual DbSet<Xcapppar> Xcapppars { get; set; }
        public virtual DbSet<Xccrpt1> Xccrpt1 { get; set; }
        public virtual DbSet<Xcmerpar> Xcmerpars { get; set; }
        public virtual DbSet<Xcordapp> Xcordapps { get; set; }
        public virtual DbSet<Xcpaylck> Xcpaylcks { get; set; }
        public virtual DbSet<Xcpaylktmp> Xcpaylktmps { get; set; }
        public virtual DbSet<Xcspscnt> Xcspscnts { get; set; }
        public virtual DbSet<Xcspsmsg> Xcspsmsgs { get; set; }
        public virtual DbSet<Xctxnlog> Xctxnlogs { get; set; }
        public virtual DbSet<Zaddress> Zaddresses { get; set; }
        public virtual DbSet<Zinventwho> Zinventwhoes { get; set; }
        public virtual DbSet<Zordlinkr> Zordlinkrs { get; set; }
        public virtual DbSet<Zporderdt> Zporderdts { get; set; }
        public virtual DbSet<Zstyldiscon> Zstyldiscons { get; set; }
        public virtual DbSet<Zstylname> Zstylnames { get; set; }
        public virtual DbSet<Ztt> Ztts { get; set; }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see http://go.microsoft.com/fwlink/?LinkId=723263.
                optionsBuilder.UseSqlServer("Data Source=192.168.1.206\\X3ORTHO;Initial Catalog=x3premdb;Persist Security Info=True;User ID=zreports;Password=of");
            }
        }

        public override int SaveChanges()
        {
	        var entities = (from entry in ChangeTracker.Entries()
		        where entry.State == EntityState.Modified || entry.State == EntityState.Added
		        select entry.Entity);

	        foreach (var entity in entities)
	        {
		        var validationContext = new ValidationContext(entity);
		        Validator.ValidateObject(entity, validationContext);
	        }

	        return base.SaveChanges();
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("Relational:Collation", "Latin1_General_BIN");

            modelBuilder.Entity<Abank>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ABANK_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Abicond>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ABICOND_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Abidatmrt>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ABIDATMRT_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Abidatwrh>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ABIDATWRH_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Abidim>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ABIDIM_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Abidimfld>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ABIDIMFLD_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Abihiera>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ABIHIERA_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Abiprfusr>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ABIPRFUSR_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Abiregde>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ABIREGDES_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Abiregorg>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ABIREGORG_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Abireport>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ABIREPORT_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Abireportd>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ABIREPORTD_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Abitabagg>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ABITABAGG_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Abitabdat>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ABITABDAT_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Abitabfld>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ABITABFLD_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Abitabind>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ABITABIND_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Abitablnk>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ABITABLNK_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Abitraunv>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ABITRAUNV_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Ablob>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ABLOB_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Acalcul>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ACALCUL_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Acccod>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ACCCOD_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Acce>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ACCES_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Achange>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ACHANGE_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Aclob>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ACLOB_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Acodnum>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ACODNUM_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Aconsult>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ACONSULT_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Actcodpar>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ACTCODPAR_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Action>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ACTION_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Activ>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ACTIV_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Actl>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ACTL_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Actpar>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ACTPAR_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Adelete>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ADELETE_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Adictrt>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ADICTRT_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Adocblb>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ADOCBLB_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Adocclb>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ADOCCLB_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Adocfld>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ADOCFLD_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Adocfnc>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ADOCFNC_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Adocument>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ADOCUMENT_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Adopar>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ADOPAR_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Adoval>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ADOVAL_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Adovalau>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ADOVALAUS_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Adovalgrp>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ADOVALGRP_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Aelt>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("AELT_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Aeltlink>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("AELTLINK_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Aenchaine>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("AENCHAINE_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Aentree>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("AENTREE_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Aespion>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("AESPION_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Aexpv3>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("AEXPV3_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Aexpv3d>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("AEXPV3D_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Afctexe>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("AFCTEXE_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Afctfct>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("AFCTFCT_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Afctfcy>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("AFCTFCY_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Afctprf>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("AFCTPRF_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Afonction>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("AFONCTION_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Aglobvar>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("AGLOBVAR_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Agrpcpy>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("AGRPCPY_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Agrpfcy>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("AGRPFCY_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Ahisto>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("AHISTO_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Ahistod>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("AHISTOD_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Aindex>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("AINDEX_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Alink>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ALINK_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Alistec>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ALISTEC_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Alisted>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ALISTED_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Alisteh>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ALISTEH_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Alistel>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ALISTEL_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Alister>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ALISTER_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Alistet>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ALISTET_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Alnksub>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ALNKSUB_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Alogin>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ALOGIN_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Alstrd>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ALSTRD_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Amaint>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("AMAINT_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Amemo>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("AMEMO_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Amenloc>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("AMENLOC_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Amenuser>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("AMENUSER_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Ametuti>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("AMETUTI_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Amsk>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("AMSK_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Amskact>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("AMSKACT_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Amskpar>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("AMSKPAR_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Amskzon>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("AMSKZON_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Anavcre>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ANAVCRE_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Anavfil>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ANAVFIL_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Anavig>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ANAVIG_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Anetvibe>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ANETVIBE_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Annuaire>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ANNUAIRE_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Aobjbur>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("AOBJBUR_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Aobjburmod>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("AOBJBURMOD_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Aobjet>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("AOBJET_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Aobjext>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("AOBJEXT_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Aobjextd>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("AOBJEXTD_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Aobjextmp>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("AOBJEXTMP_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Aobjextmpb>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("AOBJEXTMPB_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Aobjextmpc>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("AOBJEXTMPC_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Aobjextmpd>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("AOBJEXTMPD_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Aobjextmpe>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("AOBJEXTMPE_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Aobjextr>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("AOBJEXTR_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Aobjlnk>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("AOBJLNK_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Aobjlst>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("AOBJLST_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Aobjprop>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("AOBJPROP_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Aobjsel>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("AOBJSEL_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Aobjtab>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("AOBJTAB_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Aobjtxt>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("AOBJTXT_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Aobjtxta>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("AOBJTXTA_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Aparimpexp>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("APARIMPEXP_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Apatch>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("APATCH_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Apatchmod>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("APATCHMOD_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Aplcom>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("APLCOM_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Apllck>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("APLLCK_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Aplstd>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("APLSTD_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Aportmod>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("APORTMOD_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Aporttab>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("APORTTAB_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Aportuser>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("APORTUSER_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Aportvig>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("APORTVIG_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Aprintde>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("APRINTDES_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Aprinter>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("APRINTER_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Aprocessu>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("APROCESSUS_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Aproctexte>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("APROCTEXTE_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Aprofil>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("APROFIL_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Aproman>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("APROMEN_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Aprtau>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("APRTAUS_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Aprtbrw>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("APRTBRW_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Aptlpage>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("APTLPAGE_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Aptlvw>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("APTLVW_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Archpar>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ARCHPAR_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Archpare>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ARCHPARE_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Archparu>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ARCHPARU_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Archparw>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ARCHPARW_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Arefaml>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("AREFAML_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Areftxt>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("AREFTXT_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Areport>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("AREPORT_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Areport1>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("AREPORTS_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Areporta>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("AREPORTA_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Areportd>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("AREPORTD_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Areportg>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("AREPORTG_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Areportm>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("AREPORTM_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Areportv>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("AREPORTV_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Areportx>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("AREPORTX_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Areportz>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("AREPORTZ_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Arole>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("AROLE_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Assconf>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ASSCONF_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Astr>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ASTR_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Astractfld>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ASTRACTFLD_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Astrfld>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ASTRFLD_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Astrlist>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ASTRLIST_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Astrlistd>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ASTRLISTD_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Astrmet>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ASTRMET_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Astrparfld>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ASTRPARFLD_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Astrxml>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ASTRXML_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Astrxmld>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ASTRXMLD_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Astyle>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ASTYLE_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Astylec>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ASTYLEC_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Astylep>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ASTYLEP_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Asubprog>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ASUBPROG_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Asubprogd>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ASUBPROGD_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Atabaud>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ATABAUD_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Atabdiv>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ATABDIV_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Atabind>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ATABIND_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Atable>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ATABLE_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Atabtab>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ATABTAB_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Atabzon>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ATABZON_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Atexmod>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ATEXMOD_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Atexte>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ATEXTE_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Atextra>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ATEXTRA_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Atmptra>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ATMPTRA_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Atransac>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ATRANSAC_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Atype>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ATYPE_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Audith>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("AUDITH_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Auditl>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("AUDITL_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Aurl>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("AURL_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Ausrbpr>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("AUSRBPR_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Autili>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("AUTILIS_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Avalatt>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("AVALATT_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Avalnum>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("AVALNUM_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Avarloc>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("AVARLOC_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Aview>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("AVIEW_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Aviewb>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("AVIEWB_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Aviewc>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("AVIEWC_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Aviewd>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("AVIEWD_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Avocab>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("AVOCAB_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Awebserde>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("AWEBSERDES_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Awebservic>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("AWEBSERVIC_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Awinbout>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("AWINBOUT_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Awinbro>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("AWINBRO_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Awindow>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("AWINDOW_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Awinpar>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("AWINPAR_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Awrkhisde>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("AWRKHISDES_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Awrkhisjoi>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("AWRKHISJOI_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Awrkhisme>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("AWRKHISMES_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Awrkhissui>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("AWRKHISSUI_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Awrklnk>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("AWRKLNK_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Awrkpar>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("AWRKPAR_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Awrkparc>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("AWRKPARC_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Awrkparf>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("AWRKPARF_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Awrkparh>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("AWRKPARH_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Awrkparx>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("AWRKPARX_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Awrkreg>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("AWRKREG_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Awrkregval>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("AWRKREGVAL_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Awrktrn>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("AWRKTRN_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Awrktrnd>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("AWRKTRND_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Awrkusr>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("AWRKUSR_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Awsdl>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("AWSDL_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Awsdl1>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("AWSDL1_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Balana>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("BALANA_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Balance>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("BALANCE_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Bank>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("BANK_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Banrec>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("BANREC_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Banrecd>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("BANRECD_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Bappoint>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("BAPPOINT_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Batch>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("BATCH_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Benchtr>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("BENCHTRS_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Betcpy>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("BETCPY_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Betcpyl>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("BETCPYL_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Bid>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("BID_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Bilsta>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("BILSTA_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Blacmm>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("BLACMM_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Blaqty>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("BLAQTY_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Bom>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("BOM_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Bomd>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("BOMD_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Bomprn>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("BOMPRN_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Bomret>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("BOMRET_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Bomwu>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("BOMWUS_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Box1099>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("BOX1099_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Bp1099begbal>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("BP1099BEGBAL_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Bp1099prn>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("BP1099PRN_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Bpaddress>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("BPADDRESS_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Bpartner>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("BPARTNER_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Bpcarrier>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("BPCARRIER_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Bpccateg>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("BPCCATEG_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Bpcinvlig>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("BPCINVLIG_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Bpcinvliga>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("BPCINVLIGA_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Bpcinvvat>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("BPCINVVAT_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Bpcustmvt>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("BPCUSTMVT_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Bpcustomer>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("BPCUSTOMER_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Bpdlvcust>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("BPDLVCUST_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Bpexcept>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("BPEXCEPT_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Bpmisc>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("BPMISC_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Bpmisccgf>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("BPMISCCGF_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Bps1099gen>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("BPS1099GEN_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Bps1099mnt>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("BPS1099MNT_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Bps1099pay>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("BPS1099PAY_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Bpscateg>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("BPSCATEG_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Bpshisupln>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("BPSHISUPLN_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Bpshisupp>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("BPSHISUPP_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Bpsinvlig>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("BPSINVLIG_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Bpsinvliga>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("BPSINVLIGA_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Bpsupplier>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("BPSUPPLIER_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Bpsuppmvt>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("BPSUPPMVT_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Brdkey>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("BRDKEY_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Bud>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("BUD_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Budforcal>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("BUDFORCAL_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Budod>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("BUDOD_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Budod1>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("BUDODS_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Budpar>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("BUDPAR_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Budpuraud>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("BUDPURAUD_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Budvarcal>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("BUDVARCAL_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Budver>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("BUDVER_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Caauz>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("CAAUZ_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Cacce>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("CACCE_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Caccedef>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("CACCEDEF_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Cadiedef>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("CADIEDEF_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Cadistmp>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("CADISTMP_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Cadsp>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("CADSP_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Calcdbg>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("CALCDBG_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Callattemp>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("CALLATTEMP_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Capvar>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("CAPVAR_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Cararea>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("CARAREA_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Carprice>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("CARPRICE_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Cblob>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("CBLOB_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Cbndet>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("CBNDET_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Cbnhea>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("CBNHEA_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Cbnwrk>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("CBNWRK_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Cdfcod>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("CDFCOD_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Cdfcpy>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("CDFCPY_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Cdffcy>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("CDFFCY_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Cdfpar>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("CDFPAR_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Cdiadsp>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("CDIADSP_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Chqbok>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("CHQBOK_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Chqnum>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("CHQNUM_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Cmarketing>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("CMARKETING_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Company>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("COMPANY_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Contact>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("CONTACT_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Contactcrm>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("CONTACTCRM_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Contamt>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("CONTAMT_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Contamtx>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("CONTAMTX_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Contcare>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("CONTCARE_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Contcov>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("CONTCOV_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Context>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("CONTEXT_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Contidx>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("CONTIDX_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Contitm>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("CONTITM_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Contpbl>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("CONTPBL_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Contqual>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("CONTQUAL_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Contrew>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("CONTREW_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Contrewx>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("CONTREWX_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Contserv>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("CONTSERV_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Contservx>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("CONTSERVX_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Conttempl>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("CONTTEMPL_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Correp>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("CORREP_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Correspond>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("CORRESPOND_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Cptanalin>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("CPTANALIN_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Cptfootlnk>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("CPTFOOTLNK_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Crmclob>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("CRMCLOB_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Crmtr>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("CRMTRS_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Crmtrsval>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("CRMTRSVAL_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Csfparh>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("CSFPARH_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Csfparl>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("CSFPARL_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Csfre>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("CSFRES_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Ctrlnivw>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("CTRLNIVW_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Cunlisdet>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("CUNLISDET_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Cunliste>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("CUNLISTE_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Cunsession>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("CUNSESSION_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Dadcpy>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("DADCPY_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Dadfcy>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("DADFCY_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Dclvat>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("DCLVAT_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Dclvatpay>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("DCLVATPAY_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Defval>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("DEFVAL_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Deprec>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("DEPREC_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Deprecarc>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("DEPRECARC_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Diahou>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("DIAHOU_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Dietr>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("DIETRS_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Dietrsxx>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("DIETRSXX_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Dkskey>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("DKSKEY_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Doobpcint>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("DOOBPCINT_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Doobpclnk>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("DOOBPCLNK_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Dprmod>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("DPRMOD_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Dprmodopt>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("DPRMODOPT_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Dprmodrat>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("DPRMODRAT_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Edifrm>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("EDIFRM_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Edipar>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("EDIPAR_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Ediseg>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("EDISEG_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Editrbk>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("EDITRBK_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Edtdadsu>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("EDTDADSU_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Edttd>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("EDTTDS_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Efasact>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("EFASACT_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Efasaffage>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("EFASAFFAGE_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Efaschgimp>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("EFASCHGIMP_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Efaschgppl>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("EFASCHGPPL_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Efascnl>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("EFASCNL_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Efascrt>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("EFASCRT_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Efasiml>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("EFASIML_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Efasiss>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("EFASISS_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Efaslnkcnl>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("EFASLNKCNL_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Efasmtc>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("EFASMTC_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Efasreeval>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("EFASREEVAL_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Efasvatreg>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("EFASVATREG_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Elofcim>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ELOFCIM_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Elofcnl>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ELOFCNL_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Elofvatreg>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ELOFVATREG_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Emodele>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("EMODELE_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Ephyaffgeo>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("EPHYAFFGEO_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Ephycrt>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("EPHYCRT_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Ephyiss>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("EPHYISS_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Escsre>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ESCSRE_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Evefa>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("EVEFAS_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Evelof>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("EVELOF_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Exkword>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("EXKWORD_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Exparam>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("EXPARAM_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Expens>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("EXPENSES_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Expensesh>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("EXPENSESH_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Facgroup>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("FACGROUP_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Facility>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("FACILITY_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Factor>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("FACTOR_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Fampb>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("FAMPB_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Fampbque>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("FAMPBQUE_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Fampbrep>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("FAMPBREP_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Fiedic>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("FIEDIC_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Fiedicfie>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("FIEDICFIE_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Filtd>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("FILTDS_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Fiscalyear>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("FISCALYEAR_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Fiscyear>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("FISCYEAR_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Frefld>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("FREFLD_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Fup>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("FUP_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Fupgrp>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("FUPGRP_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Fuptot>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("FUPTOT_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Fuptxt>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("FUPTXT_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Fxdasset>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("FXDASSETS_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Fxdlifl>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("FXDLIFL_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Fxdmvt>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("FXDMVT_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Fxdmvtd>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("FXDMVTD_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Gacccl>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("GACCCLS_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Gacccode>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("GACCCODE_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Gacccodlig>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("GACCCODLIG_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Gaccdef>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("GACCDEF_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Gaccdencod>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("GACCDENCOD_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Gaccdim>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("GACCDIM_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Gaccdudate>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("GACCDUDATE_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Gaccentry>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("GACCENTRY_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Gaccentrya>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("GACCENTRYA_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Gaccentryd>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("GACCENTRYD_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Gaccfix>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("GACCFIX_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Gaccfiyena>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("GACCFIYENA_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Gaccfiyend>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("GACCFIYEND_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Gaccgrupym>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("GACCGRUPYM_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Gaccount>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("GACCOUNT_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Gaccpym>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("GACCPYM_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Gaccpymlik>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("GACCPYMLIK_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Gaccpymprt>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("GACCPYMPRT_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Gacctmp>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("GACCTMP_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Gacctmpa>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("GACCTMPA_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Gacctmpd>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("GACCTMPD_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Gacm>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("GACM_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Gajousta>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("GAJOUSTA_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Gaparbse>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("GAPARBSE_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Gapardum>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("GAPARDUM_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Gautace>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("GAUTACE_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Gautaced>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("GAUTACED_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Gautacef>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("GAUTACEF_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Gbagscr>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("GBAGSCR_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Gcaccoa>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("GCACCOA_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Gccegrupym>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("GCCEGRUPYM_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Gccepym>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("GCCEPYM_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Gccepymlik>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("GCCEPYMLIK_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Gccepymprt>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("GCCEPYMPRT_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Gclcacepar>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("GCLCACEPAR_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Gcoa>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("GCOA_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Gcommit>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("GCOMMIT_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Gcommitd>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("GCOMMITD_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Gcommitx>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("GCOMMITX_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Gdiaacc>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("GDIAACC_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Gdiaaccd>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("GDIAACCD_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Gdiaentry>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("GDIAENTRY_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Gdiaentryd>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("GDIAENTRYD_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Gdie>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("GDIE_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Gdudscr>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("GDUDSCR_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Gentlot>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("GENTLOT_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Gentlota>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("GENTLOTA_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Gentlotd>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("GENTLOTD_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Gentloth>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("GENTLOTH_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Gfupscr>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("GFUPSCR_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Gjoucoa>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("GJOUCOA_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Gjournal>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("GJOURNAL_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Gled>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("GLED_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Grpacemtc>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("GRPACEMTC_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Grpautace>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("GRPAUTACE_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Grpcur>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("GRPCUR_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Grpdsp>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("GRPDSP_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Grpsac>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("GRPSAC_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Gtabacc>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("GTABACC_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Gtabacc2>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("GTABACC2_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Gtmpmtc>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("GTMPMTC_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Gtypaccent>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("GTYPACCENT_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Gvarcodpar>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("GVARCODPAR_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Gvargau>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("GVARGAU_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Gvarpargau>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("GVARPARGAU_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Gvarparval>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("GVARPARVAL_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Hd1clob>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("HD1CLOB_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Hd2clob>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("HD2CLOB_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Hd3clob>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("HD3CLOB_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Hd4clob>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("HD4CLOB_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Hd5clob>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("HD5CLOB_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Hd6clob>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("HD6CLOB_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Hd7clob>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("HD7CLOB_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Hd8clob>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("HD8CLOB_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Hdktask>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("HDKTASK_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Hdktaskinv>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("HDKTASKINV_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Hdktr>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("HDKTRS_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Hdktrsval>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("HDKTRSVAL_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Histocrm>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("HISTOCRM_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Histodud>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("HISTODUD_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Histoomm>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("HISTOOMM_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Honlin>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("HONLIN_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Honprv>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("HONPRV_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Horoitm>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("HOROITM_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Ilogimg>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ILOGIMG_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Imcdetprt>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("IMCDETPRT_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Interven>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("INTERVEN_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Invdacpar>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("INVDACPAR_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Invope>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("INVOPE_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Invpar>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("INVPAR_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Invpcr>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("INVPCR_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Invprb>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("INVPRB_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Invpri>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("INVPRI_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Invsta>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("INVSTA_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Itcdet>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ITCDET_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Itcdetprt>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ITCDETPRT_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Itcmat>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ITCMAT_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Itcmatch>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ITCMATCH_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Itcnat>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ITCNAT_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Itcwst>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ITCWST_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Itcwstw>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ITCWSTW_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Itmabcwrk>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ITMABCWRK_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Itmacggrp>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ITMACGGRP_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Itmbom>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ITMBOM_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Itmbp>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ITMBPS_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Itmbpc>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ITMBPC_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Itmcateg>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ITMCATEG_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Itmcomp>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ITMCOMP_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Itmcost>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ITMCOST_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Itmcpplnk>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ITMCPPLNK_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Itmcusnom>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ITMCUSNOM_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Itmfacilit>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ITMFACILIT_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Itmmaster>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ITMMASTER_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Itmmvt>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ITMMVT_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Itmmvthi>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ITMMVTHIS_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Itmsale>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ITMSALES_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Labelprn>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("LABELPRN_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Lastcusmvt>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("LASTCUSMVT_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Lastsupmvt>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("LASTSUPMVT_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Layoutfa>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("LAYOUTFAS_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Lead>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("LEAD_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Lnkcptabd>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("LNKCPTABD_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Lnkcptabx3>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("LNKCPTABX3_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Localizat>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("LOCALIZAT_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Machine>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("MACHINES_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Macitn>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("MACITN_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Macwarreq>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("MACWARREQ_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Mailing>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("MAILING_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Mailxml>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("MAILXML_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Mailxmld>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("MAILXMLD_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Marassdef>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("MARASSDEF_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Marassrep>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("MARASSREP_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Mardef>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("MARDEF_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Mardefval>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("MARDEFVAL_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Marrepsec>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("MARREPSEC_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Marsct>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("MARSCT_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Matchcode>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("MATCHCODE_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Matchtol>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("MATCHTOL_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Matcstw>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("MATCSTW_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Media>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("MEDIA_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Mespar>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("MESPAR_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Mfcdetprt>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("MFCDETPRT_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Mfcmat>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("MFCMAT_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Mfcnat>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("MFCNAT_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Mfcscrap>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("MFCSCRAP_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Mfctyprel>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("MFCTYPREL_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Mfcwst>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("MFCWST_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Mfganl>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("MFGANL_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Mfgbsmwrk>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("MFGBSMWRK_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Mfgcost>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("MFGCOST_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Mfghead>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("MFGHEAD_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Mfgheadtrk>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("MFGHEADTRK_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Mfgitm>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("MFGITM_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Mfgitmtrk>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("MFGITMTRK_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Mfgmat>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("MFGMAT_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Mfgmattrk>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("MFGMATTRK_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Mfgope>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("MFGOPE_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Mfgopetrk>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("MFGOPETRK_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Mfgprn>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("MFGPRN_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Mfgtr>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("MFGTRS_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Mfgversion>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("MFGVERSION_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Mfgwip>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("MFGWIP_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Mkglevel>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("MKGLEVEL_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Mkgopg>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("MKGOPG_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Mkgqur>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("MKGQUR_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Mkgqurppl>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("MKGQURPPL_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Mmsdefval>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("MMSDEFVAL_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Mmspar>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("MMSPAR_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Mtcauto>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("MTCAUTO_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Mtcbatch>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("MTCBATCH_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Mtcgautmp>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("MTCGAUTMP_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Mtkcrdasw>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("MTKCRDASW_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Mtohead>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("MTOHEAD_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Mtolink>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("MTOLINK_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Ommresult>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("OMMRESULT_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Ommrpt>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("OMMRPT_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Operation>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("OPERATIONS_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Oppor>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("OPPOR_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Ordcomp>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ORDCOMP_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Ordcov>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ORDCOV_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Order>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ORDERS_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Ordoopar>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ORDOOPAR_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Ordoppar>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ORDOPPAR_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Ovenat>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("OVENAT_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Overhead>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("OVERHEAD_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Paresc>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("PARESC_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Parflux>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("PARFLUX_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Parfluxdet>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("PARFLUXDET_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Parjal>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("PARJAL_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Parldap>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("PARLDAP_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Parmrp>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("PARMRP_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Parmto>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("PARMTO_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Parsta1>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("PARSTA1_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Parsta2>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("PARSTA2_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Parstalig>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("PARSTALIG_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Parstoacc>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("PARSTOACC_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Partaxusa>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("PARTAXUSA_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Partrzl>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("PARTRZL_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Partrzldet>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("PARTRZLDET_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Parwipacc>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("PARWIPACC_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Parwipacc1>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("PARWIPACCS_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Payaccnum>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("PAYACCNUM_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Payaccnumd>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("PAYACCNUMD_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Payfrm>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("PAYFRM_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Paylot>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("PAYLOT_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Paymenta>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("PAYMENTA_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Paymentd>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("PAYMENTD_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Paymenth>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("PAYMENTH_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Paymtctmp>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("PAYMTCTMP_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Paymtctmp2>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("PAYMTCTMP2_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Payorder>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("PAYORDER_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Paytmp>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("PAYTMP_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Pdpdet>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("PDPDET_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Pdphea>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("PDPHEA_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Period>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("PERIOD_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Pfootinv>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("PFOOTINV_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Phonecall>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("PHONECALL_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Phoning>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("PHONING_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Phyelt>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("PHYELT_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Pinvoice>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("PINVOICE_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Pinvoiced>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("PINVOICED_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Pinvoicev>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("PINVOICEV_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Pitcount>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("PITCOUNT_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Pitdeb>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("PITDEB_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Pitdebd>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("PITDEBD_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Pivot>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("PIVOTS_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Pivzon>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("PIVZON_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Piwrk>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("PIWRK_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Plgmkg>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("PLGMKG_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Plgopg>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("PLGOPG_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Plmdefval>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("PLMDEFVAL_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Plmpar>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("PLMPAR_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Pool>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("POOL_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Porder>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("PORDER_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Porderc>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("PORDERC_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Porderp>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("PORDERP_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Porderq>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("PORDERQ_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Porditm>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("PORDITM_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Poscod>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("POSCOD_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Ppreason>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("PPREASON_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Ppricconf>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("PPRICCONF_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Ppricfich>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("PPRICFICH_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Ppriclink>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("PPRICLINK_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Ppriclist>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("PPRICLIST_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Pquotat>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("PQUOTAT_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Pquotatd>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("PQUOTATD_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Pquotatf>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("PQUOTATF_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Preceipt>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("PRECEIPT_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Preceiptd>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("PRECEIPTD_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Prequi>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("PREQUIS_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Prequisa>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("PREQUISA_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Prequisd>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("PREQUISD_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Prequiso>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("PREQUISO_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Prereport>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("PREREPORT_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Presp>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("PRESP_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Prespd>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("PRESPD_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Prestcov>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("PRESTCOV_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Preturn>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("PRETURN_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Preturnd>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("PRETURND_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Pricstruct>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("PRICSTRUCT_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Prmdadsu>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("PRMDADSU_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Propln>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("PROPLN_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Proplnh>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("PROPLNH_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Prorog>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("PROROG_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Prorogpce>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("PROROGPCE_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Prtscrwrk>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("PRTSCRWRK_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Purtr>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("PURTRS_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Pvcrfoot>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("PVCRFOOT_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Pvcrvat>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("PVCRVAT_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Pwrkorder>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("PWRKORDERS_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Pwrkpnd>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("PWRKPND_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Pwrkpnh>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("PWRKPNH_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Pwrkpoc>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("PWRKPOC_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Pwrkpop>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("PWRKPOP_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Pwrkpoq>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("PWRKPOQ_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Pwrkpqf>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("PWRKPQF_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Pwrkptd>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("PWRKPTD_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Pwrkpth>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("PWRKPTH_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Pwrkstt>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("PWRKSTT_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Pyrpar>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("PYRPAR_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Qlycrd>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("QLYCRD_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Qlycrdasw>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("QLYCRDASW_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Qlycrdnqa>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("QLYCRDNQA_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Qlycrdqst>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("QLYCRDQST_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Qlywrk>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("QLYWRK_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Queue>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("QUEUE_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Qurcri>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("QURCRI_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Qurcrival>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("QURCRIVAL_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Qurextract>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("QUREXTRACT_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Qurtmp>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("QURTMP_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Reachpar>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("REACHPAR_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Relbank>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("RELBANK_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Relbankrem>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("RELBANKREM_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Relmt940d>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("RELMT940D_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Repsec>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("REPSEC_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Resource>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("RESOURCES_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Resre>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("RESRES_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Ritenzione>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("RITENZIONE_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Rouope>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ROUOPE_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Rouopestd>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ROUOPESTD_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Rouscd>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ROUSCD_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Routing>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ROUTING_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Rplwst>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("RPLWST_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Rubassdef>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("RUBASSDEF_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Rubassdefp>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("RUBASSDEFP_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Rubassval>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("RUBASSVAL_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Rubassvalp>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("RUBASSVALP_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Rvacoed>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("RVACOED_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Rvacoeh>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("RVACOEH_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Saitr>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("SAITRS_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Saitrsdet>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("SAITRSDET_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Salesrep>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("SALESREP_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Saltr>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("SALTRS_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Sbgeo>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("SBGEO_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Sbpbl>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("SBPBL_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Scheduling>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("SCHEDULING_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Schgd>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("SCHGD_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Schgh>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("SCHGH_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Scmapar>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("SCMAPAR_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Scmdpar>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("SCMDPAR_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Scohead>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("SCOHEAD_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Scoitm>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("SCOITM_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Scomat>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("SCOMAT_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Scosrv>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("SCOSRV_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Scpasw>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("SCPASW_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Scpqst>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("SCPQST_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Scpqstcnd>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("SCPQSTCND_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Script>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("SCRIPT_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Sdelivery>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("SDELIVERY_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Sdeliveryd>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("SDELIVERYD_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Searesult>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("SEARESULT_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Season>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("SEASON_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Secact>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("SECACT_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Secpst>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("SECPST_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Secpstsel>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("SECPSTSEL_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Selcmg>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("SELCMG_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Selcmgli>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("SELCMGLIS_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Selssp>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("SELSSP_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Selsspcpn>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("SELSSPCPN_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<SeqAbank>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAbicond>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAbidatmrt>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAbidatwrh>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAbidim>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAbidimfld>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAbihiera>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAbiprfusr>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAbiregde>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAbiregorg>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAbireport>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAbireportd>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAbitabagg>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAbitabdat>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAbitabfld>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAbitabind>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAbitablnk>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAbitraunv>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAblob>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAcalcul>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAcccod>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAcce>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAchange>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAclob>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAcodnum>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAconsult>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqActcodpar>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAction>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqActiv>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqActl>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqActpar>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAdelete>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAdicadx>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAdictrt>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAdocblb>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAdocclb>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAdocfld>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAdocfnc>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAdocument>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAdopar>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAdoval>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAdovalau>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAdovalgrp>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAelt>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAeltlink>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAenchaine>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAentree>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAespion>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAexpv3>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAexpv3d>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAfctexe>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAfctfct>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAfctfcy>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAfctprf>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAfonction>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAglobvar>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAgrpcpy>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAgrpfcy>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAhisto>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAhistod>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAindex>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAlink>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAlistec>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAlisted>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAlisteh>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAlistel>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAlister>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAlistet>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAlnksub>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAlogin>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAlstrd>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAmaint>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAmemo>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAmenloc>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAmenuser>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAmetuti>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAmsk>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAmskact>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAmskpar>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAmskzon>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAnavcre>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAnavfil>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAnavig>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAnetvibe>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAnnuaire>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAobjbur>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAobjburmod>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAobjet>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAobjext>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAobjextd>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAobjextmp>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAobjextmpb>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAobjextmpc>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAobjextmpd>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAobjextmpe>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAobjextr>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAobjlnk>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAobjlst>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAobjprop>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAobjsel>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAobjtab>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAobjtxt>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAobjtxta>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAparimpexp>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqApatch>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqApatchmod>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAplcom>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqApllck>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAplstd>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAportmod>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAporttab>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAportuser>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAportvig>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAprintde>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAprinter>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAprocessu>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAproctexte>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAprofil>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAproman>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAprtau>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAprtbrw>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAptlpage>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAptlvw>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqArchpar>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqArchpare>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqArchparu>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqArchparw>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqArefaml>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAreftxt>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAreport>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAreport1>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAreporta>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAreportd>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAreportg>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAreportm>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAreportv>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAreportx>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAreportz>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqArole>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAssconf>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAstr>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAstractfld>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAstrfld>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAstrlist>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAstrlistd>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAstrmet>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAstrparfld>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAstrxml>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAstrxmld>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAstyle>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAstylec>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAstylep>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAsubprog>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAsubprogd>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAtabaud>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAtabdiv>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAtabind>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAtable>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAtabtab>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAtabzon>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAtexmod>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAtexte>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAtextra>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAtmptra>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAtransac>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAtype>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAudith>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAuditl>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAurl>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAusrbpr>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAutili>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAvalatt>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAvalnum>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAvarloc>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAview>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAviewb>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAviewc>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAviewd>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAviewfld>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAviewind>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAviewtab>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAvocab>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAvvtextra>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAvwtextra>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAwebserde>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAwebservic>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAwinbout>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAwinbro>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAwindow>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAwinpar>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAwrkhisde>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAwrkhisjoi>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAwrkhisme>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAwrkhissui>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAwrklnk>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAwrkpar>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAwrkparc>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAwrkparf>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAwrkparh>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAwrkparx>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAwrkreg>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAwrkregval>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAwrktrn>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAwrktrnd>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAwrkusr>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAwsdl>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqAwsdl1>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqBalana>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqBalance>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqBank>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqBanrec>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqBanrecd>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqBappoint>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqBatch>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqBenchtr>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqBetcpy>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqBetcpyl>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqBid>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqBilsta>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqBlacmm>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqBlaqty>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqBom>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqBomd>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqBomprn>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqBomret>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqBomwu>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqBox1099>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqBp1099begbal>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqBp1099prn>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqBpaddress>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqBpartner>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqBpcarrier>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqBpccateg>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqBpcinvlig>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqBpcinvliga>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqBpcinvvat>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqBpcustmvt>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqBpcustomer>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqBpdlvcust>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqBpexcept>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqBpmisc>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqBpmisccgf>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqBps1099gen>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqBps1099mnt>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqBps1099pay>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqBps1099paybb>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqBpscateg>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqBpshisupln>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqBpshisupp>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqBpsinvlig>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqBpsinvliga>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqBpsupplier>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqBpsuppmvt>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqBrdkey>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqBud>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqBudforcal>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqBudod>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqBudod1>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqBudpar>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqBudpuraud>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqBudvarcal>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqBudver>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqCaauz>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqCacce>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqCaccedef>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqCadiedef>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqCadistmp>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqCadsp>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqCalcdbg>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqCallattemp>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqCapvar>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqCararea>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqCarprice>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqCblob>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqCbndet>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqCbnhea>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqCbnwrk>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqCdfcod>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqCdfcpy>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqCdffcy>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqCdfpar>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqCdiadsp>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqChqbok>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqChqnum>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqCmarketing>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqCompany>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqContact>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqContactcrm>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqContamt>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqContamtx>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqContcare>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqContcov>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqContext>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqContidx>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqContitm>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqContpbl>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqContqual>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqContrew>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqContrewx>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqContserv>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqContservx>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqConttempl>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqCorrep>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqCorrespond>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqCptanalin>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqCptfootlnk>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqCrmclob>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqCrmtr>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqCrmtrsval>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqCsfparh>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqCsfparl>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqCsfre>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqCtrlnivw>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqCunlisdet>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqCunliste>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqCunsession>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqDadcpy>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqDadfcy>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqDclvat>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqDclvatpay>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqDefval>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqDeprec>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqDeprecarc>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqDiahou>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqDietr>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqDietrsxx>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqDkskey>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqDoobpcint>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqDoobpclnk>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqDprmod>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqDprmodopt>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqDprmodrat>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqEdifrm>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqEdipar>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqEdiseg>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqEditrbk>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqEdtdadsu>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqEdttd>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqEfasact>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqEfasaffage>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqEfaschgimp>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqEfaschgppl>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqEfascnl>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqEfascrt>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqEfasiml>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqEfasiss>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqEfaslnkcnl>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqEfasmtc>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqEfasreeval>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqEfasvatreg>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqElofcim>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqElofcnl>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqElofvatreg>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqEmodele>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqEphyaffgeo>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqEphycrt>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqEphyiss>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqEscsre>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqEvefa>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqEvelof>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqExkword>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqExparam>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqExpens>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqExpensesh>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqFacgroup>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqFacility>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqFactor>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqFampb>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqFampbque>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqFampbrep>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqFiedic>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqFiedicfie>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqFiltd>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqFiscalyear>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqFiscyear>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqFrefld>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqFup>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqFupgrp>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqFuptot>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqFuptxt>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqFxdasset>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqFxdlifl>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqFxdmvt>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqFxdmvtd>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqGacccl>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqGacccode>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqGacccodlig>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqGaccdef>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqGaccdencod>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqGaccdim>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqGaccdudate>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqGaccentry>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqGaccentrya>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqGaccentryd>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqGaccfix>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqGaccfiyena>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqGaccfiyend>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqGaccgrupym>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqGaccount>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqGaccpym>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqGaccpymlik>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqGaccpymprt>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqGacctmp>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqGacctmpa>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqGacctmpd>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqGacm>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqGajousta>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqGaparbse>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqGapardum>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqGautace>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqGautaced>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqGautacef>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqGbagscr>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqGcaccoa>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqGccegrupym>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqGccepym>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqGccepymlik>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqGccepymprt>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqGclcacepar>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqGcoa>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqGcommit>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqGcommitd>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqGcommitx>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqGdiaacc>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqGdiaaccd>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqGdiaentry>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqGdiaentryd>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqGdie>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqGdudscr>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqGentlot>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqGentlota>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqGentlotd>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqGentloth>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqGfupscr>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqGjoucoa>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqGjournal>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqGled>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqGrpacemtc>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqGrpautace>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqGrpcur>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqGrpdsp>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqGrpsac>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqGtabacc>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqGtabacc2>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqGtmpmtc>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqGtypaccent>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqGvarcodpar>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqGvargau>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqGvarpargau>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqGvarparval>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqHd1clob>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqHd2clob>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqHd3clob>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqHd4clob>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqHd5clob>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqHd6clob>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqHd7clob>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqHd8clob>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqHdktask>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqHdktaskinv>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqHdktr>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqHdktrsval>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqHistocrm>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqHistodud>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqHistoomm>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqHonlin>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqHonprv>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqHoroitm>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqIlogimg>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqImcdetprt>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqInterven>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqInvdacpar>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqInvope>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqInvpar>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqInvpcr>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqInvprb>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqInvpri>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqInvsta>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqItcdet>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqItcdetprt>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqItcmat>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqItcmatch>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqItcnat>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqItcwst>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqItcwstw>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqItfitc>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqItmabcwrk>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqItmacggrp>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqItmbom>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqItmbp>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqItmbpc>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqItmcateg>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqItmcomp>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqItmcost>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqItmcpplnk>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqItmcusnom>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqItmfacilit>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqItmmaster>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqItmmvt>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqItmmvthi>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqItmsale>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqLabelprn>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqLastcusmvt>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqLastsupmvt>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqLayoutfa>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqLead>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqLnkcptabd>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqLnkcptabx3>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqLocalizat>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqMachine>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqMacitn>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqMacwarreq>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqMailing>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqMailxml>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqMailxmld>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqMarassdef>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqMarassrep>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqMardef>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqMardefval>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqMarrepsec>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqMarsct>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqMatchcode>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqMatchtol>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqMatcstw>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqMedia>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqMespar>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqMfcdetprt>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqMfcmat>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqMfcnat>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqMfcprt>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqMfcprtnat>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqMfcscrap>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqMfctyprel>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqMfcwst>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqMfganl>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqMfgbsmwrk>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqMfgcost>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqMfghead>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqMfgheadtrk>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqMfgitm>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqMfgitmtrk>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqMfgmat>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqMfgmattrk>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqMfgope>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqMfgopetrk>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqMfgprn>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqMfgtr>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqMfgversion>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqMfgwip>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqMkglevel>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqMkgopg>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqMkgqur>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqMkgqurppl>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqMmsdefval>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqMmspar>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqMtcauto>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqMtcbatch>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqMtcgautmp>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqMtkcrdasw>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqMtohead>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqMtolink>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqOmmresult>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqOmmrpt>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqOperation>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqOppor>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqOrdcomp>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqOrdcov>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqOrder>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqOrdoopar>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqOrdoppar>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqOvenat>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqOverhead>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqParesc>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqParflux>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqParfluxdet>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqParjal>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqParldap>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqParmrp>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqParmto>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqParsta1>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqParsta2>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqParstalig>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqParstoacc>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqPartaxusa>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqPartrzl>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqPartrzldet>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqParwipacc>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqParwipacc1>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqPayaccnum>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqPayaccnumd>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqPayfrm>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqPaylot>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqPaymenta>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqPaymentd>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqPaymenth>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqPaymtctmp>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqPaymtctmp2>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqPayorder>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqPaytmp>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqPdpdet>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqPdphea>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqPeriod>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqPfootinv>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqPhonecall>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqPhoning>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqPhyelt>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqPinvoice>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqPinvoiced>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqPinvoicev>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqPitcount>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqPitdeb>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqPitdebd>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqPivot>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqPivzon>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqPiwrk>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqPlgmkg>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqPlgopg>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqPlmdefval>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqPlmpar>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqPool>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqPorder>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqPorderc>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqPorderp>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqPorderq>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqPorditm>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqPoscod>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqPpreason>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqPpricconf>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqPpricfich>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqPpriclink>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqPpriclist>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqPquotat>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqPquotatd>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqPquotatf>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqPreceipt>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqPreceiptd>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqPrequi>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqPrequisa>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqPrequisd>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqPrequiso>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqPrereport>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqPresp>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqPrespd>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqPrestcov>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqPreturn>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqPreturnd>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqPricstruct>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqPrmdadsu>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqPropln>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqProplnh>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqProrog>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqProrogpce>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqPrtscrwrk>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqPurtr>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqPvcrfoot>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqPvcrvat>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqPwrkorder>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqPwrkpnd>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqPwrkpnh>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqPwrkpoc>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqPwrkpop>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqPwrkpoq>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqPwrkpqf>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqPwrkptd>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqPwrkpth>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqPwrkstt>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqPyrpar>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqQlycrd>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqQlycrdasw>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqQlycrdnqa>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqQlycrdqst>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqQlywrk>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqQueue>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqQurcri>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqQurcrival>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqQurextract>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqQurtmp>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqReachpar>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqRelbank>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqRelbankrem>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqRelmt940d>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqRepsec>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqResource>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqResre>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqRitenzione>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqRouope>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqRouopestd>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqRouscd>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqRouting>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqRplwst>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqRubassdef>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqRubassdefp>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqRubassval>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqRubassvalp>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqRvacoed>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqRvacoeh>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqSaitr>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqSaitrsdet>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqSalesrep>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqSaltr>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqSbgeo>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqSbpbl>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqScheduling>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqSchgd>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqSchgh>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqScmapar>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqScmdpar>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqScohead>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqScoitm>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqScomat>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqScosrv>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqScpasw>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqScpqst>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqScpqstcnd>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqScript>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqSdelivery>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqSdeliveryd>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqSearesult>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqSeason>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqSecact>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqSecpst>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqSecpstsel>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqSelcmg>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqSelcmgli>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqSelssp>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqSelsspcpn>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqSerrequest>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqSetmac>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqSetmaccpn>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqSfootinv>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqSincdet>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqSincent>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqSinvoice>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqSinvoiced>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqSinvoicep>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqSinvoicev>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqSlotmd>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqSlotmh>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqSmvtd>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqSmvtdval>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqSmvth>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqSoi>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqSolresult>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqSolution>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqSorder>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqSorderc>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqSorderp>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqSorderq>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqSpack>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqSpackd>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqSpprtconf>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqSpreason>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqSpricconf>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqSpricfich>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqSpricincr>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqSpriclink>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqSpriclist>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqSpricprtq>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqSquote>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqSquoted>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqSremac>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqSremaccpn>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqSresat>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqSrestat>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqSretempl>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqSreturn>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqSreturnd>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqStat>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqStatprv>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqStjadj>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqStjtmp>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqStkmvtadj>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqStkmvtitc>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqStkregwrk>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqStktr>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqStoaccpar>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqStoall>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqStock>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqStocost>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqStojou>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqStojouove>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqStojouval>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqStoloc>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqStolocaff>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqStolocre>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqStolot>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqStolotfcy>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqStomvtcost>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqStopar>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqStopred>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqStopreh>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqStopreli>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqStoprelisw>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqStoprew>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqStoqlyd>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqStoqlyh>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqStoqlysmp>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqStoqual>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqStoreo>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqStoser>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqStosrg>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqStosrgw>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqStosynw>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqStotrk>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqStotrkwrk>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqStovalcum>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqStovalwrk>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqStowipw>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqSubcont>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqSvcrfoot>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqSvcrvat>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqSwrkdlv>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqSwrkinv>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqSyncdata>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqSynclink>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqSyncpar>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqTaaaxxx>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqTabacclik>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqTaballrul>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqTabbomalt>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqTabbudtyp>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqTabchange>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqTabcoeff>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqTabcostmet>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqTabcostmvt>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqTabcouaff>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqTabcountry>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqTabctl>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqTabcur>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqTabdepagio>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqTabexpen>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqTabfilban>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqTabfiltd>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqTabfor>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqTabgeocod>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqTablan>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqTablincfg>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqTabloctyp>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqTabmat>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqTabmodeliv>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqTabmsg>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqTabpackage>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqTabpayterm>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqTabpaytyp>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqTabpivtyp>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqTabprecod>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqTabprtmod>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqTabratvat>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqTabreopol>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqTabroualt>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqTabround>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqTabsafsto>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqTabsca>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqTabsivtyp>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqTabsohtyp>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqTabstasto>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqTabstorul>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqTabsubdiv>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqTabunavail>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqTabunit>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqTabvac>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqTabvat>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqTabvatexe>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqTabweedia>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqTabwipsto>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqTabwrkctr>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqTask>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqTaxlink>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqTdsprv>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqTdupdclc>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqTexclob>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqTexcpt>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqTgrli>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqTgrlisfie>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqTgrlislnk>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqTgrssp>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqTmp2055>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqTmp2855>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqTmpbla>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqTmpcnsban>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqTmpcnvecar>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqTmpcptdta>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqTmpdero>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqTmpexpense>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqTmpfasphy>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqTmpfup0>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqTmpfup1>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqTmpfup2>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqTmpfupcmt>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqTmpinvexp>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqTmpinvexpw>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqTmpiptacpt>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqTmpmasfa>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqTmpmasfa2>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqTmpmaslck>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqTmpmaslea>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqTmpmasphy>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqTmppaydud>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqTmppaydud2>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqTmppaytot>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqTmpplnfa>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqTmpsitu>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqTmptchange>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqTradeshow>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqTrcabx3>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqTrcvcrdoc>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqTxsa>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqTxsd>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqTxsm>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqTxsp>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqTxsv>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqTxsw>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqTypace>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqTypaceint>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqUnitoftime>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqUnpaid>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqUporder>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqUporderc>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqUporderp>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqUporderq>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqVathi>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqVcussea>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqVsorder>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqVsorderc>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqVsorderp>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqVsorderq>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqVwsco>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqWarflyer>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqWarreqcpn>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqWarrequest>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqWcunlisdet>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqWipcost>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqWipresw>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqWipscpm>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqWipscpo>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqWiptmp>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqWorkcost>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqWorkload>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqWorkstatio>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqWrkstocn>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqWrkstoper>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqWstanl>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqWstolotfcy>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqWstoqlyd>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqXadcpar>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqXaindref>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqXaitmlbl>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqXaitmnot>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqXaitmnotl>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqXamatiss>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqXamytmp>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqXanapar>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqXapckass>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqXapckexcep>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqXasfchi>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqXasfctxn>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqXashift>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqXasqlobj>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqXasqlver>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqXateam>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqXateamhi>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqXatmatiss>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqXatmpli>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqXatpckass>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqXbcir>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqXbedibp>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqXbedipar>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqXbko>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqXbmanrec>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqXbmiscinv>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqXbol>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqXbold>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqXbppv>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqXbrecnoinv>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqXbsohldcod>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqXbtmpcsrq>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqXcapppar>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqXccrpt1>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqXcmerpar>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqXcordapp>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqXcpaylck>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqXcpaylktmp>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqXcspscnt>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqXcspsmsg>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqXctxnlog>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqXcussch>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqZaddress>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqZinventwho>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqZordlinkr>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqZporderdt>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqZsinvmax2ivv>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqZstyldiscon>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqZstylname>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqZtest>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SeqZtt>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<Serrequest>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("SERREQUEST_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Setmac>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("SETMAC_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Setmaccpn>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("SETMACCPN_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Sfootinv>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("SFOOTINV_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Sincdet>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("SINCDET_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Sincent>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("SINCENT_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Sinvoice>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("SINVOICE_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Sinvoiced>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("SINVOICED_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Sinvoicep>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("SINVOICEP_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Sinvoicev>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("SINVOICEV_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Slotmd>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("SLOTMD_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Slotmh>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("SLOTMH_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Smvtd>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("SMVTD_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Smvtdval>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("SMVTDVAL_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Smvth>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("SMVTH_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Soi>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("SOI_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Solresult>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("SOLRESULT_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Solution>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("SOLUTION_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Sorder>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("SORDER_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Sorderc>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("SORDERC_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Sorderp>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("SORDERP_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Sorderq>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("SORDERQ_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Spack>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("SPACK_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Spackd>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("SPACKD_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Spprtconf>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("SPPRTCONF_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Spreason>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("SPREASON_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Spricconf>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("SPRICCONF_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Spricfich>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("SPRICFICH_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Spricincr>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("SPRICINCR_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Spriclink>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("SPRICLINK_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Spriclist>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("SPRICLIST_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Spricprtq>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("SPRICPRTQ_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Squote>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("SQUOTE_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Squoted>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("SQUOTED_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Sremac>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("SREMAC_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Sremaccpn>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("SREMACCPN_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Sresat>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("SRESAT_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Srestat>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("SRESTAT_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Sretempl>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("SRETEMPL_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Sreturn>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("SRETURN_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Sreturnd>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("SRETURND_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Stat>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("STAT_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Statprv>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("STATPRV_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Stjtmp>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("STJTMP_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Stkmvtadj>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("STKMVTADJ_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Stkmvtitc>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("STKMVTITC_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Stkregwrk>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("STKREGWRK_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Stktr>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("STKTRS_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Stoaccpar>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("STOACCPAR_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Stoall>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("STOALL_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Stock>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("STOCK_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Stocost>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("STOCOST_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Stojou>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("STOJOU_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Stojouove>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("STOJOUOVE_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Stojouval>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("STOJOUVAL_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Stoloc>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("STOLOC_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Stolocaff>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("STOLOCAFF_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Stolocre>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("STOLOCRES_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Stolot>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("STOLOT_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Stolotfcy>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("STOLOTFCY_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Stomvtcost>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("STOMVTCOST_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Stopar>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("STOPAR_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Stopred>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("STOPRED_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Stopreh>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("STOPREH_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Stopreli>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("STOPRELIS_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Stoprelisw>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("STOPRELISW_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Stoprew>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("STOPREW_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Stoqlyd>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("STOQLYD_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Stoqlyh>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("STOQLYH_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Stoqlysmp>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("STOQLYSMP_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Stoqual>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("STOQUAL_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Storeo>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("STOREO_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Stoser>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("STOSER_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Stosrg>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("STOSRG_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Stosrgw>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("STOSRGW_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Stosynw>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("STOSYNW_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Stotrk>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("STOTRK_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Stotrkwrk>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("STOTRKWRK_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Stovalcum>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("STOVALCUM_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Stovalwrk>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("STOVALWRK_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Stowipw>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("STOWIPW_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Subcont>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("SUBCONT_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Svcrfoot>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("SVCRFOOT_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Svcrvat>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("SVCRVAT_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Swrkdlv>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("SWRKDLV_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Swrkinv>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("SWRKINV_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Syncdata>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("SYNCDATA_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Synclink>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("SYNCLINK_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Syncpar>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("SYNCPAR_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Taaaxxx>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("TAAAXXX_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Tabacclik>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("TABACCLIK_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Taballrul>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("TABALLRUL_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Tabbomalt>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("TABBOMALT_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Tabbudtyp>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("TABBUDTYP_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Tabchange>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("TABCHANGE_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Tabcoeff>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("TABCOEFF_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Tabcostmet>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("TABCOSTMET_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Tabcostmvt>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("TABCOSTMVT_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Tabcouaff>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("TABCOUAFF_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Tabcountry>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("TABCOUNTRY_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Tabctl>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("TABCTL_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Tabcur>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("TABCUR_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Tabdepagio>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("TABDEPAGIO_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Tabexpen>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("TABEXPENS_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Tabfilban>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("TABFILBAN_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Tabfiltd>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("TABFILTDS_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Tabfor>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("TABFOR_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Tabgeocod>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("TABGEOCOD_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Tablan>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("TABLAN_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Tablincfg>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("TABLINCFG_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Tabloctyp>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("TABLOCTYP_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Tabmat>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("TABMAT_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Tabmodeliv>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("TABMODELIV_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Tabmsg>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("TABMSG_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Tabpackage>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("TABPACKAGE_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Tabpayterm>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("TABPAYTERM_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Tabpaytyp>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("TABPAYTYP_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Tabpivtyp>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("TABPIVTYP_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Tabprecod>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("TABPRECOD_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Tabprtmod>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("TABPRTMOD_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Tabratvat>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("TABRATVAT_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Tabreopol>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("TABREOPOL_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Tabroualt>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("TABROUALT_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Tabround>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("TABROUND_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Tabsafsto>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("TABSAFSTO_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Tabsca>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("TABSCA_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Tabsivtyp>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("TABSIVTYP_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Tabsohtyp>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("TABSOHTYP_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Tabstasto>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("TABSTASTO_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Tabstorul>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("TABSTORUL_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Tabsubdiv>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("TABSUBDIV_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Tabunavail>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("TABUNAVAIL_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Tabunit>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("TABUNIT_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Tabvac>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("TABVAC_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Tabvat>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("TABVAT_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Tabvatexe>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("TABVATEXE_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Tabweedia>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("TABWEEDIA_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Tabwipsto>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("TABWIPSTO_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Tabwrkctr>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("TABWRKCTR_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Task>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("TASK_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Taxlink>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("TAXLINK_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Tdsprv>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("TDSPRV_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Tdupdclc>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("TDUPDCLC_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Texclob>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("TEXCLOB_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Texcpt>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("TEXCPT_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Tgrli>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("TGRLIS_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Tgrlisfie>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("TGRLISFIE_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Tgrlislnk>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("TGRLISLNK_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Tgrssp>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("TGRSSP_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Tmp2055>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("TMP2055_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Tmp2855>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("TMP2855_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Tmpbla>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("TMPBLA_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Tmpcnsban>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("TMPCNSBAN_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Tmpcnvecar>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("TMPCNVECAR_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Tmpcptdta>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("TMPCPTDTA_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Tmpdero>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("TMPDERO_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Tmpexpense>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("TMPEXPENSE_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Tmpfasphy>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("TMPFASPHY_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Tmpfup0>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("TMPFUP0_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Tmpfup1>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("TMPFUP1_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Tmpfup2>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("TMPFUP2_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Tmpfupcmt>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("TMPFUPCMT_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Tmpinvexp>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("TMPINVEXP_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Tmpinvexpw>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("TMPINVEXPW_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Tmpiptacpt>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("TMPIPTACPT_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Tmpmasfa>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("TMPMASFAS_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Tmpmasfa2>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("TMPMASFA2_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Tmpmaslck>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("TMPMASLCK_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Tmpmaslea>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("TMPMASLEA_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Tmpmasphy>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("TMPMASPHY_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Tmppaydud>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("TMPPAYDUD_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Tmppaydud2>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("TMPPAYDUD2_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Tmppaytot>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("TMPPAYTOT_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Tmpplnfa>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("TMPPLNFAS_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Tmpsitu>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("TMPSITU_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Tmptchange>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("TMPTCHANGE_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Tradeshow>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("TRADESHOW_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Trcabx3>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("TRCABX3_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Trcvcrdoc>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("TRCVCRDOC_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Txsa>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("TXSA_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Txsd>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("TXSD_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Txsm>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("TXSM_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Txsp>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("TXSP_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Txsv>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("TXSV_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Txsw>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("TXSW_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Typace>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("TYPACE_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Typaceint>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("TYPACEINT_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Unitoftime>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("UNITOFTIME_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Unpaid>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("UNPAID_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Uporder>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("UPORDER_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Uporderc>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("UPORDERC_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Uporderp>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("UPORDERP_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Uporderq>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("UPORDERQ_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Vathi>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("VATHIS_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Vsorder>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("VSORDER_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Vsorderc>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("VSORDERC_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Vsorderp>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("VSORDERP_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Vsorderq>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("VSORDERQ_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Warflyer>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("WARFLYER_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Warreqcpn>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("WARREQCPN_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Warrequest>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("WARREQUEST_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Wcunlisdet>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("WCUNLISDET_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Wipcost>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("WIPCOST_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Wipresw>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("WIPRESW_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Wipscpm>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("WIPSCPM_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Wipscpo>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("WIPSCPO_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Wiptmp>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("WIPTMP_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Workcost>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("WORKCOST_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Workload>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("WORKLOAD_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Workstatio>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("WORKSTATIO_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Wrkstocn>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("WRKSTOCNS_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Wrkstoper>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("WRKSTOPER_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Wstanl>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("WSTANL_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Wstolotfcy>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("WSTOLOTFCY_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Wstoqlyd>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("WSTOQLYD_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Xadcpar>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("XADCPAR_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Xaindref>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("XAINDREF_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Xaitmlbl>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("XAITMLBL_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Xaitmnot>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("XAITMNOT_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Xaitmnotl>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("XAITMNOTL_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Xamatiss>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("XAMATISS_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Xamytmp>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("XAMYTMP_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Xanapar>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("XANAPAR_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Xapckass>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("XAPCKASS_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Xapckexcep>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("XAPCKEXCEP_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Xasfchi>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("XASFCHIS_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Xasfctxn>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("XASFCTXN_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Xashift>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("XASHIFTS_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Xateam>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("XATEAM_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Xateamhi>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("XATEAMHIS_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Xatmatiss>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("XATMATISS_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Xatmpli>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("XATMPLI_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Xatpckass>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("XATPCKASS_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Xbcir>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("XBCIR_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Xbedibp>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("XBEDIBP_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Xbedipar>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("XBEDIPAR_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Xbko>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("XBKO_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Xbmanrec>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("XBMANREC_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Xbmiscinv>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("XBMISCINV_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Xbol>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("XBOL_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Xbold>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("XBOLD_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Xbppv>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("XBPPV_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Xbrecnoinv>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("XBRECNOINV_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Xbsohldcod>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("XBSOHLDCOD_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Xbtmpcsrq>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("XBTMPCSRQ_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Xcapppar>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("XCAPPPAR_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Xccrpt1>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("XCCRPT1_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Xcmerpar>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("XCMERPAR_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Xcordapp>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("XCORDAPP_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Xcpaylck>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("XCPAYLCK_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Xcpaylktmp>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("XCPAYLKTMP_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Xcspscnt>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("XCSPSCNT_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Xcspsmsg>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("XCSPSMSG_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Xctxnlog>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("XCTXNLOG_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Zaddress>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ZADDRESS_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Zinventwho>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ZINVENTWHO_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Zordlinkr>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ZORDLINKR_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Zporderdt>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ZPORDERDTS_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Zstyldiscon>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ZSTYLDISCON_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Zstylname>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ZSTYLNAMES_ROWID")
                    .IsClustered(false);
            });

            modelBuilder.Entity<Ztt>(entity =>
            {
                entity.HasKey(e => e.Rowid)
                    .HasName("ZTT_ROWID")
                    .IsClustered(false);
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}